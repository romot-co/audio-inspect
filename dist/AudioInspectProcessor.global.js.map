{"version":3,"sources":["../node_modules/webfft/lib/kissfft/KissFFT.mjs","../node_modules/webfft/lib/kissfft/webfftWrapper.js","../node_modules/webfft/lib/indutny/fft.js","../node_modules/webfft/lib/indutny/webfftWrapper.js","../node_modules/webfft/lib/cross/Cross.mjs","../node_modules/webfft/lib/cross/FFT.js","../node_modules/webfft/lib/cross/webfftWrapper.js","../node_modules/webfft/lib/nayuki/fft.js","../node_modules/webfft/lib/nayuki/webfftWrapper.js","../node_modules/webfft/lib/nayukic/NayukiCFFT.mjs","../node_modules/webfft/lib/nayukic/FFT.js","../node_modules/webfft/lib/nayukic/webfftWrapper.js","../node_modules/webfft/lib/nockert/complex.js","../node_modules/webfft/lib/nockert/webfftWrapper.js","../node_modules/webfft/lib/mljs/fftlib.js","../node_modules/webfft/lib/mljs/webfftWrapper.js","../node_modules/webfft/lib/utils/checkCapabilities.js","../node_modules/webfft/lib/kissfftmodified/KissFFT.mjs","../node_modules/webfft/lib/kissfftmodified/webfftWrapper.js","../node_modules/webfft/lib/indutnymodified/fft.js","../node_modules/webfft/lib/main.js","../src/features/index.ts","../src/types.ts","../src/core/utils.ts","../src/features/time.ts","../src/core/fft-provider.ts","../src/features/frequency.ts","../src/features/spectral.ts","../src/features/energy.ts","../src/features/dynamics.ts","../src/features/stereo.ts","../src/features/vad.ts","../src/features/loudness.ts","../src/core/AudioInspectProcessor.ts"],"sourcesContent":["\nvar KissFFTModule = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmExports;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)\"}function instantiateSync(file,info){var module;var binary=getBinarySync(file);module=new WebAssembly.Module(binary);var instance=new WebAssembly.Instance(module,info);return[instance,module]}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;wasmExports=exports;wasmMemory=wasmExports[\"c\"];updateMemoryViews();wasmTable=wasmExports[\"j\"];addOnInit(wasmExports[\"d\"]);removeRunDependency(\"wasm-instantiate\");return exports}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}var result=instantiateSync(wasmBinaryFile,info);return receiveInstance(result[0])}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var _emscripten_memcpy_big=(dest,src,num)=>HEAPU8.copyWithin(dest,src,src+num);var abortOnCannotGrowMemory=requestedSize=>{abort(\"OOM\")};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;abortOnCannotGrowMemory(requestedSize)};function getCFunc(ident){var func=Module[\"_\"+ident];return func}var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var ccall=function(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var cwrap=function(ident,returnType,argTypes,opts){var numericArgs=!argTypes||argTypes.every(type=>type===\"number\"||type===\"boolean\");var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}};var wasmImports={b:_emscripten_memcpy_big,a:_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=asm[\"d\"];var _kiss_fft_free=Module[\"_kiss_fft_free\"]=asm[\"e\"];var _free=Module[\"_free\"]=asm[\"f\"];var _kiss_fft_alloc=Module[\"_kiss_fft_alloc\"]=asm[\"g\"];var _malloc=Module[\"_malloc\"]=asm[\"h\"];var _kiss_fft=Module[\"_kiss_fft\"]=asm[\"i\"];var ___errno_location=asm[\"__errno_location\"];var stackSave=asm[\"k\"];var stackRestore=asm[\"l\"];var stackAlloc=asm[\"m\"];function intArrayFromBase64(s){try{var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg\n}\n\n);\n})();\nexport default KissFFTModule;","import KissFFTModule from \"./KissFFT.mjs\";\n\n(\"use strict\");\n\nvar kissFFTModule = KissFFTModule({});\n\nvar kiss_fft_alloc = kissFFTModule.cwrap(\"kiss_fft_alloc\", \"number\", [\n  \"number\",\n  \"number\",\n  \"number\",\n  \"number\",\n]);\n\nvar kiss_fft = kissFFTModule.cwrap(\"kiss_fft\", \"void\", [\n  \"number\",\n  \"number\",\n  \"number\",\n]);\n\nvar kiss_fft_free = kissFFTModule.cwrap(\"kiss_fft_free\", \"void\", [\"number\"]);\n\nclass KissFftWrapperWasm {\n  constructor(size) {\n    this.size = size;\n    this.fcfg = kiss_fft_alloc(this.size, false);\n    this.icfg = kiss_fft_alloc(this.size, true);\n\n    this.inptr = kissFFTModule._malloc(this.size * 8);\n\n    this.cin = new Float32Array(\n      kissFFTModule.HEAPU8.buffer,\n      this.inptr,\n      this.size * 2,\n    );\n  }\n\n  fft = function (inputArray) {\n    // TODO: figure out how to move this into the constructor without breaking things (unit tests will catch it)\n    const outptr = kissFFTModule._malloc(this.size * 8);\n\n    const cout = new Float32Array(\n      kissFFTModule.HEAPU8.buffer,\n      outptr,\n      this.size * 2,\n    );\n\n    this.cin.set(inputArray);\n\n    kiss_fft(this.fcfg, this.inptr, outptr);\n\n    // we need to free the memory of outptr before we return, so we need this too\n    let outputArray = new Float32Array(this.size * 2);\n    outputArray.set(cout);\n\n    kissFFTModule._free(outptr);\n\n    return outputArray;\n  };\n\n  dispose() {\n    kiss_fft_free(this.fcfg);\n    kiss_fft_free(this.icfg);\n    kissFFTModule._free(this.inptr);\n  }\n}\n\nexport default KissFftWrapperWasm;\n","\"use strict\";\n\nfunction FFT_indutny(size) {\n  this.size = size | 0;\n  if (this.size <= 1 || (this.size & (this.size - 1)) !== 0)\n    throw new Error(\"FFT size must be a power of two and bigger than 1\");\n\n  this._csize = size << 1;\n\n  // NOTE: Use of `var` is intentional for old V8 versions\n  var table = new Array(this.size * 2);\n  for (var i = 0; i < table.length; i += 2) {\n    const angle = (Math.PI * i) / this.size;\n    table[i] = Math.cos(angle);\n    table[i + 1] = -Math.sin(angle);\n  }\n  this.table = table;\n\n  // Find size's power of two\n  var power = 0;\n  for (var t = 1; this.size > t; t <<= 1) power++;\n\n  // Calculate initial step's width:\n  //   * If we are full radix-4 - it is 2x smaller to give inital len=8\n  //   * Otherwise it is the same as `power` to give len=4\n  this._width = power % 2 === 0 ? power - 1 : power;\n\n  // Pre-compute bit-reversal patterns\n  this._bitrev = new Array(1 << this._width);\n  for (var j = 0; j < this._bitrev.length; j++) {\n    this._bitrev[j] = 0;\n    for (var shift = 0; shift < this._width; shift += 2) {\n      var revShift = this._width - shift - 2;\n      this._bitrev[j] |= ((j >>> shift) & 3) << revShift;\n    }\n  }\n\n  this._out = null;\n  this._data = null;\n  this._inv = 0;\n}\n\nFFT_indutny.prototype.fromComplexArray = function fromComplexArray(complex, storage) {\n  var res = storage || new Array(complex.length >>> 1);\n  for (var i = 0; i < complex.length; i += 2) res[i >>> 1] = complex[i];\n  return res;\n};\n\nFFT_indutny.prototype.createComplexArray = function createComplexArray() {\n  const res = new Array(this._csize);\n  for (var i = 0; i < res.length; i++) res[i] = 0;\n  return res;\n};\n\nFFT_indutny.prototype.toComplexArray = function toComplexArray(input, storage) {\n  var res = storage || this.createComplexArray();\n  for (var i = 0; i < res.length; i += 2) {\n    res[i] = input[i >>> 1];\n    res[i + 1] = 0;\n  }\n  return res;\n};\n\nFFT_indutny.prototype.completeSpectrum = function completeSpectrum(spectrum) {\n  var size = this._csize;\n  var half = size >>> 1;\n  for (var i = 2; i < half; i += 2) {\n    spectrum[size - i] = spectrum[i];\n    spectrum[size - i + 1] = -spectrum[i + 1];\n  }\n};\n\nFFT_indutny.prototype.transform = function transform(out, data) {\n  if (out === data) throw new Error(\"Input and output buffers must be different\");\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._transform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT_indutny.prototype.realTransform = function realTransform(out, data) {\n  if (out === data) throw new Error(\"Input and output buffers must be different\");\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._realTransform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT_indutny.prototype.inverseTransform = function inverseTransform(out, data) {\n  if (out === data) throw new Error(\"Input and output buffers must be different\");\n\n  this._out = out;\n  this._data = data;\n  this._inv = 1;\n  this._transform4();\n  for (var i = 0; i < out.length; i++) out[i] /= this.size;\n  this._out = null;\n  this._data = null;\n};\n\n// radix-4 implementation\n//\n// NOTE: Uses of `var` are intentional for older V8 version that do not\n// support both `let compound assignments` and `const phi`\nFFT_indutny.prototype._transform4 = function _transform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform2(outOff, off, step);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform4(outOff, off, step);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var quarterLen = len >>> 2;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      // Full case\n      var limit = outOff + quarterLen;\n      for (var i = outOff, k = 0; i < limit; i += 2, k += step) {\n        const A = i;\n        const B = A + quarterLen;\n        const C = B + quarterLen;\n        const D = C + quarterLen;\n\n        // Original values\n        const Ar = out[A];\n        const Ai = out[A + 1];\n        const Br = out[B];\n        const Bi = out[B + 1];\n        const Cr = out[C];\n        const Ci = out[C + 1];\n        const Dr = out[D];\n        const Di = out[D + 1];\n\n        // Middle values\n        const MAr = Ar;\n        const MAi = Ai;\n\n        const tableBr = table[k];\n        const tableBi = inv * table[k + 1];\n        const MBr = Br * tableBr - Bi * tableBi;\n        const MBi = Br * tableBi + Bi * tableBr;\n\n        const tableCr = table[2 * k];\n        const tableCi = inv * table[2 * k + 1];\n        const MCr = Cr * tableCr - Ci * tableCi;\n        const MCi = Cr * tableCi + Ci * tableCr;\n\n        const tableDr = table[3 * k];\n        const tableDi = inv * table[3 * k + 1];\n        const MDr = Dr * tableDr - Di * tableDi;\n        const MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        const T0r = MAr + MCr;\n        const T0i = MAi + MCi;\n        const T1r = MAr - MCr;\n        const T1i = MAi - MCi;\n        const T2r = MBr + MDr;\n        const T2i = MBi + MDi;\n        const T3r = inv * (MBr - MDr);\n        const T3i = inv * (MBi - MDi);\n\n        // Final values\n        const FAr = T0r + T2r;\n        const FAi = T0i + T2i;\n\n        const FCr = T0r - T2r;\n        const FCi = T0i - T2i;\n\n        const FBr = T1r + T3i;\n        const FBi = T1i - T3r;\n\n        const FDr = T1r - T3i;\n        const FDi = T1i + T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n        out[C] = FCr;\n        out[C + 1] = FCi;\n        out[D] = FDr;\n        out[D + 1] = FDi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT_indutny.prototype._singleTransform2 = function _singleTransform2(outOff, off, step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const evenI = data[off + 1];\n  const oddR = data[off + step];\n  const oddI = data[off + step + 1];\n\n  const leftR = evenR + oddR;\n  const leftI = evenI + oddI;\n  const rightR = evenR - oddR;\n  const rightI = evenI - oddI;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = leftI;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = rightI;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT_indutny.prototype._singleTransform4 = function _singleTransform4(outOff, off, step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Ai = data[off + 1];\n  const Br = data[off + step];\n  const Bi = data[off + step + 1];\n  const Cr = data[off + step2];\n  const Ci = data[off + step2 + 1];\n  const Dr = data[off + step3];\n  const Di = data[off + step3 + 1];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T0i = Ai + Ci;\n  const T1r = Ar - Cr;\n  const T1i = Ai - Ci;\n  const T2r = Br + Dr;\n  const T2i = Bi + Di;\n  const T3r = inv * (Br - Dr);\n  const T3i = inv * (Bi - Di);\n\n  // Final values\n  const FAr = T0r + T2r;\n  const FAi = T0i + T2i;\n\n  const FBr = T1r + T3i;\n  const FBi = T1i - T3r;\n\n  const FCr = T0r - T2r;\n  const FCi = T0i - T2i;\n\n  const FDr = T1r - T3i;\n  const FDi = T1i + T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = FAi;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = FCi;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n\n// Real input radix-4 implementation\nFFT_indutny.prototype._realTransform4 = function _realTransform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform2(outOff, off >>> 1, step >>> 1);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform4(outOff, off >>> 1, step >>> 1);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var halfLen = len >>> 1;\n    var quarterLen = halfLen >>> 1;\n    var hquarterLen = quarterLen >>> 1;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      for (var i = 0, k = 0; i <= hquarterLen; i += 2, k += step) {\n        var A = outOff + i;\n        var B = A + quarterLen;\n        var C = B + quarterLen;\n        var D = C + quarterLen;\n\n        // Original values\n        var Ar = out[A];\n        var Ai = out[A + 1];\n        var Br = out[B];\n        var Bi = out[B + 1];\n        var Cr = out[C];\n        var Ci = out[C + 1];\n        var Dr = out[D];\n        var Di = out[D + 1];\n\n        // Middle values\n        var MAr = Ar;\n        var MAi = Ai;\n\n        var tableBr = table[k];\n        var tableBi = inv * table[k + 1];\n        var MBr = Br * tableBr - Bi * tableBi;\n        var MBi = Br * tableBi + Bi * tableBr;\n\n        var tableCr = table[2 * k];\n        var tableCi = inv * table[2 * k + 1];\n        var MCr = Cr * tableCr - Ci * tableCi;\n        var MCi = Cr * tableCi + Ci * tableCr;\n\n        var tableDr = table[3 * k];\n        var tableDi = inv * table[3 * k + 1];\n        var MDr = Dr * tableDr - Di * tableDi;\n        var MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        var T0r = MAr + MCr;\n        var T0i = MAi + MCi;\n        var T1r = MAr - MCr;\n        var T1i = MAi - MCi;\n        var T2r = MBr + MDr;\n        var T2i = MBi + MDi;\n        var T3r = inv * (MBr - MDr);\n        var T3i = inv * (MBi - MDi);\n\n        // Final values\n        var FAr = T0r + T2r;\n        var FAi = T0i + T2i;\n\n        var FBr = T1r + T3i;\n        var FBi = T1i - T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n\n        // Output final middle point\n        if (i === 0) {\n          var FCr = T0r - T2r;\n          var FCi = T0i - T2i;\n          out[C] = FCr;\n          out[C + 1] = FCi;\n          continue;\n        }\n\n        // Do not overwrite ourselves\n        if (i === hquarterLen) continue;\n\n        // In the flipped case:\n        // MAi = -MAi\n        // MBr=-MBi, MBi=-MBr\n        // MCr=-MCr\n        // MDr=MDi, MDi=MDr\n        var ST0r = T1r;\n        var ST0i = -T1i;\n        var ST1r = T0r;\n        var ST1i = -T0i;\n        var ST2r = -inv * T3i;\n        var ST2i = -inv * T3r;\n        var ST3r = -inv * T2i;\n        var ST3i = -inv * T2r;\n\n        var SFAr = ST0r + ST2r;\n        var SFAi = ST0i + ST2i;\n\n        var SFBr = ST1r + ST3i;\n        var SFBi = ST1i - ST3r;\n\n        var SA = outOff + quarterLen - i;\n        var SB = outOff + halfLen - i;\n\n        out[SA] = SFAr;\n        out[SA + 1] = SFAi;\n        out[SB] = SFBr;\n        out[SB + 1] = SFBi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT_indutny.prototype._singleRealTransform2 = function _singleRealTransform2(outOff, off, step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const oddR = data[off + step];\n\n  const leftR = evenR + oddR;\n  const rightR = evenR - oddR;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = 0;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT_indutny.prototype._singleRealTransform4 = function _singleRealTransform4(outOff, off, step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Br = data[off + step];\n  const Cr = data[off + step2];\n  const Dr = data[off + step3];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T1r = Ar - Cr;\n  const T2r = Br + Dr;\n  const T3r = inv * (Br - Dr);\n\n  // Final values\n  const FAr = T0r + T2r;\n\n  const FBr = T1r;\n  const FBi = -T3r;\n\n  const FCr = T0r - T2r;\n\n  const FDr = T1r;\n  const FDi = T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = 0;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n\nexport default FFT_indutny;\n","import FFT_indutny from \"./fft.js\";\r\n\r\nclass IndutnyFftWrapperJavascript {\r\n  constructor(size) {\r\n    this.size = size;\r\n    this.indutnyFft = new FFT_indutny(size);\r\n  }\r\n\r\n  fft(inputArr) {\r\n    const outputArr = new Float32Array(2 * this.size);\r\n    this.indutnyFft.transform(outputArr, inputArr);\r\n    return outputArr;\r\n  }\r\n}\r\n\r\nexport default IndutnyFftWrapperJavascript;\r\n","\nvar CrossModule = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmExports;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)\"}function instantiateSync(file,info){var module;var binary=getBinarySync(file);module=new WebAssembly.Module(binary);var instance=new WebAssembly.Instance(module,info);return[instance,module]}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;wasmExports=exports;wasmMemory=wasmExports[\"b\"];updateMemoryViews();wasmTable=wasmExports[\"e\"];addOnInit(wasmExports[\"c\"]);removeRunDependency(\"wasm-instantiate\");return exports}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}var result=instantiateSync(wasmBinaryFile,info);return receiveInstance(result[0])}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var abortOnCannotGrowMemory=requestedSize=>{abort(\"OOM\")};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;abortOnCannotGrowMemory(requestedSize)};function getCFunc(ident){var func=Module[\"_\"+ident];return func}var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var ccall=function(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var cwrap=function(ident,returnType,argTypes,opts){var numericArgs=!argTypes||argTypes.every(type=>type===\"number\"||type===\"boolean\");var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}};var wasmImports={a:_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=asm[\"c\"];var _fftCross=Module[\"_fftCross\"]=asm[\"d\"];var ___errno_location=asm[\"__errno_location\"];var _malloc=Module[\"_malloc\"]=asm[\"f\"];var _free=Module[\"_free\"]=asm[\"g\"];var stackSave=asm[\"h\"];var stackRestore=asm[\"i\"];var stackAlloc=asm[\"j\"];function intArrayFromBase64(s){try{var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg\n}\n\n);\n})();\nexport default CrossModule;","import CrossModule from \"./Cross.mjs\";\n\n(\"use strict\");\n\nvar crossModule = CrossModule({});\n\nvar fftCross = crossModule.cwrap(\"fftCross\", \"void\", [\n  \"number\",\n  \"number\",\n  \"number\",\n  \"number\",\n  \"number\",\n  \"number\",\n]);\n\nfunction FFTCross(size) {\n  this.size = size;\n  this.n = size * 8;\n  this.ptr = crossModule._malloc(this.n * 4);\n  this.ri = new Uint8Array(crossModule.HEAPU8.buffer, this.ptr, this.n);\n  this.ii = new Uint8Array(\n    crossModule.HEAPU8.buffer,\n    this.ptr + this.n,\n    this.n,\n  );\n\n  this.transform = function (real, imag, inverse) {\n    var ptr = this.ptr;\n    var n = this.n;\n    this.ri.set(new Uint8Array(real.buffer));\n    this.ii.set(new Uint8Array(imag.buffer));\n    fftCross(this.size, inverse, ptr, ptr + n, ptr + n * 2, ptr + n * 3);\n    var ro = new Float64Array(\n      crossModule.HEAPU8.buffer,\n      ptr + n * 2,\n      this.size,\n    );\n    var io = new Float64Array(\n      crossModule.HEAPU8.buffer,\n      ptr + n * 3,\n      this.size,\n    );\n    return { real: ro, imag: io };\n  };\n\n  this.dispose = function () {\n    crossModule._free(this.ptr);\n  };\n}\n\nexport default FFTCross;\n","import FFTCross from \"./FFT.js\";\r\n\r\nclass CrossFftWrapperWasm {\r\n  constructor(size) {\r\n    this.size = size;\r\n    this.fftcross = new FFTCross(size);\r\n    this.real = new Float64Array(this.size);\r\n    this.imag = new Float64Array(this.size);\r\n  }\r\n\r\n  fft(inputArr) {\r\n    for (var i = 0; i < this.size; i++) {\r\n      this.real[i] = inputArr[2 * i];\r\n      this.imag[i] = inputArr[2 * i + 1];\r\n    }\r\n    const out = this.fftcross.transform(this.real, this.imag, false);\r\n    const outputArr = new Float32Array(2 * this.size);\r\n    for (var i = 0; i < this.size; i++) {\r\n      outputArr[2 * i] = out.real[i];\r\n      outputArr[2 * i + 1] = out.imag[i];\r\n    }\r\n    return outputArr;\r\n  }\r\n}\r\n\r\nexport default CrossFftWrapperWasm;\r\n","/*\n * Free FFT and convolution (JavaScript)\n *\n * Copyright (c) 2014 Project Nayuki\n * http://www.nayuki.io/page/free-small-fft-in-multiple-languages\n *\n * (MIT License)\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n * - The above copyright notice and this permission notice shall be included in\n *   all copies or substantial portions of the Software.\n * - The Software is provided \"as is\", without warranty of any kind, express or\n *   implied, including but not limited to the warranties of merchantability,\n *   fitness for a particular purpose and noninfringement. In no event shall the\n *   authors or copyright holders be liable for any claim, damages or other\n *   liability, whether in an action of contract, tort or otherwise, arising from,\n *   out of or in connection with the Software or the use or other dealings in the\n *   Software.\n *\n * Slightly restructured by Chris Cannam, cannam@all-day-breakfast.com\n */\n\n\"use strict\";\n\n/*\n * Construct an object for calculating the discrete Fourier transform (DFT) of size n, where n is a power of 2.\n */\nfunction FFTNayuki(n) {\n  this.n = n;\n  this.levels = -1;\n\n  for (var i = 0; i < 32; i++) {\n    if (1 << i == n) {\n      this.levels = i; // Equal to log2(n)\n    }\n  }\n  if (this.levels == -1) {\n    throw \"Length is not a power of 2\";\n  }\n\n  this.cosTable = new Array(n / 2);\n  this.sinTable = new Array(n / 2);\n  for (var i = 0; i < n / 2; i++) {\n    this.cosTable[i] = Math.cos((2 * Math.PI * i) / n);\n    this.sinTable[i] = Math.sin((2 * Math.PI * i) / n);\n  }\n\n  /*\n   * Computes the discrete Fourier transform (DFT) of the given complex vector, storing the result back into the vector.\n   * The vector's length must be equal to the size n that was passed to the object constructor, and this must be a power of 2. Uses the Cooley-Tukey decimation-in-time radix-2 algorithm.\n   */\n  this.forward = function (real, imag) {\n    var n = this.n;\n\n    // Bit-reversed addressing permutation\n    for (var i = 0; i < n; i++) {\n      var j = reverseBits(i, this.levels);\n      if (j > i) {\n        var temp = real[i];\n        real[i] = real[j];\n        real[j] = temp;\n        temp = imag[i];\n        imag[i] = imag[j];\n        imag[j] = temp;\n      }\n    }\n\n    // Cooley-Tukey decimation-in-time radix-2 FFT\n    for (var size = 2; size <= n; size *= 2) {\n      var halfsize = size / 2;\n      var tablestep = n / size;\n      for (var i = 0; i < n; i += size) {\n        for (var j = i, k = 0; j < i + halfsize; j++, k += tablestep) {\n          var tpre = real[j + halfsize] * this.cosTable[k] + imag[j + halfsize] * this.sinTable[k];\n          var tpim = -real[j + halfsize] * this.sinTable[k] + imag[j + halfsize] * this.cosTable[k];\n          real[j + halfsize] = real[j] - tpre;\n          imag[j + halfsize] = imag[j] - tpim;\n          real[j] += tpre;\n          imag[j] += tpim;\n        }\n      }\n    }\n\n    // Returns the integer whose value is the reverse of the lowest 'bits' bits of the integer 'x'.\n    function reverseBits(x, bits) {\n      var y = 0;\n      for (var i = 0; i < bits; i++) {\n        y = (y << 1) | (x & 1);\n        x >>>= 1;\n      }\n      return y;\n    }\n  };\n\n  /*\n   * Computes the inverse discrete Fourier transform (IDFT) of the given complex vector, storing the result back into the vector.\n   * The vector's length must be equal to the size n that was passed to the object constructor, and this must be a power of 2. This is a wrapper function. This transform does not perform scaling, so the inverse is not a true inverse.\n   */\n  this.inverse = function (real, imag) {\n    forward(imag, real);\n  };\n}\n\nexport default FFTNayuki;\n","import FFTNayuki from \"./fft.js\"; // this one has the sin/cos tables precomputed\r\n\r\nclass NayukiFftWrapperJavascript {\r\n  constructor(size) {\r\n    this.size = size;\r\n    this.fftNayuki = new FFTNayuki(size);\r\n  }\r\n\r\n  fft(inputArr) {\r\n    // it uses the same buffer for input and output\r\n    const real = new Float32Array(this.size);\r\n    const imag = new Float32Array(this.size);\r\n    const outputArr = new Float32Array(this.size * 2);\r\n\r\n    for (var i = 0; i < this.size; ++i) {\r\n      real[i] = inputArr[i * 2];\r\n      imag[i] = inputArr[i * 2 + 1];\r\n    }\r\n    this.fftNayuki.forward(real, imag); // this does the FFT, it uses the same buffer for input and output\r\n    for (var i = 0; i < this.size; ++i) {\r\n      outputArr[i * 2] = real[i];\r\n      outputArr[i * 2 + 1] = imag[i];\r\n    }\r\n    return outputArr;\r\n  }\r\n}\r\n\r\nexport default NayukiFftWrapperJavascript;\r\n","\nvar NayukiCModule = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmExports;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)\"}function instantiateSync(file,info){var module;var binary=getBinarySync(file);module=new WebAssembly.Module(binary);var instance=new WebAssembly.Instance(module,info);return[instance,module]}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;wasmExports=exports;wasmMemory=wasmExports[\"b\"];updateMemoryViews();wasmTable=wasmExports[\"l\"];addOnInit(wasmExports[\"c\"]);removeRunDependency(\"wasm-instantiate\");return exports}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}var result=instantiateSync(wasmBinaryFile,info);return receiveInstance(result[0])}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var abortOnCannotGrowMemory=requestedSize=>{abort(\"OOM\")};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;abortOnCannotGrowMemory(requestedSize)};function getCFunc(ident){var func=Module[\"_\"+ident];return func}var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var ccall=function(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var cwrap=function(ident,returnType,argTypes,opts){var numericArgs=!argTypes||argTypes.every(type=>type===\"number\"||type===\"boolean\");var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}};var wasmImports={a:_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=asm[\"c\"];var _malloc=Module[\"_malloc\"]=asm[\"d\"];var _free=Module[\"_free\"]=asm[\"e\"];var _precalc=Module[\"_precalc\"]=asm[\"f\"];var _precalc_f=Module[\"_precalc_f\"]=asm[\"g\"];var _dispose=Module[\"_dispose\"]=asm[\"h\"];var _dispose_f=Module[\"_dispose_f\"]=asm[\"i\"];var _transform_radix2_precalc=Module[\"_transform_radix2_precalc\"]=asm[\"j\"];var _transform_radix2_precalc_f=Module[\"_transform_radix2_precalc_f\"]=asm[\"k\"];var ___errno_location=asm[\"__errno_location\"];var stackSave=asm[\"m\"];var stackRestore=asm[\"n\"];var stackAlloc=asm[\"o\"];function intArrayFromBase64(s){try{var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg\n}\n\n);\n})();\nexport default NayukiCModule;","import NayukiCModule from \"./NayukiCFFT.mjs\";\n\n(\"use strict\");\n\nvar nayukiCModule = NayukiCModule({});\n\nvar nc_precalc = nayukiCModule.cwrap(\"precalc\", \"number\", [\"number\"]);\n\nvar nc_dispose = nayukiCModule.cwrap(\"dispose\", \"void\", [\"number\"]);\n\nvar nc_transform_radix2_precalc = nayukiCModule.cwrap(\n  \"transform_radix2_precalc\",\n  \"void\",\n  [\"number\", \"number\", \"number\", \"number\"],\n);\n\nvar nc_precalc_f = nayukiCModule.cwrap(\"precalc_f\", \"number\", [\"number\"]);\n\nvar nc_dispose_f = nayukiCModule.cwrap(\"dispose_f\", \"void\", [\"number\"]);\n\nvar nc_transform_radix2_precalc_f = nayukiCModule.cwrap(\n  \"transform_radix2_precalc_f\",\n  \"void\",\n  [\"number\", \"number\", \"number\", \"number\"],\n);\n\nfunction FFTNayukiC(n) {\n  this.n = n;\n  this.rptr = nayukiCModule._malloc(n * 4 + n * 4);\n  this.iptr = this.rptr + n * 4;\n  this.rarr = new Float32Array(nayukiCModule.HEAPU8.buffer, this.rptr, n);\n  this.iarr = new Float32Array(nayukiCModule.HEAPU8.buffer, this.iptr, n);\n  this.tables = nc_precalc_f(n);\n\n  this.forward = function (real, imag) {\n    this.rarr.set(real);\n    this.iarr.set(imag);\n    nc_transform_radix2_precalc_f(this.rptr, this.iptr, this.n, this.tables);\n    real.set(this.rarr);\n    imag.set(this.iarr);\n  };\n\n  this.dispose = function () {\n    nayukiCModule._free(this.rptr);\n    nc_dispose_f(this.tables);\n  };\n}\n\nexport default FFTNayukiC;\n","import FFTNayukiC from \"./FFT.js\";\r\n\r\nclass NayukiWasmFftWrapperWasm {\r\n  constructor(size) {\r\n    this.size = size;\r\n    this.fftNayuki = new FFTNayukiC(size);\r\n  }\r\n\r\n  fft(inputArr) {\r\n    // it uses the same buffer for input and output\r\n    const real = new Float32Array(this.size);\r\n    const imag = new Float32Array(this.size);\r\n    const outputArr = new Float32Array(this.size * 2);\r\n\r\n    for (var i = 0; i < this.size; ++i) {\r\n      real[i] = inputArr[i * 2];\r\n      imag[i] = inputArr[i * 2 + 1];\r\n    }\r\n    this.fftNayuki.forward(real, imag); // this does the FFT, it uses the same buffer for input and output\r\n    for (var i = 0; i < this.size; ++i) {\r\n      outputArr[i * 2] = real[i];\r\n      outputArr[i * 2 + 1] = imag[i];\r\n    }\r\n    return outputArr;\r\n  }\r\n}\r\n\r\nexport default NayukiWasmFftWrapperWasm;\r\n","/* Copyright (c) 2012, Jens Nockert <jens@ofmlabs.org>, Jussi Kalliokoski <jussi@ofmlabs.org>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nif (!FFT) {\n  var FFT = {};\n}\n\nvoid (function (namespace) {\n  \"use strict\";\n\n  function butterfly2(output, outputOffset, outputStride, fStride, state, m) {\n    var t = state.twiddle;\n\n    for (var i = 0; i < m; i++) {\n      var s0_r = output[2 * (outputOffset + outputStride * i)],\n        s0_i = output[2 * (outputOffset + outputStride * i) + 1];\n      var s1_r = output[2 * (outputOffset + outputStride * (i + m))],\n        s1_i = output[2 * (outputOffset + outputStride * (i + m)) + 1];\n\n      var t1_r = t[2 * (0 + fStride * i)],\n        t1_i = t[2 * (0 + fStride * i) + 1];\n\n      var v1_r = s1_r * t1_r - s1_i * t1_i,\n        v1_i = s1_r * t1_i + s1_i * t1_r;\n\n      var r0_r = s0_r + v1_r,\n        r0_i = s0_i + v1_i;\n      var r1_r = s0_r - v1_r,\n        r1_i = s0_i - v1_i;\n\n      (output[2 * (outputOffset + outputStride * i)] = r0_r),\n        (output[2 * (outputOffset + outputStride * i) + 1] = r0_i);\n      (output[2 * (outputOffset + outputStride * (i + m))] = r1_r),\n        (output[2 * (outputOffset + outputStride * (i + m)) + 1] = r1_i);\n    }\n  }\n\n  function butterfly3(output, outputOffset, outputStride, fStride, state, m) {\n    var t = state.twiddle;\n    var m1 = m,\n      m2 = 2 * m;\n    var fStride1 = fStride,\n      fStride2 = 2 * fStride;\n\n    var e = t[2 * (0 + fStride * m) + 1];\n\n    for (var i = 0; i < m; i++) {\n      var s0_r = output[2 * (outputOffset + outputStride * i)],\n        s0_i = output[2 * (outputOffset + outputStride * i) + 1];\n\n      var s1_r = output[2 * (outputOffset + outputStride * (i + m1))],\n        s1_i = output[2 * (outputOffset + outputStride * (i + m1)) + 1];\n      var t1_r = t[2 * (0 + fStride1 * i)],\n        t1_i = t[2 * (0 + fStride1 * i) + 1];\n      var v1_r = s1_r * t1_r - s1_i * t1_i,\n        v1_i = s1_r * t1_i + s1_i * t1_r;\n\n      var s2_r = output[2 * (outputOffset + outputStride * (i + m2))],\n        s2_i = output[2 * (outputOffset + outputStride * (i + m2)) + 1];\n      var t2_r = t[2 * (0 + fStride2 * i)],\n        t2_i = t[2 * (0 + fStride2 * i) + 1];\n      var v2_r = s2_r * t2_r - s2_i * t2_i,\n        v2_i = s2_r * t2_i + s2_i * t2_r;\n\n      var i0_r = v1_r + v2_r,\n        i0_i = v1_i + v2_i;\n\n      var r0_r = s0_r + i0_r,\n        r0_i = s0_i + i0_i;\n      (output[2 * (outputOffset + outputStride * i)] = r0_r),\n        (output[2 * (outputOffset + outputStride * i) + 1] = r0_i);\n\n      var i1_r = s0_r - i0_r * 0.5;\n      var i1_i = s0_i - i0_i * 0.5;\n\n      var i2_r = (v1_r - v2_r) * e;\n      var i2_i = (v1_i - v2_i) * e;\n\n      var r1_r = i1_r - i2_i;\n      var r1_i = i1_i + i2_r;\n      (output[2 * (outputOffset + outputStride * (i + m1))] = r1_r),\n        (output[2 * (outputOffset + outputStride * (i + m1)) + 1] = r1_i);\n\n      var r2_r = i1_r + i2_i;\n      var r2_i = i1_i - i2_r;\n      (output[2 * (outputOffset + outputStride * (i + m2))] = r2_r),\n        (output[2 * (outputOffset + outputStride * (i + m2)) + 1] = r2_i);\n    }\n  }\n\n  function butterfly4(output, outputOffset, outputStride, fStride, state, m) {\n    var t = state.twiddle;\n    var m1 = m,\n      m2 = 2 * m,\n      m3 = 3 * m;\n    var fStride1 = fStride,\n      fStride2 = 2 * fStride,\n      fStride3 = 3 * fStride;\n\n    for (var i = 0; i < m; i++) {\n      var s0_r = output[2 * (outputOffset + outputStride * i)],\n        s0_i = output[2 * (outputOffset + outputStride * i) + 1];\n\n      var s1_r = output[2 * (outputOffset + outputStride * (i + m1))],\n        s1_i = output[2 * (outputOffset + outputStride * (i + m1)) + 1];\n      var t1_r = t[2 * (0 + fStride1 * i)],\n        t1_i = t[2 * (0 + fStride1 * i) + 1];\n      var v1_r = s1_r * t1_r - s1_i * t1_i,\n        v1_i = s1_r * t1_i + s1_i * t1_r;\n\n      var s2_r = output[2 * (outputOffset + outputStride * (i + m2))],\n        s2_i = output[2 * (outputOffset + outputStride * (i + m2)) + 1];\n      var t2_r = t[2 * (0 + fStride2 * i)],\n        t2_i = t[2 * (0 + fStride2 * i) + 1];\n      var v2_r = s2_r * t2_r - s2_i * t2_i,\n        v2_i = s2_r * t2_i + s2_i * t2_r;\n\n      var s3_r = output[2 * (outputOffset + outputStride * (i + m3))],\n        s3_i = output[2 * (outputOffset + outputStride * (i + m3)) + 1];\n      var t3_r = t[2 * (0 + fStride3 * i)],\n        t3_i = t[2 * (0 + fStride3 * i) + 1];\n      var v3_r = s3_r * t3_r - s3_i * t3_i,\n        v3_i = s3_r * t3_i + s3_i * t3_r;\n\n      var i0_r = s0_r + v2_r,\n        i0_i = s0_i + v2_i;\n      var i1_r = s0_r - v2_r,\n        i1_i = s0_i - v2_i;\n      var i2_r = v1_r + v3_r,\n        i2_i = v1_i + v3_i;\n      var i3_r = v1_r - v3_r,\n        i3_i = v1_i - v3_i;\n\n      var r0_r = i0_r + i2_r,\n        r0_i = i0_i + i2_i;\n\n      if (state.inverse) {\n        var r1_r = i1_r - i3_i;\n        var r1_i = i1_i + i3_r;\n      } else {\n        var r1_r = i1_r + i3_i;\n        var r1_i = i1_i - i3_r;\n      }\n\n      var r2_r = i0_r - i2_r,\n        r2_i = i0_i - i2_i;\n\n      if (state.inverse) {\n        var r3_r = i1_r + i3_i;\n        var r3_i = i1_i - i3_r;\n      } else {\n        var r3_r = i1_r - i3_i;\n        var r3_i = i1_i + i3_r;\n      }\n\n      (output[2 * (outputOffset + outputStride * i)] = r0_r),\n        (output[2 * (outputOffset + outputStride * i) + 1] = r0_i);\n      (output[2 * (outputOffset + outputStride * (i + m1))] = r1_r),\n        (output[2 * (outputOffset + outputStride * (i + m1)) + 1] = r1_i);\n      (output[2 * (outputOffset + outputStride * (i + m2))] = r2_r),\n        (output[2 * (outputOffset + outputStride * (i + m2)) + 1] = r2_i);\n      (output[2 * (outputOffset + outputStride * (i + m3))] = r3_r),\n        (output[2 * (outputOffset + outputStride * (i + m3)) + 1] = r3_i);\n    }\n  }\n\n  function butterfly(output, outputOffset, outputStride, fStride, state, m, p) {\n    var t = state.twiddle,\n      n = state.n,\n      scratch = new Float64Array(2 * p);\n\n    for (var u = 0; u < m; u++) {\n      for (var q1 = 0, k = u; q1 < p; q1++, k += m) {\n        var x0_r = output[2 * (outputOffset + outputStride * k)],\n          x0_i = output[2 * (outputOffset + outputStride * k) + 1];\n        (scratch[2 * q1] = x0_r), (scratch[2 * q1 + 1] = x0_i);\n      }\n\n      for (var q1 = 0, k = u; q1 < p; q1++, k += m) {\n        var tOffset = 0;\n\n        var x0_r = scratch[2 * 0],\n          x0_i = scratch[2 * 0 + 1];\n        (output[2 * (outputOffset + outputStride * k)] = x0_r),\n          (output[2 * (outputOffset + outputStride * k) + 1] = x0_i);\n\n        for (var q = 1; q < p; q++) {\n          tOffset = (tOffset + fStride * k) % n;\n\n          var s0_r = output[2 * (outputOffset + outputStride * k)],\n            s0_i = output[2 * (outputOffset + outputStride * k) + 1];\n\n          var s1_r = scratch[2 * q],\n            s1_i = scratch[2 * q + 1];\n          var t1_r = t[2 * tOffset],\n            t1_i = t[2 * tOffset + 1];\n          var v1_r = s1_r * t1_r - s1_i * t1_i,\n            v1_i = s1_r * t1_i + s1_i * t1_r;\n\n          var r0_r = s0_r + v1_r,\n            r0_i = s0_i + v1_i;\n          (output[2 * (outputOffset + outputStride * k)] = r0_r),\n            (output[2 * (outputOffset + outputStride * k) + 1] = r0_i);\n        }\n      }\n    }\n  }\n\n  function work(output, outputOffset, outputStride, f, fOffset, fStride, inputStride, factors, state) {\n    var p = factors.shift();\n    var m = factors.shift();\n\n    if (m == 1) {\n      for (var i = 0; i < p * m; i++) {\n        var x0_r = f[2 * (fOffset + fStride * inputStride * i)],\n          x0_i = f[2 * (fOffset + fStride * inputStride * i) + 1];\n        (output[2 * (outputOffset + outputStride * i)] = x0_r),\n          (output[2 * (outputOffset + outputStride * i) + 1] = x0_i);\n      }\n    } else {\n      for (var i = 0; i < p; i++) {\n        work(\n          output,\n          outputOffset + outputStride * i * m,\n          outputStride,\n          f,\n          fOffset + i * fStride * inputStride,\n          fStride * p,\n          inputStride,\n          factors.slice(),\n          state\n        );\n      }\n    }\n\n    switch (p) {\n      case 2:\n        butterfly2(output, outputOffset, outputStride, fStride, state, m);\n        break;\n      case 3:\n        butterfly3(output, outputOffset, outputStride, fStride, state, m);\n        break;\n      case 4:\n        butterfly4(output, outputOffset, outputStride, fStride, state, m);\n        break;\n      default:\n        butterfly(output, outputOffset, outputStride, fStride, state, m, p);\n        break;\n    }\n  }\n\n  var complex = function (n, inverse) {\n    if (arguments.length < 2) {\n      throw new RangeError(\"You didn't pass enough arguments, passed `\" + arguments.length + \"'\");\n    }\n\n    var n = ~~n,\n      inverse = !!inverse;\n\n    if (n < 1) {\n      throw new RangeError(\"n is outside range, should be positive integer, was `\" + n + \"'\");\n    }\n\n    var state = {\n      n: n,\n      inverse: inverse,\n\n      factors: [],\n      twiddle: new Float64Array(2 * n),\n      scratch: new Float64Array(2 * n)\n    };\n\n    var t = state.twiddle,\n      theta = (2 * Math.PI) / n;\n\n    for (var i = 0; i < n; i++) {\n      if (inverse) {\n        var phase = theta * i;\n      } else {\n        var phase = -theta * i;\n      }\n\n      t[2 * i] = Math.cos(phase);\n      t[2 * i + 1] = Math.sin(phase);\n    }\n\n    var p = 4,\n      v = Math.floor(Math.sqrt(n));\n\n    while (n > 1) {\n      while (n % p) {\n        switch (p) {\n          case 4:\n            p = 2;\n            break;\n          case 2:\n            p = 3;\n            break;\n          default:\n            p += 2;\n            break;\n        }\n\n        if (p > v) {\n          p = n;\n        }\n      }\n\n      n /= p;\n\n      state.factors.push(p);\n      state.factors.push(n);\n    }\n\n    this.state = state;\n  };\n\n  complex.prototype.simple = function (output, input, t) {\n    this.process(output, 0, 1, input, 0, 1, t);\n  };\n\n  complex.prototype.process = function (output, outputOffset, outputStride, input, inputOffset, inputStride, t) {\n    var outputStride = ~~outputStride,\n      inputStride = ~~inputStride;\n\n    var type = t == \"real\" ? t : \"complex\";\n\n    if (outputStride < 1) {\n      throw new RangeError(\"outputStride is outside range, should be positive integer, was `\" + outputStride + \"'\");\n    }\n\n    if (inputStride < 1) {\n      throw new RangeError(\"inputStride is outside range, should be positive integer, was `\" + inputStride + \"'\");\n    }\n\n    if (type == \"real\") {\n      for (var i = 0; i < this.state.n; i++) {\n        var x0_r = input[inputOffset + inputStride * i];\n        var x0_i = 0.0;\n\n        (this.state.scratch[2 * i] = x0_r), (this.state.scratch[2 * i + 1] = x0_i);\n      }\n\n      work(output, outputOffset, outputStride, this.state.scratch, 0, 1, 1, this.state.factors.slice(), this.state);\n    } else {\n      if (input == output) {\n        work(this.state.scratch, 0, 1, input, inputOffset, 1, inputStride, this.state.factors.slice(), this.state);\n\n        for (var i = 0; i < this.state.n; i++) {\n          var x0_r = this.state.scratch[2 * i],\n            x0_i = this.state.scratch[2 * i + 1];\n\n          (output[2 * (outputOffset + outputStride * i)] = x0_r),\n            (output[2 * (outputOffset + outputStride * i) + 1] = x0_i);\n        }\n      } else {\n        work(\n          output,\n          outputOffset,\n          outputStride,\n          input,\n          inputOffset,\n          1,\n          inputStride,\n          this.state.factors.slice(),\n          this.state\n        );\n      }\n    }\n  };\n\n  namespace.complex = complex;\n})(FFT);\n\nexport default FFT;\n","import FFT from \"./complex.js\";\r\n\r\nclass NockertFftWrapperJavascript {\r\n  constructor(size) {\r\n    this.size = size;\r\n    this.nockertfft = new FFT.complex(size, false); // 2nd arg is for inverse\r\n  }\r\n\r\n  fft(inputArr) {\r\n    const outputArr = new Float32Array(2 * this.size);\r\n    this.nockertfft.simple(outputArr, inputArr, \"complex\");\r\n    return outputArr;\r\n  }\r\n}\r\n\r\nexport default NockertFftWrapperJavascript;\r\n","// core operations\nlet _n = 0; // order\nlet _bitrev = null; // bit reversal table\nlet _cstb = null; // sin/cos table\n\nfunction init(n) {\n  if (n !== 0 && (n & (n - 1)) === 0) {\n    _n = n;\n    _initArray();\n    _makeBitReversalTable();\n    _makeCosSinTable();\n  } else {\n    throw new Error(\"init: radix-2 required\");\n  }\n}\n\n// 1D-FFT\nfunction fft1d(re, im) {\n  fastFourierTransform(re, im, 1);\n}\n\n// 1D-IFFT\nfunction ifft1d(re, im) {\n  let n = 1 / _n;\n  fastFourierTransform(re, im, -1);\n  for (let i = 0; i < _n; i++) {\n    re[i] *= n;\n    im[i] *= n;\n  }\n}\n\n// 1D-IFFT\nfunction bt1d(re, im) {\n  fastFourierTransform(re, im, -1);\n}\n\n// 2D-FFT Not very useful if the number of rows have to be equal to cols\nfunction fft2d(re, im) {\n  let tre = [];\n  let tim = [];\n  let i = 0;\n  // x-axis\n  for (let y = 0; y < _n; y++) {\n    i = y * _n;\n    for (let x1 = 0; x1 < _n; x1++) {\n      tre[x1] = re[x1 + i];\n      tim[x1] = im[x1 + i];\n    }\n    fft1d(tre, tim);\n    for (let x2 = 0; x2 < _n; x2++) {\n      re[x2 + i] = tre[x2];\n      im[x2 + i] = tim[x2];\n    }\n  }\n  // y-axis\n  for (let x = 0; x < _n; x++) {\n    for (let y1 = 0; y1 < _n; y1++) {\n      i = x + y1 * _n;\n      tre[y1] = re[i];\n      tim[y1] = im[i];\n    }\n    fft1d(tre, tim);\n    for (let y2 = 0; y2 < _n; y2++) {\n      i = x + y2 * _n;\n      re[i] = tre[y2];\n      im[i] = tim[y2];\n    }\n  }\n}\n\n// 2D-IFFT\nfunction ifft2d(re, im) {\n  let tre = [];\n  let tim = [];\n  let i = 0;\n  // x-axis\n  for (let y = 0; y < _n; y++) {\n    i = y * _n;\n    for (let x1 = 0; x1 < _n; x1++) {\n      tre[x1] = re[x1 + i];\n      tim[x1] = im[x1 + i];\n    }\n    ifft1d(tre, tim);\n    for (let x2 = 0; x2 < _n; x2++) {\n      re[x2 + i] = tre[x2];\n      im[x2 + i] = tim[x2];\n    }\n  }\n  // y-axis\n  for (let x = 0; x < _n; x++) {\n    for (let y1 = 0; y1 < _n; y1++) {\n      i = x + y1 * _n;\n      tre[y1] = re[i];\n      tim[y1] = im[i];\n    }\n    ifft1d(tre, tim);\n    for (let y2 = 0; y2 < _n; y2++) {\n      i = x + y2 * _n;\n      re[i] = tre[y2];\n      im[i] = tim[y2];\n    }\n  }\n}\n\n// core operation of FFT\nfunction fastFourierTransform(re, im, inv) {\n  let d;\n  let h;\n  let ik;\n  let m;\n  let tmp;\n  let wr;\n  let wi;\n  let xr;\n  let xi;\n  let n4 = _n >> 2;\n  // bit reversal\n  for (let l = 0; l < _n; l++) {\n    m = _bitrev[l];\n    if (l < m) {\n      tmp = re[l];\n      re[l] = re[m];\n      re[m] = tmp;\n      tmp = im[l];\n      im[l] = im[m];\n      im[m] = tmp;\n    }\n  }\n  // butterfly operation\n  for (let k = 1; k < _n; k <<= 1) {\n    h = 0;\n    d = _n / (k << 1);\n    for (let j = 0; j < k; j++) {\n      wr = _cstb[h + n4];\n      wi = inv * _cstb[h];\n      for (let i = j; i < _n; i += k << 1) {\n        ik = i + k;\n        xr = wr * re[ik] + wi * im[ik];\n        xi = wr * im[ik] - wi * re[ik];\n        re[ik] = re[i] - xr;\n        re[i] += xr;\n        im[ik] = im[i] - xi;\n        im[i] += xi;\n      }\n      h += d;\n    }\n  }\n}\n\n// initialize the array (supports TypedArray)\nfunction _initArray() {\n  if (typeof Uint32Array !== \"undefined\") {\n    _bitrev = new Uint32Array(_n);\n  } else {\n    _bitrev = [];\n  }\n  if (typeof Float64Array !== \"undefined\") {\n    _cstb = new Float64Array(_n * 1.25);\n  } else {\n    _cstb = [];\n  }\n}\n\n//function _paddingZero() {\n//    // TODO\n//}\n\nfunction _makeBitReversalTable() {\n  let i = 0;\n  let j = 0;\n  let k = 0;\n  _bitrev[0] = 0;\n  while (++i < _n) {\n    k = _n >> 1;\n    while (k <= j) {\n      j -= k;\n      k >>= 1;\n    }\n    j += k;\n    _bitrev[i] = j;\n  }\n}\n\n// makes trigonometric function table\nfunction _makeCosSinTable() {\n  let n2 = _n >> 1;\n  let n4 = _n >> 2;\n  let n8 = _n >> 3;\n  let n2p4 = n2 + n4;\n  let t = Math.sin(Math.PI / _n);\n  let dc = 2 * t * t;\n  let ds = Math.sqrt(dc * (2 - dc));\n  let c = (_cstb[n4] = 1);\n  let s = (_cstb[0] = 0);\n  t = 2 * dc;\n  for (let i = 1; i < n8; i++) {\n    c -= dc;\n    dc += t * c;\n    s += ds;\n    ds -= t * s;\n    _cstb[i] = s;\n    _cstb[n4 - i] = c;\n  }\n  if (n8 !== 0) {\n    _cstb[n8] = Math.sqrt(0.5);\n  }\n  for (let j = 0; j < n4; j++) {\n    _cstb[n2 - j] = _cstb[j];\n  }\n  for (let k = 0; k < n2p4; k++) {\n    _cstb[k + n2] = -_cstb[k];\n  }\n}\n\nconst FFT = {\n  init,\n  fft1d,\n  ifft1d,\n  fft2d,\n  ifft2d,\n  fft: fft1d,\n  ifft: ifft1d,\n  bt: bt1d\n};\n\nexport default FFT;\n","import FFT from \"./fftlib.js\";\r\n\r\nclass MljsWebFftWrapperJavascript {\r\n  constructor(size) {\r\n    this.size = size;\r\n    this.FFT_mljs = FFT;\r\n    this.FFT_mljs.init(size);\r\n  }\r\n\r\n  fft(inputArr) {\r\n    const input_real = new Float32Array(this.size);\r\n    const input_imag = new Float32Array(this.size);\r\n    const outputArr = new Float32Array(2 * this.size);\r\n\r\n    for (var i = 0; i < this.size; ++i) {\r\n      input_real[i] = inputArr[i * 2];\r\n      input_imag[i] = inputArr[i * 2 + 1];\r\n    }\r\n\r\n    this.FFT_mljs.fft(input_real, input_imag); // performs fft in-place\r\n\r\n    for (var i = 0; i < this.size; ++i) {\r\n      outputArr[i * 2] = input_real[i];\r\n      outputArr[i * 2 + 1] = input_imag[i];\r\n    }\r\n    return outputArr;\r\n  }\r\n}\r\n\r\nexport default MljsWebFftWrapperJavascript;\r\n","// The following SIMD checkers were taken from 'wasm-feature-detect' NPM package:\nasync function relaxedSimd() {\n  return await WebAssembly.validate(\n    new Uint8Array([\n      0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 15,\n      1, 13, 0, 65, 1, 253, 15, 65, 2, 253, 15, 253, 128, 2, 11,\n    ]),\n  );\n}\n\nasync function simd() {\n  return await WebAssembly.validate(\n    new Uint8Array([\n      0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 10,\n      1, 8, 0, 65, 0, 253, 15, 253, 98, 11,\n    ]),\n  );\n}\n\n// Define the async function to check for Wasm and SIMD support\nasync function checkBrowserCapabilities() {\n  let browserName = \"Other\";\n  let browserVersion = \"Unknown\";\n  let osName = \"Other\";\n  let osVersion = \"Unknown\";\n  let uad = navigator.userAgentData;\n  let ua = navigator.userAgent;\n\n  // Check if Edge, Chrome, or Opera (uses User Agent Data API)\n  try {\n    if (uad) {\n      const values = await uad.getHighEntropyValues([\n        \"architecture\",\n        \"model\",\n        \"platform\",\n        \"platformVersion\",\n        \"uaFullVersion\",\n      ]);\n\n      const brandInfo = uad.brands.find((brand) =>\n        [\"Microsoft Edge\", \"Google Chrome\", \"Opera\"].includes(brand.brand),\n      );\n      browserName = brandInfo ? brandInfo.brand : \"Other\";\n      browserVersion = brandInfo ? `v${brandInfo.version}` : \"Unknown\";\n      osName = values.platform ? values.platform : \"Other\";\n      osVersion = values.platformVersion\n        ? `v${values.platformVersion}`\n        : \"Unknown\";\n    }\n\n    // user agent string parsing for mobile and firefox, safari\n    // other browsers included in case mobile\n    if (browserName === \"Other\" || osName === \"Other\") {\n      const uaArr = ua.split(\" \");\n      const uaBrowser = uaArr[uaArr.length - 1];\n      const isFirefox = /Firefox/.test(uaBrowser);\n      // CriOS is Chrome for iOS and Chrome is Chrome for Android\n      const isSafari =\n        /Safari/.test(uaBrowser) &&\n        !/CriOS/.test(uaBrowser) &&\n        !/Chrome/.test(uaBrowser);\n      const isChrome = /CriOS/.test(uaBrowser) || /Chrome/.test(uaBrowser);\n      const isEdge = /Edg/.test(uaBrowser);\n      const isOpera = /OPR/.test(uaBrowser);\n\n      const browsers = [\n        {\n          name: \"Mozilla Firefox\",\n          regex: /Firefox\\/(\\d+\\.\\d+)/,\n          flag: isFirefox,\n        },\n        { name: \"Safari\", regex: /Version\\/(\\d+\\.\\d+)/, flag: isSafari },\n        {\n          name: \"Google Chrome\",\n          regex: /CriOS|Chrome\\/(\\d+\\.\\d+)/,\n          flag: isChrome,\n        },\n        { name: \"Microsoft Edge\", regex: /Edg\\/(\\d+\\.\\d+)/, flag: isEdge },\n        { name: \"Opera\", regex: /OPR\\/(\\d+\\.\\d+)/, flag: isOpera },\n      ];\n\n      for (const browser of browsers) {\n        if (browser.flag) {\n          browserName = browser.name;\n          const versionMatch = uaBrowser.match(browser.regex);\n          browserVersion = versionMatch ? versionMatch[1] : \"Unknown\";\n          break;\n        }\n      }\n\n      const osMatch = ua.match(/\\(([^)]+)\\)/);\n      const osDetails = osMatch ? osMatch[1].split(\"; \") : [];\n      console.log(osMatch);\n      console.log(osDetails);\n\n      const windowsVersionMap = {\n        \"10.0\": \"10\",\n        \"6.3\": \"8.1\",\n        \"6.2\": \"8\",\n        \"6.1\": \"7\",\n        \"6.0\": \"Vista\",\n        \"5.2\": \"XP 64-bit\",\n        \"5.1\": \"XP\",\n        \"5.0\": \"2000\",\n      };\n\n      const osInfo = [\n        {\n          name: \"Windows\",\n          regex: /Windows NT/,\n          transform: (s) => windowsVersionMap[s.split(\" \")[2]],\n          index: 0,\n        },\n        {\n          name: \"Mac OS X\",\n          regex: /Mac OS X/,\n          transform: (s) => s.replace(\"_\", \".\").split(\" \")[3],\n          index: 0,\n        },\n        {\n          name: \"Linux\",\n          regex: /Linux/,\n          transform: () => \"Unknown\", // Precise Linux version can be difficult to determine\n          index: 0,\n        },\n        {\n          name: \"Android\",\n          regex: /Android/,\n          transform: (s) => s.split(\" \")[1],\n          index: 0,\n        },\n        {\n          name: \"iOS\",\n          regex: /iPhone/,\n          transform: (s) => s.split(\" \")[1].replace(\"_\", \".\"),\n          index: 0,\n        },\n      ];\n\n      for (const os of osInfo) {\n        if (os.regex.test(osDetails[0])) {\n          osName = os.name;\n          console.log(`osDetails: ${osDetails}`);\n          osVersion = os.transform\n            ? os.transform(osDetails[1])\n            : os.versionMap[osDetails[1].split(\" \")[os.index]];\n          break;\n        }\n      }\n    }\n  } catch (error) {\n    console.error(\"Could not retrieve user agent data\", error);\n  }\n  return {\n    browserName: browserName,\n    browserVersion: browserVersion,\n    osName: osName,\n    osVersion: osVersion,\n    wasm: typeof WebAssembly === \"object\",\n    relaxedSimd: await relaxedSimd(),\n    simd: await simd(),\n  };\n}\n\n// Export the function\nexport default checkBrowserCapabilities;\n","\nvar KissFFTModule = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmExports;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)\"}function instantiateSync(file,info){var module;var binary=getBinarySync(file);module=new WebAssembly.Module(binary);var instance=new WebAssembly.Instance(module,info);return[instance,module]}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;wasmExports=exports;wasmMemory=wasmExports[\"b\"];updateMemoryViews();wasmTable=wasmExports[\"i\"];addOnInit(wasmExports[\"c\"]);removeRunDependency(\"wasm-instantiate\");return exports}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}var result=instantiateSync(wasmBinaryFile,info);return receiveInstance(result[0])}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var abortOnCannotGrowMemory=requestedSize=>{abort(\"OOM\")};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;abortOnCannotGrowMemory(requestedSize)};function getCFunc(ident){var func=Module[\"_\"+ident];return func}var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var ccall=function(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var cwrap=function(ident,returnType,argTypes,opts){var numericArgs=!argTypes||argTypes.every(type=>type===\"number\"||type===\"boolean\");var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}};var wasmImports={a:_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=asm[\"c\"];var _kiss_fft_free=Module[\"_kiss_fft_free\"]=asm[\"d\"];var _free=Module[\"_free\"]=asm[\"e\"];var _kiss_fft_alloc=Module[\"_kiss_fft_alloc\"]=asm[\"f\"];var _malloc=Module[\"_malloc\"]=asm[\"g\"];var _kiss_fft=Module[\"_kiss_fft\"]=asm[\"h\"];var ___errno_location=asm[\"__errno_location\"];var stackSave=asm[\"j\"];var stackRestore=asm[\"k\"];var stackAlloc=asm[\"l\"];function intArrayFromBase64(s){try{var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg\n}\n\n);\n})();\nexport default KissFFTModule;","import KissFFTModule from \"./KissFFT.mjs\";\n\n(\"use strict\");\n\nvar kissFFTModule = KissFFTModule({});\n\nvar kiss_fft_alloc = kissFFTModule.cwrap(\"kiss_fft_alloc\", \"number\", [\n  \"number\",\n  \"number\",\n  \"number\",\n  \"number\",\n]);\n\nvar kiss_fft = kissFFTModule.cwrap(\"kiss_fft\", \"void\", [\n  \"number\",\n  \"number\",\n  \"number\",\n]);\n\nvar kiss_fft_free = kissFFTModule.cwrap(\"kiss_fft_free\", \"void\", [\"number\"]);\n\nclass KissFftModifiedWrapperWasm {\n  constructor(size) {\n    this.size = size;\n    this.fcfg = kiss_fft_alloc(size, false);\n    this.icfg = kiss_fft_alloc(size, true);\n\n    this.inptr = kissFFTModule._malloc(size * 8 + size * 8);\n\n    this.cin = new Float32Array(\n      kissFFTModule.HEAPU8.buffer,\n      this.inptr,\n      size * 2,\n    );\n  }\n\n  fft = function (inputArray) {\n    // TODO: figure out how to move this into the constructor without breaking things (unit tests will catch it)\n    const outptr = kissFFTModule._malloc(this.size * 8);\n\n    const cout = new Float32Array(\n      kissFFTModule.HEAPU8.buffer,\n      outptr,\n      this.size * 2,\n    );\n\n    this.cin.set(inputArray);\n\n    kiss_fft(this.fcfg, this.inptr, outptr);\n\n    // we need to free the memory of outptr before we return, so we need this too\n    let outputArray = new Float32Array(this.size * 2);\n    outputArray.set(cout);\n\n    kissFFTModule._free(outptr);\n\n    return outputArray;\n  };\n\n  dispose() {\n    kiss_fft_free(this.fcfg);\n    kiss_fft_free(this.icfg);\n    kissFFTModule._free(this.inptr);\n  }\n}\n\nexport default KissFftModifiedWrapperWasm;\n","\"use strict\";\n\n/* Modification Notes\n- Removing the inv part increased it by 3% or so\n- Simplifying transform hurt because i was repeating the same math\n- getting rid of the wrapper imrpoved it by like 1%\n*/\n\nfunction IndutnyModifiedFftWrapperJavascript(size) {\n  this.size = size;\n\n  this._csize = size << 1;\n\n  var table = new Array(this.size * 2);\n  for (var i = 0; i < table.length; i += 2) {\n    const angle = (Math.PI * i) / this.size;\n    table[i] = Math.cos(angle);\n    table[i + 1] = -Math.sin(angle);\n  }\n  this.table = table;\n\n  // Find size's power of two\n  var power = 0;\n  for (var t = 1; this.size > t; t <<= 1) power++;\n\n  // Calculate initial step's width, either 4 or 8 depending on the fftsize\n  this._width = power % 2 === 0 ? power - 1 : power;\n\n  // Pre-compute bit-reversal patterns\n  this._bitrev = new Array(1 << this._width);\n  for (var j = 0; j < this._bitrev.length; j++) {\n    this._bitrev[j] = 0;\n    for (var shift = 0; shift < this._width; shift += 2) {\n      var revShift = this._width - shift - 2;\n      this._bitrev[j] |= ((j >>> shift) & 3) << revShift;\n    }\n  }\n\n  this._data = null;\n}\n\n// FFT\nIndutnyModifiedFftWrapperJavascript.prototype.fft = function fft(data) {\n  this._data = data;\n  this._out = new Float32Array(2 * this.size);\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var step = 1 << this._width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  // len is either 4 or 8, and both are used for the common fft sizes\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform2(outOff, off, step);\n    }\n  } else {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform4(outOff, off, step);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var quarterLen = len >>> 2;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      // Full case\n      var limit = outOff + quarterLen;\n      for (var i = outOff, k = 0; i < limit; i += 2, k += step) {\n        const A = i;\n        const B = A + quarterLen;\n        const C = B + quarterLen;\n        const D = C + quarterLen;\n\n        // Original values\n        const Ar = this._out[A];\n        const Ai = this._out[A + 1];\n        const Br = this._out[B];\n        const Bi = this._out[B + 1];\n        const Cr = this._out[C];\n        const Ci = this._out[C + 1];\n        const Dr = this._out[D];\n        const Di = this._out[D + 1];\n\n        // Middle values\n        const MAr = Ar;\n        const MAi = Ai;\n\n        const tableBr = this.table[k];\n        const tableBi = this.table[k + 1];\n        const MBr = Br * tableBr - Bi * tableBi;\n        const MBi = Br * tableBi + Bi * tableBr;\n\n        const tableCr = this.table[2 * k];\n        const tableCi = this.table[2 * k + 1];\n        const MCr = Cr * tableCr - Ci * tableCi;\n        const MCi = Cr * tableCi + Ci * tableCr;\n\n        const tableDr = this.table[3 * k];\n        const tableDi = this.table[3 * k + 1];\n        const MDr = Dr * tableDr - Di * tableDi;\n        const MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        const T0r = MAr + MCr;\n        const T0i = MAi + MCi;\n        const T1r = MAr - MCr;\n        const T1i = MAi - MCi;\n        const T2r = MBr + MDr;\n        const T2i = MBi + MDi;\n        const T3r = MBr - MDr;\n        const T3i = MBi - MDi;\n\n        this._out[A] = T0r + T2r;\n        this._out[A + 1] = T0i + T2i;\n        this._out[B] = T1r + T3i;\n        this._out[B + 1] = T1i - T3r;\n        this._out[C] = T0r - T2r;\n        this._out[C + 1] = T0i - T2i;\n        this._out[D] = T1r - T3i;\n        this._out[D + 1] = T1i + T3r;\n      }\n    }\n  }\n\n  return this._out;\n};\n\n// radix-2 (called for len=4)\nIndutnyModifiedFftWrapperJavascript.prototype._singleTransform2 =\n  function _singleTransform2(outOff, off, step) {\n    const evenR = this._data[off];\n    const evenI = this._data[off + 1];\n    const oddR = this._data[off + step];\n    const oddI = this._data[off + step + 1];\n\n    this._out[outOff] = evenR + oddR;\n    this._out[outOff + 1] = evenI + oddI;\n    this._out[outOff + 2] = evenR - oddR;\n    this._out[outOff + 3] = evenI - oddI;\n  };\n\n// radix-4 (called for len=8)\nIndutnyModifiedFftWrapperJavascript.prototype._singleTransform4 =\n  function _singleTransform4(outOff, off, step) {\n    const step2 = step * 2;\n    const step3 = step * 3;\n\n    const Ar = this._data[off];\n    const Ai = this._data[off + 1];\n    const Br = this._data[off + step];\n    const Bi = this._data[off + step + 1];\n    const Cr = this._data[off + step2];\n    const Ci = this._data[off + step2 + 1];\n    const Dr = this._data[off + step3];\n    const Di = this._data[off + step3 + 1];\n\n    const T0r = Ar + Cr;\n    const T0i = Ai + Ci;\n    const T1r = Ar - Cr;\n    const T1i = Ai - Ci;\n    const T2r = Br + Dr;\n    const T2i = Bi + Di;\n    const T3r = Br - Dr;\n    const T3i = Bi - Di;\n\n    this._out[outOff] = T0r + T2r;\n    this._out[outOff + 1] = T0i + T2i;\n    this._out[outOff + 2] = T1r + T3i;\n    this._out[outOff + 3] = T1i - T3r;\n    this._out[outOff + 4] = T0r - T2r;\n    this._out[outOff + 5] = T0i - T2i;\n    this._out[outOff + 6] = T1r - T3i;\n    this._out[outOff + 7] = T1i + T3r;\n  };\n\nexport default IndutnyModifiedFftWrapperJavascript;\n","import KissFftWrapperWasm from \"./kissfft/webfftWrapper.js\";\nimport IndutnyFftWrapperJavascript from \"./indutny/webfftWrapper.js\";\n//import DntjWebFftWrapperJavascript from \"./dntj/webfftWrapper.js\";\nimport CrossFftWrapperWasm from \"./cross/webfftWrapper.js\";\nimport NayukiFftWrapperJavascript from \"./nayuki/webfftWrapper.js\";\nimport NayukiWasmFftWrapperWasm from \"./nayukic/webfftWrapper.js\";\nimport NockertFftWrapperJavascript from \"./nockert/webfftWrapper.js\";\nimport MljsWebFftWrapperJavascript from \"./mljs/webfftWrapper.js\";\n//import ViljaFftWrapperWasm from \"./kissfftviljaNOTFINISHED/webfftWrapper.js\";\nimport checkBrowserCapabilities from \"./utils/checkCapabilities.js\";\nimport KissFftModifiedWrapperWasm from \"./kissfftmodified/webfftWrapper.js\";\nimport IndutnyModifiedFftWrapperJavascript from \"./indutnymodified/fft.js\";\n\nconst validSizes = [\n  4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 16384,\n  32768, 65536, 131072,\n];\n\nclass webfft {\n  constructor(size = 128, subLibrary = \"indutnyJavascript\", useProfile = true) {\n    if (!validSizes.includes(size)) {\n      throw new Error(\"Size must be a power of 2 between 4 and 131072\");\n    }\n    this.size = size;\n    this.outputArr = new Float32Array(2 * size);\n    this.subLibrary = subLibrary;\n    this.fftLibrary = undefined;\n    const profile = this.getCurrentProfile();\n    if (profile && useProfile) {\n      this.setSubLibrary(profile.fastestSubLibrary);\n    } else {\n      this.setSubLibrary(subLibrary);\n    }\n  }\n\n  availableSubLibraries() {\n    return [\n      \"kissWasm\",\n      \"indutnyModifiedJavascript\",\n      \"indutnyJavascript\",\n      \"crossWasm\",\n      \"mljsJavascript\",\n      \"nockertJavascript\",\n      \"nayuki3Wasm\",\n      \"nayukiJavascript\",\n      //\"dntjJavascript\", // need to figure out the precise scale factor before we can use this one, mainly due to unit tests\n      \"kissfftmodifiedWasm\", // currently doesnt perform any better\n      //\"viljaWasm\"\n    ];\n  }\n\n  // A subset of the libraries known to be quickest, and removing ones that are too similar to others\n  availableSubLibrariesQuick() {\n    return [\"kissWasm\", \"indutnyModifiedJavascript\"];\n  }\n\n  getCurrentProfile() {\n    // check if local storage is available\n    if (typeof localStorage === \"undefined\") {\n      return undefined;\n    }\n    if (!localStorage.getItem(\"webfftProfile\")) {\n      return undefined; // No profile\n    }\n    return JSON.parse(localStorage.getItem(\"webfftProfile\"));\n  }\n\n  setSubLibrary(subLibrary) {\n    switch (subLibrary) {\n      case \"nayukiJavascript\":\n        this.fftLibrary = new NayukiFftWrapperJavascript(this.size);\n        break;\n      case \"nayuki3Wasm\":\n        this.fftLibrary = new NayukiWasmFftWrapperWasm(this.size);\n        break;\n      case \"kissWasm\":\n        this.fftLibrary = new KissFftWrapperWasm(this.size);\n        break;\n      case \"crossWasm\":\n        this.fftLibrary = new CrossFftWrapperWasm(this.size);\n        if (this.size > 16384)\n          this.fftLibrary = new IndutnyFftWrapperJavascript(this.size); // Cross throws \"memory access out of bounds\" for large sizes\\\n        break;\n      case \"nockertJavascript\":\n        this.fftLibrary = new NockertFftWrapperJavascript(this.size);\n        break;\n      //case \"dntjJavascript\":\n      //  this.fftLibrary = new DntjWebFftWrapperJavascript(this.size);\n      //  break;\n      case \"indutnyJavascript\":\n        this.fftLibrary = new IndutnyFftWrapperJavascript(this.size);\n        break;\n      case \"mljsJavascript\":\n        this.fftLibrary = new MljsWebFftWrapperJavascript(this.size);\n        break;\n      case \"kissfftmodifiedWasm\":\n        this.fftLibrary = new KissFftModifiedWrapperWasm(this.size);\n        break;\n      //case \"viljaWasm\":\n      //  this.fftLibrary = new ViljaFftWrapperWasm(this.size);\n      case \"indutnyModifiedJavascript\":\n        this.fftLibrary = new IndutnyModifiedFftWrapperJavascript(this.size);\n        break;\n      default:\n        //this.fftLibrary = new IndutnyFftWrapperJavascript(this.size);\n        throw new Error(\"Invalid sublibrary\");\n    }\n  }\n\n  fft(inputArr) {\n    if (inputArr.length !== 2 * this.size) {\n      throw new Error(\"Input array length must be == 2 * size\");\n    }\n    this.outputArr = this.fftLibrary.fft(inputArr);\n    return this.outputArr;\n  }\n\n  // convinience function for people who want to use real-valued input.\n  //   note that you still have to give it a size that is 2x your real-valued input length!!\n  //   it doesn't actually speed it up by 2x\n  //   output is complex but the lenght of inputArr because the negative freqs are removed\n  fftr(inputArr) {\n    var { outputArr, fftLibrary, size } = this;\n    if (inputArr.length !== size) {\n      throw new Error(\"Input array length must be == size\");\n    }\n    const inputArrComplex = new Float32Array(2 * size);\n    inputArrComplex.fill(0);\n    for (let i = 0; i < size; i++) {\n      inputArrComplex[2 * i] = inputArr[i];\n    }\n    outputArr = fftLibrary.fft(inputArrComplex);\n    return outputArr.slice(size, size * 2);\n  }\n\n  // takes in an array of arrays each of length 2*size.  the outter array length must also be a power of two.  only supports complex\n  fft2d(inputArray) {\n    const innerLen = inputArray[0].length / 2;\n    const outterLen = inputArray.length;\n\n    if (innerLen !== this.size) {\n      throw new Error(\"Inner array length must be == 2 * size\");\n    }\n    if (!validSizes.includes(outterLen)) {\n      throw new Error(\n        \"Outter array length must be a power of 2 between 4 and 131072\",\n      );\n    }\n\n    let intermediateArray = [];\n    for (let i = 0; i < outterLen; i++) {\n      this.outputArr = this.fft(inputArray[i]);\n      intermediateArray.push(this.outputArr);\n    }\n\n    // change the sublibs fftsize to the outter\n    this.dispose();\n    this.size = outterLen;\n    this.setSubLibrary(this.subLibrary); // this should reinitialize the sublib with the new size\n\n    // normally at these point we would transpose the 2d array, but with javascript its easier to just incorporate it into the next step when we pull elements\n    let finalArray = [];\n    for (let i = 0; i < innerLen; i++) {\n      const newArray = new Float32Array(2 * outterLen);\n      newArray.fill(0);\n      for (let j = 0; j < outterLen; j++) {\n        newArray[2 * j] = intermediateArray[j][2 * i];\n        newArray[2 * j + 1] = intermediateArray[j][2 * i + 1];\n      }\n      let temparray = new Float32Array(2 * outterLen);\n      temparray = this.fft(newArray);\n      finalArray.push(temparray);\n    }\n\n    // Now do a final transpose\n    let outputArray = [];\n    for (let i = 0; i < outterLen; i++) {\n      let newArray = new Float32Array(2 * innerLen);\n      for (let j = 0; j < innerLen; j++) {\n        newArray[2 * j] = finalArray[j][2 * i];\n        newArray[2 * j + 1] = finalArray[j][2 * i + 1];\n      }\n      outputArray.push(newArray);\n    }\n\n    // change back to original size\n    this.dispose();\n    this.size = innerLen;\n    this.setSubLibrary(this.subLibrary); // this should reinitialize the sublib to the original size\n\n    return outputArray;\n  }\n\n  profile(duration = 1, refresh = true, quick = false) {\n    if (!refresh && this.getCurrentProfile()) {\n      return this.getCurrentProfile();\n    }\n    const totalStart = performance.now();\n    let subLibraries;\n    if (quick) {\n      subLibraries = this.availableSubLibrariesQuick();\n    } else {\n      subLibraries = this.availableSubLibraries();\n    }\n    let ffsPerSecond = [];\n    const secondsPerRun = duration / subLibraries.length / 2; // split in half because of warmup\n    for (let i = 0; i < subLibraries.length; i++) {\n      this.setSubLibrary(subLibraries[i]);\n\n      // Create input array\n      const ci = new Float32Array(2 * this.size);\n      for (let j = 0; j < this.size; j++) {\n        ci[2 * j] = Math.random() - 0.5;\n        ci[2 * j + 1] = Math.random() - 0.5;\n      }\n\n      // Warmup\n      let start = performance.now();\n      while ((performance.now() - start) / 1e3 < secondsPerRun) {\n        const co = this.fft(ci);\n      }\n\n      // Benchmark\n      start = performance.now();\n      let numFfts = 0;\n      while ((performance.now() - start) / 1e3 < secondsPerRun) {\n        const co = this.fft(ci);\n        numFfts++;\n      }\n      ffsPerSecond.push((1e3 * numFfts) / (performance.now() - start));\n\n      this.dispose();\n    }\n    const totalElapsed = (performance.now() - totalStart) / 1e3;\n\n    // Update current FFT method\n    let argmax = ffsPerSecond.indexOf(Math.max(...ffsPerSecond));\n\n    const profileObj = {\n      fftsPerSecond: ffsPerSecond,\n      subLibraries: subLibraries,\n      totalElapsed: totalElapsed,\n      fastestSubLibrary: subLibraries[argmax],\n    };\n\n    console.log(\"Setting sublibrary to\", profileObj.fastestSubLibrary);\n    this.setSubLibrary(profileObj.fastestSubLibrary);\n    if (typeof localStorage !== \"undefined\") {\n      localStorage.setItem(\"webfftProfile\", JSON.stringify(profileObj));\n    }\n    return profileObj;\n  }\n\n  async checkBrowserCapabilities() {\n    return await checkBrowserCapabilities();\n  }\n\n  dispose() {\n    if (this.fftLibrary && this.fftLibrary.dispose !== undefined) {\n      this.fftLibrary.dispose();\n    }\n  }\n}\n\nexport default webfft;\n","// 時間領域の特徴量\nexport {\n  getPeaks,\n  getRMS,\n  getZeroCrossing,\n  getWaveform,\n  getPeak,\n  getPeakAmplitude\n} from './time.js';\nexport type {\n  PeaksOptions,\n  Peak,\n  PeaksResult,\n  WaveformOptions,\n  WaveformPoint,\n  WaveformResult\n} from './time.js';\n\n// 周波数領域の特徴量\nexport { getFFT, getSpectrum } from './frequency.js';\nexport type {\n  FFTOptions,\n  SpectrumOptions,\n  FFTAnalysisResult,\n  SpectrumAnalysisResult,\n  SpectrogramData\n} from './frequency.js';\n\n// スペクトル特徴量\nexport { getSpectralFeatures, getTimeVaryingSpectralFeatures } from './spectral.js';\nexport type {\n  SpectralFeaturesOptions,\n  SpectralFeaturesResult,\n  TimeVaryingSpectralOptions,\n  TimeVaryingSpectralResult\n} from './spectral.js';\n\n// エネルギー解析\nexport { getEnergy } from './energy.js';\nexport type { EnergyOptions, EnergyResult } from './energy.js';\n\n// ダイナミクス解析\nexport { getCrestFactor } from './dynamics.js';\nexport type { CrestFactorOptions, CrestFactorResult } from './dynamics.js';\n\n// ステレオ解析\nexport { getStereoAnalysis, getTimeVaryingStereoAnalysis } from './stereo.js';\nexport type { StereoAnalysisOptions, StereoAnalysisResult } from './stereo.js';\n\n// VAD（音声区間検出）\nexport { getVAD } from './vad.js';\nexport type { VADOptions, VADSegment, VADResult } from './vad.js';\n\n// LUFS（ラウドネス測定）\nexport { getLUFS } from './loudness.js';\nexport type { LUFSOptions, LUFSResult } from './loudness.js';\n","/**\n * audio-inspect ライブラリの型定義\n */\n\nimport type { FFTProviderType } from './core/fft-provider.js';\n\n/**\n * 音声ソースの型定義\n */\nexport type AudioSource =\n  | ArrayBuffer\n  | Blob\n  | File\n  | URL\n  | string // URLパス\n  | MediaStream\n  | AudioBuffer\n  | AudioData;\n\n/**\n * 音声データの構造\n */\nexport interface AudioData {\n  /** サンプルレート（Hz） */\n  sampleRate: number;\n  /** チャンネルごとのオーディオデータ */\n  channelData: Float32Array[];\n  /** 音声の長さ（秒） */\n  duration: number;\n  /** チャンネル数 */\n  numberOfChannels: number;\n  /** サンプル数 */\n  length: number;\n}\n\n/**\n * 特徴抽出関数の型\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type Feature<T> = (audio: AudioData, ...args: any[]) => T | Promise<T>;\n\n/**\n * ロード時のオプション\n */\nexport interface LoadOptions {\n  /** リサンプリング対象のサンプルレート */\n  sampleRate?: number;\n  /** チャンネル数の指定 */\n  channels?: number | 'mono';\n  /** 正規化するか */\n  normalize?: boolean;\n  /** 遅延読み込み（大きなファイル用） */\n  lazy?: boolean;\n  /** チャンクサイズ（ストリーミング時） */\n  chunkSize?: number;\n}\n\n/**\n * ストリーミング制御インターフェース\n */\nexport interface StreamController {\n  pause(): void;\n  resume(): void;\n  stop(): void;\n  readonly paused: boolean;\n}\n\n/**\n * ストリーミングオプション\n */\nexport interface StreamOptions {\n  /** バッファサイズ */\n  bufferSize?: number;\n  /** ホップサイズ */\n  hopSize?: number;\n  /** 更新頻度の制限（ミリ秒） */\n  throttle?: number;\n  /** 窓関数の種類 */\n  windowFunction?: WindowFunction;\n  /** AudioInspectProcessorのモジュールURL（フル機能版を使用する場合） */\n  processorModuleUrl?: string;\n}\n\n/**\n * 窓関数の種類\n */\nexport type WindowFunction = 'hann' | 'hamming' | 'blackman' | 'rectangular';\n\n/**\n * 振幅測定のオプション\n */\nexport interface AmplitudeOptions {\n  channel?: number;\n  asDB?: boolean;\n  reference?: number; // dB計算の基準値（デフォルト: 1.0 = 0 dBFS）\n}\n\n/**\n * 共通の解析オプション\n */\nexport interface CommonAnalysisOptions {\n  channel?: number;\n}\n\n/**\n * 時間窓パラメータ\n */\nexport interface TimeWindowOptions {\n  windowSizeMs?: number;\n  hopSizeMs?: number;\n}\n\n/**\n * 周波数範囲パラメータ\n */\nexport interface FrequencyRangeOptions {\n  minFrequency?: number;\n  maxFrequency?: number;\n}\n\n/**\n * Nullable型の明示的な定義\n */\nexport type NullableNumber = number | null;\nexport type NullableFloat32Array = Float32Array | null;\n\n/**\n * 結果型（エラー処理用）\n */\nexport type Result<T, E = AudioInspectError> =\n  | { success: true; value: T }\n  | { success: false; error: E };\n\n/**\n * エラーコード\n */\nexport type ErrorCode =\n  | 'INVALID_INPUT'\n  | 'UNSUPPORTED_FORMAT'\n  | 'DECODE_ERROR'\n  | 'NETWORK_ERROR'\n  | 'FFT_PROVIDER_ERROR'\n  | 'PROCESSING_ERROR'\n  | 'INITIALIZATION_FAILED';\n\n/**\n * Audio-inspect specific error\n */\nexport class AudioInspectError extends Error {\n  public override readonly name = 'AudioInspectError';\n\n  constructor(\n    public readonly code: ErrorCode,\n    message: string,\n    public override readonly cause?: unknown\n  ) {\n    super(message);\n  }\n}\n\n/**\n * audio-inspect固有のエラーかチェック\n */\nexport function isAudioInspectError(error: unknown): error is AudioInspectError {\n  return error instanceof AudioInspectError;\n}\n\n/**\n * AudioInspectNodeのオプション\n */\nexport interface AudioInspectNodeOptions {\n  /** 使用する解析機能名 */\n  featureName: string;\n  /** 解析機能に渡すオプション */\n  featureOptions?: unknown;\n  /** 解析を実行するための内部バッファサイズ（サンプル数） */\n  bufferSize?: number;\n  /** 次の解析を開始するまでのオフセット（サンプル数） */\n  hopSize?: number;\n  /** 入力として期待するチャンネル数 */\n  inputChannelCount?: number;\n  /** 使用するFFTプロバイダー */\n  provider?: FFTProviderType;\n}\n\n/**\n * AudioWorkletプロセッサーの初期化オプション\n */\nexport interface AudioInspectProcessorOptions {\n  featureName: string;\n  featureOptions?: unknown;\n  bufferSize: number;\n  hopSize: number;\n  inputChannelCount: number;\n  provider?: FFTProviderType;\n}\n\n/**\n * AudioWorklet共通メッセージ型（型安全性向上）\n */\nexport type AudioWorkletMessage =\n  | AnalysisResultMessage\n  | ErrorMessage\n  | UpdateOptionsMessage\n  | ResetMessage;\n\n/**\n * 解析結果メッセージ\n */\nexport interface AnalysisResultMessage {\n  type: 'analysisResult';\n  data: unknown;\n  timestamp: number;\n}\n\n/**\n * Error message\n */\nexport interface ErrorMessage {\n  type: 'error';\n  message: string;\n  detail?: unknown;\n}\n\n/**\n * オプション更新メッセージ\n */\nexport interface UpdateOptionsMessage {\n  type: 'updateOptions';\n  payload: Partial<AudioInspectProcessorOptions>;\n}\n\n/**\n * リセットメッセージ\n */\nexport interface ResetMessage {\n  type: 'reset';\n}\n\n/**\n * AudioInspectNodeのイベントハンドラー\n */\nexport interface AudioInspectNodeEventHandlers {\n  onresult?: (event: { data: unknown; timestamp: number }) => void;\n  onerror?: (event: { message: string; detail?: unknown }) => void;\n}\n\n// Buffer overflow warning message (newly added)\nexport interface BufferOverflowMessage {\n  type: 'bufferOverflow';\n  details: {\n    bufferWritePosition: number;\n    bufferSize: number;\n    timestamp: number;\n  };\n}\n","import { AudioData, AudioInspectError } from '../types.js';\n\n/**\n * Safely get channel data common function\n * @param audio - AudioData object\n * @param channel - Channel number (-1 for average of all channels)\n * @returns Data of the specified channel\n * @throws AudioInspectError if channel is invalid\n */\nexport function getChannelData(audio: AudioData, channel: number): Float32Array {\n  if (channel === -1) {\n    // Calculate average of all channels\n    const averageData = new Float32Array(audio.length);\n    for (let i = 0; i < audio.length; i++) {\n      let sum = 0;\n      for (let ch = 0; ch < audio.numberOfChannels; ch++) {\n        const channelData = audio.channelData[ch];\n        if (!channelData) {\n          throw new AudioInspectError('INVALID_INPUT', `Channel ${ch} data does not exist`);\n        }\n        if (i < channelData.length) {\n          const sample = channelData[i];\n          if (sample !== undefined) {\n            sum += sample;\n          }\n        }\n      }\n      averageData[i] = sum / audio.numberOfChannels;\n    }\n    return averageData;\n  }\n\n  if (channel < 0 || channel >= audio.numberOfChannels) {\n    throw new AudioInspectError(\n      'INVALID_INPUT',\n      `Invalid channel number: ${channel}. Valid range is 0-${audio.numberOfChannels - 1} or -1 (average)`\n    );\n  }\n\n  const channelData = audio.channelData[channel];\n  if (!channelData) {\n    throw new AudioInspectError('INVALID_INPUT', `Channel ${channel} data does not exist`);\n  }\n\n  return channelData;\n}\n\n/**\n * Check if a number is a power of two\n */\nexport function isPowerOfTwo(n: number): boolean {\n  return n > 0 && Number.isInteger(n) && (n & (n - 1)) === 0;\n}\n\n/**\n * Calculate the next power of two\n */\nexport function nextPowerOfTwo(n: number): number {\n  if (!isValidSample(n) || n <= 0) return 1;\n  if (isPowerOfTwo(n)) return n;\n  return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n\n/**\n * Type-safe array access\n */\nexport function safeArrayAccess<T>(array: ArrayLike<T>, index: number, defaultValue: T): T {\n  if (index >= 0 && index < array.length) {\n    return array[index] ?? defaultValue;\n  }\n  return defaultValue;\n}\n\n/**\n * Validate number validity\n */\nexport function isValidSample(value: unknown): value is number {\n  return typeof value === 'number' && !isNaN(value) && isFinite(value);\n}\n\n/**\n * Safe retrieval of sample values\n */\nexport function ensureValidSample(\n  value: number | undefined | null,\n  defaultValue: number = 0\n): number {\n  return isValidSample(value) ? value : defaultValue;\n}\n\n/**\n * Safe allocation of Float32Array\n */\nexport function ensureFloat32Array(\n  data: Float32Array | undefined | null,\n  length: number\n): Float32Array {\n  if (data instanceof Float32Array && data.length === length) {\n    return data;\n  }\n  return new Float32Array(length);\n}\n\n/**\n * Convert amplitude to dB\n */\nexport function amplitudeToDecibels(amplitude: number, reference: number = 1.0): number {\n  const MIN_AMPLITUDE_FOR_DB = 1e-10; // -200 dBFS\n  const SILENCE_DB = -Infinity;\n\n  if (amplitude <= 0 || reference <= 0) {\n    return SILENCE_DB;\n  }\n\n  const ratio = amplitude / reference;\n  return ratio > MIN_AMPLITUDE_FOR_DB ? 20 * Math.log10(ratio) : SILENCE_DB;\n}\n\n/**\n * Convert dB to amplitude\n */\nexport function decibelsToAmplitude(db: number, reference: number = 1.0): number {\n  if (!isFinite(db)) return 0;\n  return reference * Math.pow(10, db / 20);\n}\n","import { AudioData, AmplitudeOptions, AudioInspectError } from '../types.js';\nimport {\n  getChannelData,\n  ensureValidSample,\n  isValidSample,\n  amplitudeToDecibels,\n  safeArrayAccess\n} from '../core/utils.js';\n\n/**\n * ピーク検出のオプション\n */\nexport interface PeaksOptions {\n  /** 抽出するピークの数（デフォルト: 100） */\n  count?: number;\n  /** ピーク検出の閾値（0-1、デフォルト: 0.1） */\n  threshold?: number;\n  /** 解析するチャンネル（デフォルト: 0、-1で全チャンネルの平均） */\n  channel?: number;\n  /** 最小ピーク間距離（サンプル数、デフォルト: サンプルレート/100） */\n  minDistance?: number;\n}\n\n/**\n * ピーク情報\n */\nexport interface Peak {\n  /** ピークの位置（サンプル数） */\n  position: number;\n  /** ピークの時間位置（秒） */\n  time: number;\n  /** ピークの振幅（0-1） */\n  amplitude: number;\n}\n\n/**\n * ピーク検出結果\n */\nexport interface PeaksResult {\n  /** 検出されたピーク */\n  peaks: Peak[];\n  /** 最大振幅 */\n  maxAmplitude: number;\n  /** 平均振幅 */\n  averageAmplitude: number;\n}\n\ninterface PeakCandidate {\n  position: number;\n  amplitude: number;\n  prominence?: number; // ピークの顕著性（オプション）\n}\n\n// より洗練されたピーク検出アルゴリズム\nfunction detectAllInitialPeaks(\n  data: Float32Array,\n  threshold: number,\n  includeProminence: boolean = false\n): PeakCandidate[] {\n  const peaks: PeakCandidate[] = [];\n  const length = data.length;\n\n  if (length < 3) return peaks; // 最低3サンプル必要\n\n  for (let i = 1; i < length - 1; i++) {\n    const current = Math.abs(ensureValidSample(data[i]));\n    const prev = Math.abs(ensureValidSample(data[i - 1]));\n    const next = Math.abs(ensureValidSample(data[i + 1]));\n\n    // ローカルマキシマムかつ閾値を超えているか\n    if (current > prev && current > next && current > threshold) {\n      const peak: PeakCandidate = {\n        position: i,\n        amplitude: current\n      };\n\n      // オプション：ピークの顕著性を計算\n      if (includeProminence) {\n        peak.prominence = calculateProminence(data, i, current);\n      }\n\n      peaks.push(peak);\n    }\n  }\n\n  return peaks;\n}\n\n// ピークの顕著性を計算（オプション機能）\nfunction calculateProminence(data: Float32Array, peakIndex: number, peakValue: number): number {\n  // 左側の最小値を探索\n  let leftMin = peakValue;\n  for (let i = peakIndex - 1; i >= 0; i--) {\n    const value = Math.abs(ensureValidSample(data[i]));\n    if (value > peakValue) break; // より高いピークに到達\n    leftMin = Math.min(leftMin, value);\n  }\n\n  // 右側の最小値を探索\n  let rightMin = peakValue;\n  for (let i = peakIndex + 1; i < data.length; i++) {\n    const value = Math.abs(ensureValidSample(data[i]));\n    if (value > peakValue) break; // より高いピークに到達\n    rightMin = Math.min(rightMin, value);\n  }\n\n  return peakValue - Math.max(leftMin, rightMin);\n}\n\n/**\n * ピーク検出を行う\n */\nexport function getPeaks(audio: AudioData, options: PeaksOptions = {}): PeaksResult {\n  const {\n    count = 100,\n    threshold = 0.1,\n    channel = 0,\n    minDistance = Math.floor(audio.sampleRate / 100) // デフォルト10ms\n  } = options;\n\n  if (count <= 0) {\n    throw new AudioInspectError('INVALID_INPUT', 'ピーク数は正の整数である必要があります');\n  }\n\n  if (threshold < 0 || threshold > 1) {\n    throw new AudioInspectError('INVALID_INPUT', '閾値は0から1の範囲である必要があります');\n  }\n\n  const channelData = getChannelData(audio, channel);\n\n  if (channelData.length === 0) {\n    return {\n      peaks: [],\n      maxAmplitude: 0,\n      averageAmplitude: 0\n    };\n  }\n\n  // 1. すべての初期ピーク候補を検出\n  const allInitialPeaks = detectAllInitialPeaks(channelData, threshold);\n\n  if (allInitialPeaks.length === 0) {\n    return {\n      peaks: [],\n      maxAmplitude: 0,\n      averageAmplitude: 0\n    };\n  }\n\n  // 2. 振幅の降順でソート\n  allInitialPeaks.sort((a, b) => b.amplitude - a.amplitude);\n\n  // 3. 空間的フィルタリング（最小距離制約）\n  const selectedPeaks: Peak[] = [];\n  const occupiedRegions: Array<[number, number]> = []; // [start, end]の配列\n\n  for (const candidate of allInitialPeaks) {\n    if (selectedPeaks.length >= count) break;\n\n    // 占有領域との重複をチェック\n    const candidateStart = candidate.position - minDistance;\n    const candidateEnd = candidate.position + minDistance;\n\n    const hasOverlap = occupiedRegions.some(\n      ([start, end]) => !(candidateEnd < start || candidateStart > end)\n    );\n\n    if (!hasOverlap) {\n      selectedPeaks.push({\n        position: candidate.position,\n        time: candidate.position / audio.sampleRate,\n        amplitude: candidate.amplitude\n      });\n\n      occupiedRegions.push([candidateStart, candidateEnd]);\n    }\n  }\n\n  // 4. 時間順でソート\n  selectedPeaks.sort((a, b) => a.position - b.position);\n\n  // 5. 統計情報の計算（すべての候補から）\n  const maxAmplitude = allInitialPeaks.length > 0 ? (allInitialPeaks[0]?.amplitude ?? 0) : 0;\n  const averageAmplitude =\n    allInitialPeaks.length > 0\n      ? allInitialPeaks.reduce((sum, p) => sum + p.amplitude, 0) / allInitialPeaks.length\n      : 0;\n\n  return {\n    peaks: selectedPeaks,\n    maxAmplitude,\n    averageAmplitude\n  };\n}\n\n// 定数定義\nconst SILENCE_DB = -Infinity;\n\n/**\n * RMS（Root Mean Square）を計算\n */\nexport function getRMS(audio: AudioData, optionsOrChannel: AmplitudeOptions | number = {}): number {\n  const options: Required<AmplitudeOptions> =\n    typeof optionsOrChannel === 'number'\n      ? { channel: optionsOrChannel, asDB: false, reference: 1.0 }\n      : {\n          channel: 0,\n          asDB: false,\n          reference: 1.0,\n          ...optionsOrChannel\n        };\n\n  const channelData = getChannelData(audio, options.channel);\n\n  if (channelData.length === 0) {\n    return options.asDB ? SILENCE_DB : 0;\n  }\n\n  // RMS計算（数値的安定性を考慮）\n  let sumOfSquares = 0;\n  let validSampleCount = 0;\n\n  for (let i = 0; i < channelData.length; i++) {\n    const sample = channelData[i];\n    if (isValidSample(sample)) {\n      sumOfSquares += sample * sample;\n      validSampleCount++;\n    }\n  }\n\n  if (validSampleCount === 0) {\n    return options.asDB ? SILENCE_DB : 0;\n  }\n\n  const rms = Math.sqrt(sumOfSquares / validSampleCount);\n\n  return options.asDB ? amplitudeToDecibels(rms, options.reference) : rms;\n}\n\n/**\n * ピーク振幅を計算\n */\nexport function getPeakAmplitude(audio: AudioData, options: AmplitudeOptions = {}): number {\n  const resolvedOptions: Required<AmplitudeOptions> = {\n    channel: 0,\n    asDB: false,\n    reference: 1.0,\n    ...options\n  };\n\n  const channelData = getChannelData(audio, resolvedOptions.channel);\n\n  if (channelData.length === 0) {\n    return resolvedOptions.asDB ? SILENCE_DB : 0;\n  }\n\n  let peak = 0;\n  for (let i = 0; i < channelData.length; i++) {\n    const sample = channelData[i];\n    if (isValidSample(sample)) {\n      peak = Math.max(peak, Math.abs(sample));\n    }\n  }\n\n  return resolvedOptions.asDB ? amplitudeToDecibels(peak, resolvedOptions.reference) : peak;\n}\n\n// エイリアスとしてgetPeakをエクスポート\nexport { getPeakAmplitude as getPeak };\n\n/**\n * ゼロクロッシング率を計算\n */\nexport function getZeroCrossing(audio: AudioData, channel = 0): number {\n  const channelData = getChannelData(audio, channel);\n\n  if (channelData.length < 2) {\n    return 0;\n  }\n\n  let crossings = 0;\n  for (let i = 1; i < channelData.length; i++) {\n    const prev = ensureValidSample(channelData[i - 1]);\n    const current = ensureValidSample(channelData[i]);\n\n    // 符号が変わった場合はゼロクロッシング\n    if ((prev >= 0 && current < 0) || (prev < 0 && current >= 0)) {\n      crossings++;\n    }\n  }\n\n  return crossings / (channelData.length - 1);\n}\n\n/**\n * 波形データ取得のオプション\n */\nexport interface WaveformOptions {\n  /** 1秒あたりのサンプル数（解像度、デフォルト: 60） */\n  framesPerSecond?: number;\n  /** 解析するチャンネル（デフォルト: 0、-1で全チャンネルの平均） */\n  channel?: number;\n  /** 振幅の計算方法（デフォルト: 'rms'） */\n  method?: 'rms' | 'peak' | 'average';\n}\n\n/**\n * 波形データポイント\n */\nexport interface WaveformPoint {\n  /** 時間位置（秒） */\n  time: number;\n  /** 振幅値（0-1） */\n  amplitude: number; // nullを許容しない設計\n}\n\n/**\n * 波形データ取得結果\n */\nexport interface WaveformResult {\n  /** 波形データポイントの配列 */\n  waveform: WaveformPoint[];\n  /** 最大振幅 */\n  maxAmplitude: number;\n  /** 平均振幅 */\n  averageAmplitude: number;\n  /** フレーム数 */\n  frameCount: number;\n  /** フレームあたりのサンプル数 */\n  samplesPerFrame: number;\n}\n\n/**\n * 時間軸に沿った波形データを取得\n */\nexport function getWaveform(audio: AudioData, options: WaveformOptions = {}): WaveformResult {\n  const { framesPerSecond = 60, channel = 0, method = 'rms' } = options;\n\n  const channelData = getChannelData(audio, channel);\n\n  // 修正2.3: 極端なフレーム数指定時の不具合対応\n  // audio.length が0の場合は frameCount も0にする\n  const desiredFrameCount = Math.ceil(audio.duration * framesPerSecond);\n  const maxPossibleFrameCount = audio.length > 0 ? audio.length : desiredFrameCount > 0 ? 1 : 0;\n  const frameCount = Math.min(desiredFrameCount, maxPossibleFrameCount);\n\n  const samplesPerFrame = frameCount > 0 ? Math.max(1, Math.floor(audio.length / frameCount)) : 0;\n\n  const waveform: WaveformPoint[] = [];\n  let maxAmplitude = 0;\n  let totalAmplitude = 0;\n\n  for (let i = 0; i < frameCount; i++) {\n    const startSample = i * samplesPerFrame;\n    const endSample = Math.min(startSample + samplesPerFrame, channelData.length);\n\n    // フレーム長が0または負の場合の処理\n    if (endSample <= startSample) {\n      // 最後の有効な振幅値を使用、または0\n      const lastAmplitude =\n        waveform.length > 0\n          ? safeArrayAccess(waveform, waveform.length - 1, { time: 0, amplitude: 0 }).amplitude\n          : 0;\n\n      waveform.push({\n        time: (startSample + samplesPerFrame / 2) / audio.sampleRate,\n        amplitude: lastAmplitude\n      });\n      continue;\n    }\n\n    // フレームデータの処理\n    const frameData = channelData.subarray(startSample, endSample); // sliceより効率的\n\n    let amplitude: number;\n    switch (method) {\n      case 'peak':\n        amplitude = calculatePeakAmplitude(frameData);\n        break;\n      case 'average':\n        amplitude = calculateAverageAmplitude(frameData);\n        break;\n      case 'rms':\n      default:\n        amplitude = calculateRMSAmplitude(frameData);\n        break;\n    }\n\n    const time = (startSample + (endSample - startSample) / 2) / audio.sampleRate;\n    waveform.push({ time, amplitude });\n\n    maxAmplitude = Math.max(maxAmplitude, amplitude);\n    totalAmplitude += amplitude;\n  }\n\n  const averageAmplitude = frameCount > 0 ? totalAmplitude / frameCount : 0;\n\n  return {\n    waveform,\n    maxAmplitude,\n    averageAmplitude,\n    frameCount,\n    samplesPerFrame\n  };\n}\n\n/**\n * フレーム内のRMS振幅を計算\n */\nfunction calculateRMSAmplitude(frameData: Float32Array): number {\n  if (frameData.length === 0) return 0;\n\n  let sum = 0;\n  for (let i = 0; i < frameData.length; i++) {\n    const sample = ensureValidSample(frameData[i]);\n    sum += sample * sample;\n  }\n  return Math.sqrt(sum / frameData.length);\n}\n\n/**\n * フレーム内のピーク振幅を計算\n */\nfunction calculatePeakAmplitude(frameData: Float32Array): number {\n  let peak = 0;\n  for (let i = 0; i < frameData.length; i++) {\n    const sample = Math.abs(ensureValidSample(frameData[i]));\n    peak = Math.max(peak, sample);\n  }\n  return peak;\n}\n\n/**\n * フレーム内の平均振幅を計算\n */\nfunction calculateAverageAmplitude(frameData: Float32Array): number {\n  if (frameData.length === 0) return 0;\n\n  let sum = 0;\n  for (let i = 0; i < frameData.length; i++) {\n    sum += Math.abs(ensureValidSample(frameData[i]));\n  }\n  return sum / frameData.length;\n}\n","import { AudioInspectError } from '../types.js';\n\n/**\n * FFTプロバイダーの種類\n */\nexport type FFTProviderType = 'webfft' | 'native' | 'custom';\n\n/**\n * FFT結果\n */\nexport interface FFTResult {\n  /** 複素数結果（インターリーブ形式：実部、虚部、実部、虚部...） */\n  complex: Float32Array;\n  /** 振幅スペクトラム */\n  magnitude: Float32Array;\n  /** 位相スペクトラム */\n  phase: Float32Array;\n  /** 周波数ビン（Hz） */\n  frequencies: Float32Array;\n}\n\n/**\n * FFTプロバイダーのインターフェース\n */\nexport interface IFFTProvider {\n  /** プロバイダー名 */\n  readonly name: string;\n  /** FFTサイズ */\n  readonly size: number;\n  /** サンプルレート */\n  readonly sampleRate: number;\n\n  /**\n   * FFTを実行\n   * @param input - 実数入力データ\n   * @returns FFT結果\n   */\n  fft(input: Float32Array): FFTResult;\n\n  /**\n   * リソースを解放\n   */\n  dispose(): void;\n\n  /**\n   * プロファイリングを実行（対応している場合）\n   */\n  profile?(): Promise<void>;\n}\n\n/**\n * FFTプロバイダーの設定\n */\nexport interface FFTProviderConfig {\n  /** プロバイダータイプ */\n  type: FFTProviderType;\n  /** FFTサイズ（2の累乗である必要があります） */\n  fftSize: number;\n  /** サンプルレート */\n  sampleRate: number;\n  /** 自動プロファイリングを有効にするか */\n  enableProfiling?: boolean;\n  /** カスタムプロバイダー（type='custom'の場合） */\n  customProvider?: IFFTProvider;\n}\n\n// WebFFT型定義\ninterface WebFFTInstance {\n  fft(input: Float32Array): Float32Array;\n  profile(): Promise<unknown>;\n  dispose(): void;\n}\n\n/**\n * WebFFTプロバイダーの実装\n */\nclass WebFFTProvider implements IFFTProvider {\n  private fftInstance: WebFFTInstance | null = null;\n\n  constructor(\n    public readonly size: number,\n    public readonly sampleRate: number,\n    private enableProfiling: boolean = false\n  ) {}\n\n  get name(): string {\n    return 'WebFFT';\n  }\n\n  async initializeWebFFT(): Promise<void> {\n    try {\n      // Dynamic import to handle module loading\n      const webfftModule = await import('webfft');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-assignment\n      const WebFFTConstructor = webfftModule.default as any;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.fftInstance = new WebFFTConstructor(this.size) as WebFFTInstance;\n\n      if (this.enableProfiling && this.fftInstance?.profile) {\n        await this.fftInstance.profile();\n      }\n    } catch (error) {\n      throw new AudioInspectError(\n        'UNSUPPORTED_FORMAT',\n        `WebFFTの初期化に失敗しました: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n  }\n\n  fft(input: Float32Array): FFTResult {\n    if (!this.fftInstance) {\n      throw new AudioInspectError('UNSUPPORTED_FORMAT', 'WebFFTが初期化されていません');\n    }\n\n    if (input.length !== this.size) {\n      throw new AudioInspectError(\n        'INVALID_INPUT',\n        `入力サイズが不正です。期待値: ${this.size}, 実際: ${input.length}`\n      );\n    }\n\n    // WebFFTは複素数入力（インターリーブ形式）を期待するので、実数を複素数に変換\n    const complexInput = new Float32Array(this.size * 2);\n    for (let i = 0; i < this.size; i++) {\n      complexInput[i * 2] = input[i] || 0; // 実部\n      complexInput[i * 2 + 1] = 0; // 虚部（0で初期化）\n    }\n\n    // FFT実行\n    const complexOutput = this.fftInstance.fft(complexInput);\n\n    // 結果を処理\n    const magnitude = new Float32Array(this.size / 2 + 1); // 正の周波数のみ\n    const phase = new Float32Array(this.size / 2 + 1);\n    const frequencies = new Float32Array(this.size / 2 + 1);\n\n    for (let i = 0; i < magnitude.length; i++) {\n      const real = complexOutput[i * 2] || 0;\n      const imag = complexOutput[i * 2 + 1] || 0;\n\n      magnitude[i] = Math.sqrt(real * real + imag * imag);\n      phase[i] = Math.atan2(imag, real);\n      frequencies[i] = (i * this.sampleRate) / this.size;\n    }\n\n    return {\n      complex: complexOutput,\n      magnitude,\n      phase,\n      frequencies\n    };\n  }\n\n  async profile(): Promise<void> {\n    if (!this.fftInstance || !this.fftInstance.profile) {\n      throw new AudioInspectError('UNSUPPORTED_FORMAT', 'WebFFTが初期化されていません');\n    }\n\n    await this.fftInstance.profile();\n  }\n\n  dispose(): void {\n    if (this.fftInstance && this.fftInstance.dispose) {\n      this.fftInstance.dispose();\n      this.fftInstance = null;\n    }\n  }\n}\n\n/**\n * 効率的なネイティブFFTプロバイダー（Cooley-Tukey実装）\n */\nclass NativeFFTProvider implements IFFTProvider {\n  private bitReversalTable!: Uint32Array;\n  private twiddleFactorsReal!: Float32Array;\n  private twiddleFactorsImag!: Float32Array;\n\n  constructor(\n    public readonly size: number,\n    public readonly sampleRate: number\n  ) {\n    if (!this.isPowerOfTwo(size)) {\n      throw new AudioInspectError('INVALID_INPUT', 'FFTサイズは2の冪である必要があります');\n    }\n    this.precomputeTables();\n  }\n\n  get name(): string {\n    return 'Native FFT (Cooley-Tukey)';\n  }\n\n  private isPowerOfTwo(n: number): boolean {\n    return n > 0 && (n & (n - 1)) === 0;\n  }\n\n  private precomputeTables(): void {\n    // ビット反転テーブルの事前計算\n    this.bitReversalTable = new Uint32Array(this.size);\n    const bits = Math.log2(this.size);\n    for (let i = 0; i < this.size; i++) {\n      let reversed = 0;\n      for (let j = 0; j < bits; j++) {\n        reversed = (reversed << 1) | ((i >> j) & 1);\n      }\n      this.bitReversalTable[i] = reversed;\n    }\n\n    // Twiddle factorsの事前計算\n    const halfSize = this.size / 2;\n    this.twiddleFactorsReal = new Float32Array(halfSize);\n    this.twiddleFactorsImag = new Float32Array(halfSize);\n    for (let i = 0; i < halfSize; i++) {\n      const angle = (-2 * Math.PI * i) / this.size;\n      this.twiddleFactorsReal[i] = Math.cos(angle);\n      this.twiddleFactorsImag[i] = Math.sin(angle);\n    }\n  }\n\n  fft(input: Float32Array): FFTResult {\n    if (input.length !== this.size) {\n      throw new AudioInspectError(\n        'INVALID_INPUT',\n        `入力サイズが不正です。期待値: ${this.size}, 実際: ${input.length}`\n      );\n    }\n\n    // 複素数配列の初期化（ビット反転順）\n    const real = new Float32Array(this.size);\n    const imag = new Float32Array(this.size);\n\n    for (let i = 0; i < this.size; i++) {\n      const reversedIndex = this.bitReversalTable[i];\n      if (reversedIndex !== undefined) {\n        real[reversedIndex] = input[i] || 0;\n        imag[reversedIndex] = 0;\n      }\n    }\n\n    // Cooley-Tukey FFTアルゴリズム\n    for (let stage = 1; stage < this.size; stage *= 2) {\n      const stageSize = stage * 2;\n      const twiddleStep = this.size / stageSize;\n\n      for (let k = 0; k < this.size; k += stageSize) {\n        for (let j = 0; j < stage; j++) {\n          const twiddleIndex = j * twiddleStep;\n          const wr = this.twiddleFactorsReal[twiddleIndex] || 0;\n          const wi = this.twiddleFactorsImag[twiddleIndex] || 0;\n\n          const evenIndex = k + j;\n          const oddIndex = k + j + stage;\n\n          const evenReal = real[evenIndex] || 0;\n          const evenImag = imag[evenIndex] || 0;\n          const oddReal = real[oddIndex] || 0;\n          const oddImag = imag[oddIndex] || 0;\n\n          const tempReal = oddReal * wr - oddImag * wi;\n          const tempImag = oddReal * wi + oddImag * wr;\n\n          real[evenIndex] = evenReal + tempReal;\n          imag[evenIndex] = evenImag + tempImag;\n          real[oddIndex] = evenReal - tempReal;\n          imag[oddIndex] = evenImag - tempImag;\n        }\n      }\n    }\n\n    // 結果の構築\n    const complex = new Float32Array(this.size * 2);\n    const magnitude = new Float32Array(this.size / 2 + 1);\n    const phase = new Float32Array(this.size / 2 + 1);\n    const frequencies = new Float32Array(this.size / 2 + 1);\n\n    for (let i = 0; i < this.size; i++) {\n      complex[i * 2] = real[i] || 0;\n      complex[i * 2 + 1] = imag[i] || 0;\n\n      if (i <= this.size / 2) {\n        const realPart = real[i] || 0;\n        const imagPart = imag[i] || 0;\n        magnitude[i] = Math.sqrt(realPart * realPart + imagPart * imagPart);\n        phase[i] = Math.atan2(imagPart, realPart);\n        frequencies[i] = (i * this.sampleRate) / this.size;\n      }\n    }\n\n    return { complex, magnitude, phase, frequencies };\n  }\n\n  dispose(): void {\n    // メモリの明示的な解放（必要に応じて）\n  }\n}\n\n/**\n * FFTプロバイダーファクトリー\n */\nexport class FFTProviderFactory {\n  /**\n   * 指定された設定でFFTプロバイダーを作成\n   */\n  static async createProvider(config: FFTProviderConfig): Promise<IFFTProvider> {\n    switch (config.type) {\n      case 'webfft': {\n        const provider = new WebFFTProvider(\n          config.fftSize,\n          config.sampleRate,\n          config.enableProfiling\n        );\n        // 初期化を待つ\n        await provider.initializeWebFFT();\n        return provider;\n      }\n\n      case 'native':\n        return new NativeFFTProvider(config.fftSize, config.sampleRate);\n\n      case 'custom':\n        if (!config.customProvider) {\n          throw new AudioInspectError('INVALID_INPUT', 'カスタムプロバイダーが指定されていません');\n        }\n        return config.customProvider;\n\n      default: {\n        const exhaustiveCheck: never = config.type;\n        throw new AudioInspectError(\n          'UNSUPPORTED_FORMAT',\n          `未対応のFFTプロバイダー: ${String(exhaustiveCheck)}`\n        );\n      }\n    }\n  }\n\n  /**\n   * 利用可能なプロバイダーをリスト\n   */\n  static getAvailableProviders(): FFTProviderType[] {\n    return ['webfft', 'native'];\n  }\n}\n","import { AudioData, AudioInspectError } from '../types.js';\nimport { FFTProviderFactory, type FFTProviderType, type FFTResult } from '../core/fft-provider.js';\n\n/**\n * FFT分析のオプション\n */\nexport interface FFTOptions {\n  /** FFTサイズ（デフォルト: 2048、2の累乗である必要があります） */\n  fftSize?: number;\n  /** ウィンドウ関数（デフォルト: 'hann'） */\n  windowFunction?: 'hann' | 'hamming' | 'blackman' | 'none';\n  /** オーバーラップ率（デフォルト: 0.5） */\n  overlap?: number;\n  /** 解析するチャンネル（デフォルト: 0、-1で全チャンネルの平均） */\n  channel?: number;\n  /** FFTプロバイダー（デフォルト: 'webfft'） */\n  provider?: FFTProviderType;\n  /** プロファイリングを有効にする（WebFFTのみ） */\n  enableProfiling?: boolean;\n}\n\n/**\n * スペクトラム解析のオプション\n */\nexport interface SpectrumOptions extends FFTOptions {\n  /** 最小周波数（Hz、デフォルト: 0） */\n  minFrequency?: number;\n  /** 最大周波数（Hz、デフォルト: ナイキスト周波数） */\n  maxFrequency?: number;\n  /** dB表示かどうか（デフォルト: true） */\n  decibels?: boolean;\n  /** 時間フレーム数（スペクトログラム用、デフォルト: 100） */\n  timeFrames?: number;\n}\n\n/**\n * スペクトログラムデータ\n */\nexport interface SpectrogramData {\n  /** 時間軸（秒） */\n  times: Float32Array;\n  /** 周波数軸（Hz） */\n  frequencies: Float32Array;\n  /** 強度データ（時間 x 周波数） */\n  intensities: Float32Array[];\n  /** フレーム数 */\n  timeFrames: number;\n  /** 周波数ビン数 */\n  frequencyBins: number;\n}\n\n/**\n * FFT分析結果\n */\nexport interface FFTAnalysisResult extends FFTResult {\n  /** FFTサイズ */\n  fftSize: number;\n  /** 使用されたウィンドウ関数 */\n  windowFunction: string;\n  /** プロバイダー名 */\n  providerName: string;\n}\n\n/**\n * スペクトラム解析結果\n */\nexport interface SpectrumAnalysisResult {\n  /** 周波数（Hz） */\n  frequencies: Float32Array;\n  /** 強度 */\n  magnitudes: Float32Array;\n  /** dB値（decielsオプションがtrueの場合） */\n  decibels?: Float32Array;\n  /** スペクトログラム（timeFrames > 1の場合） */\n  spectrogram?: SpectrogramData;\n}\n\n/**\n * ウィンドウ関数を適用\n */\nfunction applyWindow(data: Float32Array, windowType: string): Float32Array {\n  const windowed = new Float32Array(data.length);\n  const N = data.length;\n\n  for (let i = 0; i < N; i++) {\n    let windowValue = 1;\n\n    switch (windowType) {\n      case 'hann':\n        windowValue = 0.5 * (1 - Math.cos((2 * Math.PI * i) / (N - 1)));\n        break;\n      case 'hamming':\n        windowValue = 0.54 - 0.46 * Math.cos((2 * Math.PI * i) / (N - 1));\n        break;\n      case 'blackman':\n        windowValue =\n          0.42 -\n          0.5 * Math.cos((2 * Math.PI * i) / (N - 1)) +\n          0.08 * Math.cos((4 * Math.PI * i) / (N - 1));\n        break;\n      case 'none':\n      default:\n        windowValue = 1;\n        break;\n    }\n\n    windowed[i] = (data[i] || 0) * windowValue;\n  }\n\n  return windowed;\n}\n\n/**\n * 指定されたチャンネルのデータを取得\n */\nfunction getChannelData(audio: AudioData, channel: number): Float32Array {\n  if (channel === -1) {\n    // 全チャンネルの平均を計算\n    const averageData = new Float32Array(audio.length);\n    for (let i = 0; i < audio.length; i++) {\n      let sum = 0;\n      for (let ch = 0; ch < audio.numberOfChannels; ch++) {\n        const channelData = audio.channelData[ch];\n        if (channelData && i < channelData.length) {\n          sum += channelData[i] as number;\n        }\n      }\n      averageData[i] = sum / audio.numberOfChannels;\n    }\n    return averageData;\n  }\n\n  if (channel < -1 || channel >= audio.numberOfChannels) {\n    throw new AudioInspectError('INVALID_INPUT', `Invalid channel number: ${channel}`);\n  }\n\n  const channelData = audio.channelData[channel];\n  if (!channelData) {\n    throw new AudioInspectError('INVALID_INPUT', `Channel ${channel} data does not exist`);\n  }\n\n  return channelData;\n}\n\n/**\n * FFT分析を行う\n *\n * @param audio - 音声データ\n * @param options - FFTオプション\n * @returns FFT結果\n */\nexport async function getFFT(\n  audio: AudioData,\n  options: FFTOptions = {}\n): Promise<FFTAnalysisResult> {\n  const {\n    fftSize = 2048,\n    windowFunction = 'hann',\n    channel = 0,\n    provider = 'webfft',\n    enableProfiling = false\n  } = options;\n\n  // チャンネルデータを取得\n  const channelData = getChannelData(audio, channel);\n\n  // FFTサイズが入力より大きい場合、ゼロパディング\n  let inputData: Float32Array;\n  if (channelData.length < fftSize) {\n    inputData = new Float32Array(fftSize);\n    inputData.set(channelData);\n  } else {\n    inputData = channelData.slice(0, fftSize);\n  }\n\n  // ウィンドウ関数を適用\n  const windowedData = applyWindow(inputData, windowFunction);\n\n  // FFTプロバイダーを作成\n  const fftProvider = await FFTProviderFactory.createProvider({\n    type: provider,\n    fftSize,\n    sampleRate: audio.sampleRate,\n    enableProfiling\n  });\n\n  try {\n    // FFTを実行\n    const result = fftProvider.fft(windowedData);\n\n    return {\n      ...result,\n      fftSize,\n      windowFunction,\n      providerName: fftProvider.name\n    };\n  } finally {\n    // リソースを解放\n    fftProvider.dispose();\n  }\n}\n\n/**\n * スペクトラム解析を行う\n *\n * @param audio - 音声データ\n * @param options - スペクトラムオプション\n * @returns スペクトラム解析結果\n */\nexport async function getSpectrum(\n  audio: AudioData,\n  options: SpectrumOptions = {}\n): Promise<SpectrumAnalysisResult> {\n  const {\n    fftSize = 2048,\n    minFrequency = 0,\n    maxFrequency = audio.sampleRate / 2,\n    decibels = true,\n    timeFrames = 1,\n    overlap = 0.5,\n    ...fftOptions\n  } = options;\n\n  const channelData = getChannelData(audio, options.channel || 0);\n\n  if (timeFrames === 1) {\n    // 単一フレームのスペクトラム解析\n    const fftResult = await getFFT(audio, { ...fftOptions, fftSize });\n\n    // 周波数範囲をフィルタリング\n    const filteredResult = filterFrequencyRange(fftResult, minFrequency, maxFrequency);\n\n    const result: SpectrumAnalysisResult = {\n      frequencies: filteredResult.frequencies,\n      magnitudes: filteredResult.magnitude\n    };\n\n    if (decibels) {\n      result.decibels = magnitudeToDecibels(filteredResult.magnitude);\n    }\n\n    return result;\n  } else {\n    // スペクトログラム解析\n    const spectrogram = await computeSpectrogram(\n      channelData,\n      audio.sampleRate,\n      fftSize,\n      timeFrames,\n      overlap,\n      { ...fftOptions, minFrequency, maxFrequency, decibels }\n    );\n\n    return {\n      frequencies: spectrogram.frequencies,\n      magnitudes: new Float32Array(), // スペクトログラムでは個別のmagnitudesは空\n      spectrogram\n    };\n  }\n}\n\n/**\n * 周波数範囲をフィルタリング\n */\nfunction filterFrequencyRange(fftResult: FFTResult, minFreq: number, maxFreq: number): FFTResult {\n  const { frequencies, magnitude, phase, complex } = fftResult;\n\n  const startIndex = frequencies.findIndex((f) => f >= minFreq);\n  const endIndex = frequencies.findIndex((f) => f > maxFreq);\n  const actualEndIndex = endIndex === -1 ? frequencies.length : endIndex;\n\n  return {\n    frequencies: frequencies.slice(startIndex, actualEndIndex),\n    magnitude: magnitude.slice(startIndex, actualEndIndex),\n    phase: phase.slice(startIndex, actualEndIndex),\n    complex: complex.slice(startIndex * 2, actualEndIndex * 2)\n  };\n}\n\n/**\n * 振幅をdBに変換\n */\nfunction magnitudeToDecibels(magnitude: Float32Array): Float32Array {\n  const decibels = new Float32Array(magnitude.length);\n  for (let i = 0; i < magnitude.length; i++) {\n    const mag = magnitude[i] || 0;\n    decibels[i] = mag > 0 ? 20 * Math.log10(mag) : -Infinity;\n  }\n  return decibels;\n}\n\n/**\n * スペクトログラム計算のオプション\n */\ninterface SpectrogramOptions {\n  provider?: FFTProviderType;\n  enableProfiling?: boolean;\n  windowFunction?: string;\n  minFrequency?: number;\n  maxFrequency?: number;\n  decibels?: boolean;\n}\n\n/**\n * スペクトログラムを計算\n */\nasync function computeSpectrogram(\n  data: Float32Array,\n  sampleRate: number,\n  fftSize: number,\n  timeFrames: number,\n  overlap: number,\n  options: SpectrogramOptions\n): Promise<SpectrogramData> {\n  const hopSize = Math.floor(fftSize * (1 - overlap));\n\n  // 修正2.2: 短音声データ処理時のフレーム数不足対応\n  let numPossibleFrames;\n  if (data.length === 0) {\n    numPossibleFrames = 0;\n  } else if (data.length < fftSize) {\n    // data.length > 0 かつ data.length < fftSize の場合、1フレームとして処理\n    numPossibleFrames = 1;\n  } else {\n    // data.length >= fftSize の場合\n    numPossibleFrames = Math.floor((data.length - fftSize) / hopSize) + 1;\n  }\n  const actualFrames = Math.min(timeFrames, numPossibleFrames);\n\n  const times = new Float32Array(actualFrames);\n  const intensities: Float32Array[] = [];\n  let frequencies: Float32Array = new Float32Array();\n  let filteredFrequencies: Float32Array = new Float32Array();\n  let frequencyStartIndex = 0;\n  let frequencyEndIndex = 0;\n\n  // FFTプロバイダーを作成（一度だけ）\n  const fftProvider = await FFTProviderFactory.createProvider({\n    type: options.provider || 'webfft',\n    fftSize,\n    sampleRate,\n    enableProfiling: options.enableProfiling || false\n  });\n\n  try {\n    for (let frame = 0; frame < actualFrames; frame++) {\n      const startSample = frame * hopSize;\n\n      // フレームデータを抽出\n      const frameData = new Float32Array(fftSize);\n      for (let i = 0; i < fftSize; i++) {\n        frameData[i] = startSample + i < data.length ? data[startSample + i] || 0 : 0;\n      }\n\n      // ウィンドウ関数を適用\n      const windowedData = applyWindow(frameData, options.windowFunction || 'hann');\n\n      // FFTを実行\n      const fftResult = fftProvider.fft(windowedData);\n\n      // 修正2.1: 最初のフレームで周波数範囲フィルタリングを設定\n      if (frame === 0) {\n        frequencies = fftResult.frequencies;\n\n        // 周波数フィルタリングのインデックス範囲を決定\n        const minFreq = options.minFrequency || 0;\n        const maxFreq = options.maxFrequency || sampleRate / 2;\n\n        frequencyStartIndex = frequencies.findIndex((f) => f >= minFreq);\n        if (frequencyStartIndex === -1) frequencyStartIndex = 0;\n\n        const tempEndIndex = frequencies.findIndex((f) => f > maxFreq);\n        frequencyEndIndex = tempEndIndex === -1 ? frequencies.length : tempEndIndex;\n\n        // フィルタリングされた周波数軸を作成\n        filteredFrequencies = frequencies.slice(frequencyStartIndex, frequencyEndIndex);\n      }\n\n      // 強度データを保存（周波数範囲フィルタリング適用）\n      const magnitude = fftResult.magnitude;\n      const filteredMagnitude = magnitude.slice(frequencyStartIndex, frequencyEndIndex);\n      const frameIntensity = options.decibels\n        ? magnitudeToDecibels(filteredMagnitude)\n        : filteredMagnitude;\n      intensities.push(frameIntensity);\n\n      // 時間位置を計算\n      times[frame] = (startSample + fftSize / 2) / sampleRate;\n    }\n  } finally {\n    fftProvider.dispose();\n  }\n\n  return {\n    times,\n    frequencies: filteredFrequencies, // フィルタリングされた周波数軸を返す\n    intensities,\n    timeFrames: actualFrames,\n    frequencyBins: filteredFrequencies.length\n  };\n}\n","import { AudioData, AudioInspectError } from '../types';\nimport { ensureValidSample } from '../core/utils';\nimport { getFFT } from './frequency';\n\n/**\n * スペクトル特徴量のオプション\n */\nexport interface SpectralFeaturesOptions {\n  /** FFTサイズ */\n  fftSize?: number;\n  /** 窓関数 */\n  windowFunction?: 'hann' | 'hamming' | 'blackman' | 'none';\n  /** 解析するチャンネル */\n  channel?: number;\n  /** 最小周波数 */\n  minFrequency?: number;\n  /** 最大周波数 */\n  maxFrequency?: number;\n  /** スペクトルロールオフの閾値（0-1） */\n  rolloffThreshold?: number;\n}\n\n/**\n * スペクトル特徴量の結果\n */\nexport interface SpectralFeaturesResult {\n  /** スペクトル重心（Hz） */\n  spectralCentroid: number;\n  /** スペクトル帯域幅（Hz） */\n  spectralBandwidth: number;\n  /** スペクトルロールオフ（Hz） */\n  spectralRolloff: number;\n  /** スペクトルフラットネス（0-1） */\n  spectralFlatness: number;\n  /** スペクトルフラックス */\n  spectralFlux?: number;\n  /** ゼロ交差率 */\n  zeroCrossingRate: number;\n  /** 使用された周波数範囲 */\n  frequencyRange: { min: number; max: number };\n}\n\n/**\n * 時系列スペクトル特徴量のオプション\n */\nexport interface TimeVaryingSpectralOptions extends SpectralFeaturesOptions {\n  /** フレームサイズ */\n  frameSize?: number;\n  /** ホップサイズ */\n  hopSize?: number;\n  /** フレーム数（指定しない場合は全体を解析） */\n  numFrames?: number;\n}\n\n/**\n * 時系列スペクトル特徴量の結果\n */\nexport interface TimeVaryingSpectralResult {\n  /** 時間軸（秒） */\n  times: Float32Array;\n  /** スペクトル重心の時系列 */\n  spectralCentroid: Float32Array;\n  /** スペクトル帯域幅の時系列 */\n  spectralBandwidth: Float32Array;\n  /** スペクトルロールオフの時系列 */\n  spectralRolloff: Float32Array;\n  /** スペクトルフラットネスの時系列 */\n  spectralFlatness: Float32Array;\n  /** スペクトルフラックスの時系列 */\n  spectralFlux: Float32Array;\n  /** ゼロ交差率の時系列 */\n  zeroCrossingRate: Float32Array;\n  /** フレーム情報 */\n  frameInfo: {\n    frameSize: number;\n    hopSize: number;\n    numFrames: number;\n  };\n}\n\n/**\n * スペクトル重心を計算\n * @param magnitude スペクトル振幅\n * @param frequencies 周波数配列\n * @param minFreq 最小周波数\n * @param maxFreq 最大周波数\n * @returns スペクトル重心（Hz）\n */\nfunction calculateSpectralCentroid(\n  magnitude: Float32Array,\n  frequencies: Float32Array,\n  minFreq: number,\n  maxFreq: number\n): number {\n  let weightedSum = 0;\n  let magnitudeSum = 0;\n\n  for (let i = 0; i < magnitude.length && i < frequencies.length; i++) {\n    const freq = frequencies[i];\n    const mag = magnitude[i];\n    if (freq !== undefined && mag !== undefined && freq >= minFreq && freq <= maxFreq) {\n      weightedSum += freq * mag;\n      magnitudeSum += mag;\n    }\n  }\n\n  return magnitudeSum > 1e-10 ? weightedSum / magnitudeSum : 0;\n}\n\n/**\n * スペクトル帯域幅を計算\n * @param magnitude スペクトル振幅\n * @param frequencies 周波数配列\n * @param centroid スペクトル重心\n * @param minFreq 最小周波数\n * @param maxFreq 最大周波数\n * @returns スペクトル帯域幅（Hz）\n */\nfunction calculateSpectralBandwidth(\n  magnitude: Float32Array,\n  frequencies: Float32Array,\n  centroid: number,\n  minFreq: number,\n  maxFreq: number\n): number {\n  let weightedVarianceSum = 0;\n  let magnitudeSum = 0;\n\n  for (let i = 0; i < magnitude.length && i < frequencies.length; i++) {\n    const freq = frequencies[i];\n    const mag = magnitude[i];\n    if (freq !== undefined && mag !== undefined && freq >= minFreq && freq <= maxFreq) {\n      const deviation = freq - centroid;\n      weightedVarianceSum += deviation * deviation * mag;\n      magnitudeSum += mag;\n    }\n  }\n\n  return magnitudeSum > 1e-10 ? Math.sqrt(weightedVarianceSum / magnitudeSum) : 0;\n}\n\n/**\n * スペクトルロールオフを計算\n * @param magnitude スペクトル振幅\n * @param frequencies 周波数配列\n * @param threshold 閾値（0-1）\n * @param minFreq 最小周波数\n * @param maxFreq 最大周波数\n * @returns スペクトルロールオフ（Hz）\n */\nfunction calculateSpectralRolloff(\n  magnitude: Float32Array,\n  frequencies: Float32Array,\n  threshold: number,\n  minFreq: number,\n  maxFreq: number\n): number {\n  // 指定範囲内の総エネルギーを計算\n  let totalEnergy = 0;\n  for (let i = 0; i < magnitude.length && i < frequencies.length; i++) {\n    const freq = frequencies[i];\n    const mag = magnitude[i];\n    if (freq !== undefined && mag !== undefined && freq >= minFreq && freq <= maxFreq) {\n      totalEnergy += mag * mag;\n    }\n  }\n\n  const targetEnergy = totalEnergy * threshold;\n  let cumulativeEnergy = 0;\n\n  for (let i = 0; i < magnitude.length && i < frequencies.length; i++) {\n    const freq = frequencies[i];\n    const mag = magnitude[i];\n    if (freq !== undefined && mag !== undefined && freq >= minFreq && freq <= maxFreq) {\n      cumulativeEnergy += mag * mag;\n      if (cumulativeEnergy >= targetEnergy) {\n        return freq;\n      }\n    }\n  }\n\n  return maxFreq;\n}\n\n/**\n * スペクトルフラットネスを計算\n * @param magnitude スペクトル振幅\n * @param minIndex 最小インデックス\n * @param maxIndex 最大インデックス\n * @returns スペクトルフラットネス（0-1）\n */\nfunction calculateSpectralFlatness(\n  magnitude: Float32Array,\n  minIndex: number,\n  maxIndex: number\n): number {\n  let geometricMean = 0;\n  let arithmeticMean = 0;\n  let count = 0;\n\n  for (let i = minIndex; i <= maxIndex && i < magnitude.length; i++) {\n    const mag = magnitude[i];\n    if (mag !== undefined) {\n      const safeMag = Math.max(mag, 1e-10); // ゼロ除算を防ぐ\n      geometricMean += Math.log(safeMag);\n      arithmeticMean += safeMag;\n      count++;\n    }\n  }\n\n  if (count === 0) return 0;\n\n  geometricMean = Math.exp(geometricMean / count);\n  arithmeticMean = arithmeticMean / count;\n\n  return arithmeticMean > 1e-10 ? geometricMean / arithmeticMean : 0;\n}\n\n/**\n * ゼロ交差率を計算\n * @param samples 音声サンプル\n * @returns ゼロ交差率\n */\nfunction calculateZeroCrossingRate(samples: Float32Array): number {\n  if (samples.length < 2) return 0;\n\n  let crossings = 0;\n  for (let i = 1; i < samples.length; i++) {\n    const prev = ensureValidSample(samples[i - 1]);\n    const curr = ensureValidSample(samples[i]);\n\n    if ((prev >= 0 && curr < 0) || (prev < 0 && curr >= 0)) {\n      crossings++;\n    }\n  }\n\n  return crossings / (samples.length - 1);\n}\n\n/**\n * スペクトルフラックスを計算\n * @param currentMagnitude 現在のフレームのスペクトル振幅\n * @param previousMagnitude 前のフレームのスペクトル振幅\n * @returns スペクトルフラックス\n */\nfunction calculateSpectralFlux(\n  currentMagnitude: Float32Array,\n  previousMagnitude?: Float32Array\n): number {\n  if (!previousMagnitude) return 0;\n\n  let flux = 0;\n  const length = Math.min(currentMagnitude.length, previousMagnitude.length);\n\n  for (let i = 0; i < length; i++) {\n    const current = currentMagnitude[i];\n    const previous = previousMagnitude[i];\n    if (current !== undefined && previous !== undefined) {\n      const diff = current - previous;\n      flux += diff * diff;\n    }\n  }\n\n  return Math.sqrt(flux / length);\n}\n\n/**\n * 単一フレームのスペクトル特徴量を計算\n * @param audio 音声データ\n * @param options オプション\n * @returns スペクトル特徴量\n */\nexport async function getSpectralFeatures(\n  audio: AudioData,\n  options: SpectralFeaturesOptions = {}\n): Promise<SpectralFeaturesResult> {\n  const {\n    fftSize = 2048,\n    windowFunction = 'hann',\n    channel = 0,\n    minFrequency = 0,\n    maxFrequency = audio.sampleRate / 2,\n    rolloffThreshold = 0.85\n  } = options;\n\n  if (channel >= audio.numberOfChannels) {\n    throw new AudioInspectError('INVALID_INPUT', `無効なチャンネル番号: ${channel}`);\n  }\n\n  // FFT解析\n  const fftResult = await getFFT(audio, {\n    fftSize,\n    windowFunction,\n    channel\n  });\n\n  // 周波数範囲のインデックスを計算\n  const minIndex = Math.max(0, Math.floor((minFrequency * fftSize) / audio.sampleRate));\n  const maxIndex = Math.min(\n    fftResult.frequencies.length - 1,\n    Math.floor((maxFrequency * fftSize) / audio.sampleRate)\n  );\n\n  // スペクトル重心\n  const spectralCentroid = calculateSpectralCentroid(\n    fftResult.magnitude,\n    fftResult.frequencies,\n    minFrequency,\n    maxFrequency\n  );\n\n  // スペクトル帯域幅\n  const spectralBandwidth = calculateSpectralBandwidth(\n    fftResult.magnitude,\n    fftResult.frequencies,\n    spectralCentroid,\n    minFrequency,\n    maxFrequency\n  );\n\n  // スペクトルロールオフ\n  const spectralRolloff = calculateSpectralRolloff(\n    fftResult.magnitude,\n    fftResult.frequencies,\n    rolloffThreshold,\n    minFrequency,\n    maxFrequency\n  );\n\n  // スペクトルフラットネス\n  const spectralFlatness = calculateSpectralFlatness(fftResult.magnitude, minIndex, maxIndex);\n\n  // ゼロ交差率\n  const samples = audio.channelData[channel];\n  if (!samples) {\n    throw new AudioInspectError('INVALID_INPUT', `チャンネル ${channel} のデータが存在しません`);\n  }\n  const zeroCrossingRate = calculateZeroCrossingRate(samples);\n\n  return {\n    spectralCentroid,\n    spectralBandwidth,\n    spectralRolloff,\n    spectralFlatness,\n    zeroCrossingRate,\n    frequencyRange: {\n      min: minFrequency,\n      max: maxFrequency\n    }\n  };\n}\n\n/**\n * 時系列スペクトル特徴量を計算\n * @param audio 音声データ\n * @param options オプション\n * @returns 時系列スペクトル特徴量\n */\nexport async function getTimeVaryingSpectralFeatures(\n  audio: AudioData,\n  options: TimeVaryingSpectralOptions = {}\n): Promise<TimeVaryingSpectralResult> {\n  const {\n    frameSize = 2048,\n    hopSize = frameSize / 2,\n    fftSize = frameSize,\n    windowFunction = 'hann',\n    channel = 0,\n    minFrequency = 0,\n    maxFrequency = audio.sampleRate / 2,\n    rolloffThreshold = 0.85,\n    numFrames\n  } = options;\n\n  if (channel >= audio.numberOfChannels) {\n    throw new AudioInspectError('INVALID_INPUT', `無効なチャンネル番号: ${channel}`);\n  }\n\n  const samples = audio.channelData[channel];\n  if (!samples) {\n    throw new AudioInspectError('INVALID_INPUT', `チャンネル ${channel} のデータが存在しません`);\n  }\n\n  const totalFrames = numFrames || Math.floor((samples.length - frameSize) / hopSize) + 1;\n\n  if (totalFrames <= 0) {\n    throw new AudioInspectError('INVALID_INPUT', 'フレーム数が不正です');\n  }\n\n  // 結果配列の初期化\n  const times = new Float32Array(totalFrames);\n  const spectralCentroid = new Float32Array(totalFrames);\n  const spectralBandwidth = new Float32Array(totalFrames);\n  const spectralRolloff = new Float32Array(totalFrames);\n  const spectralFlatness = new Float32Array(totalFrames);\n  const spectralFlux = new Float32Array(totalFrames);\n  const zeroCrossingRate = new Float32Array(totalFrames);\n\n  let previousMagnitude: Float32Array | undefined;\n\n  // フレームごとの解析\n  for (let frameIndex = 0; frameIndex < totalFrames; frameIndex++) {\n    const startSample = frameIndex * hopSize;\n    const endSample = Math.min(startSample + frameSize, samples.length);\n\n    // 時間位置\n    times[frameIndex] = startSample / audio.sampleRate;\n\n    // フレームデータの抽出\n    const frameData = samples.subarray(startSample, endSample);\n\n    // 短いフレームの場合はゼロパディング\n    const paddedFrame = new Float32Array(frameSize);\n    paddedFrame.set(frameData);\n\n    // フレーム用の音声データを作成\n    const frameAudio: AudioData = {\n      channelData: [paddedFrame],\n      sampleRate: audio.sampleRate,\n      numberOfChannels: 1,\n      length: frameSize,\n      duration: frameSize / audio.sampleRate\n    };\n\n    // スペクトル特徴量を計算\n    const features = await getSpectralFeatures(frameAudio, {\n      fftSize,\n      windowFunction,\n      channel: 0,\n      minFrequency,\n      maxFrequency,\n      rolloffThreshold\n    });\n\n    spectralCentroid[frameIndex] = features.spectralCentroid;\n    spectralBandwidth[frameIndex] = features.spectralBandwidth;\n    spectralRolloff[frameIndex] = features.spectralRolloff;\n    spectralFlatness[frameIndex] = features.spectralFlatness;\n    zeroCrossingRate[frameIndex] = features.zeroCrossingRate;\n\n    // スペクトルフラックスの計算（前フレームとの比較）\n    const fftResult = await getFFT(frameAudio, { fftSize, windowFunction, channel: 0 });\n    spectralFlux[frameIndex] = calculateSpectralFlux(fftResult.magnitude, previousMagnitude);\n    previousMagnitude = new Float32Array(fftResult.magnitude);\n  }\n\n  return {\n    times,\n    spectralCentroid,\n    spectralBandwidth,\n    spectralRolloff,\n    spectralFlatness,\n    spectralFlux,\n    zeroCrossingRate,\n    frameInfo: {\n      frameSize,\n      hopSize,\n      numFrames: totalFrames\n    }\n  };\n}\n","import { AudioData, AudioInspectError } from '../types.js';\nimport { getChannelData, ensureValidSample } from '../core/utils.js';\n\nexport interface EnergyOptions {\n  frameSize?: number;\n  hopSize?: number;\n  channel?: number;\n  normalized?: boolean;\n  windowFunction?: 'rectangular' | 'hann' | 'hamming'; // エネルギー計算用の窓関数\n}\n\nexport interface EnergyResult {\n  times: Float32Array;\n  energies: Float32Array;\n  totalEnergy: number;\n  statistics: {\n    mean: number;\n    std: number;\n    max: number;\n    min: number;\n  };\n}\n\n// 窓関数の適用（エネルギー計算用）\nfunction applyEnergyWindow(\n  data: Float32Array,\n  windowType: string,\n  startIdx: number,\n  length: number\n): Float32Array {\n  const windowed = new Float32Array(length);\n\n  for (let i = 0; i < length && startIdx + i < data.length; i++) {\n    let windowValue = 1.0;\n\n    switch (windowType) {\n      case 'hann':\n        windowValue = 0.5 * (1 - Math.cos((2 * Math.PI * i) / (length - 1)));\n        break;\n      case 'hamming':\n        windowValue = 0.54 - 0.46 * Math.cos((2 * Math.PI * i) / (length - 1));\n        break;\n      case 'rectangular':\n      default:\n        windowValue = 1.0;\n    }\n\n    const sample = ensureValidSample(data[startIdx + i]);\n    windowed[i] = sample * windowValue;\n  }\n\n  return windowed;\n}\n\nexport function getEnergy(audio: AudioData, options: EnergyOptions = {}): EnergyResult {\n  const {\n    frameSize = Math.floor(audio.sampleRate * 0.025), // 25ms\n    hopSize = Math.floor(audio.sampleRate * 0.01), // 10ms\n    channel = 0,\n    normalized = false,\n    windowFunction = 'rectangular'\n  } = options;\n\n  // パラメータの検証\n  if (frameSize <= 0 || !Number.isInteger(frameSize)) {\n    throw new AudioInspectError('INVALID_INPUT', 'frameSizeは正の整数である必要があります');\n  }\n\n  if (hopSize <= 0 || !Number.isInteger(hopSize)) {\n    throw new AudioInspectError('INVALID_INPUT', 'hopSizeは正の整数である必要があります');\n  }\n\n  if (hopSize > frameSize) {\n    console.warn(\n      '[audio-inspect] hopSizeがframeSizeより大きいため、フレーム間にギャップが生じます'\n    );\n  }\n\n  const channelData = getChannelData(audio, channel);\n  const dataLength = channelData.length;\n\n  if (dataLength === 0) {\n    return {\n      times: new Float32Array(0),\n      energies: new Float32Array(0),\n      totalEnergy: 0,\n      statistics: { mean: 0, std: 0, max: 0, min: 0 }\n    };\n  }\n\n  // フレーム数の計算\n  const frameCount = Math.max(0, Math.floor((dataLength - frameSize) / hopSize) + 1);\n\n  if (frameCount === 0) {\n    // データが1フレーム分に満たない場合\n    const energy = calculateFrameEnergy(channelData, 0, dataLength, windowFunction);\n    return {\n      times: new Float32Array([dataLength / 2 / audio.sampleRate]),\n      energies: new Float32Array([energy]),\n      totalEnergy: energy,\n      statistics: { mean: energy, std: 0, max: energy, min: energy }\n    };\n  }\n\n  const times = new Float32Array(frameCount);\n  const energies = new Float32Array(frameCount);\n  let totalEnergy = 0;\n  let maxEnergy = -Infinity;\n  let minEnergy = Infinity;\n\n  // 各フレームのエネルギー計算\n  for (let i = 0; i < frameCount; i++) {\n    const start = i * hopSize;\n    const windowedFrame = applyEnergyWindow(channelData, windowFunction, start, frameSize);\n\n    let frameEnergy = 0;\n    for (let j = 0; j < windowedFrame.length; j++) {\n      const sample = windowedFrame[j];\n      if (sample !== undefined) {\n        frameEnergy += sample * sample;\n      }\n    }\n\n    times[i] = (start + frameSize / 2) / audio.sampleRate;\n    energies[i] = frameEnergy;\n    totalEnergy += frameEnergy;\n\n    maxEnergy = Math.max(maxEnergy, frameEnergy);\n    minEnergy = Math.min(minEnergy, frameEnergy);\n  }\n\n  // 統計情報の計算\n  const meanEnergy = totalEnergy / frameCount;\n  let varianceSum = 0;\n\n  for (let i = 0; i < frameCount; i++) {\n    const energy = energies[i];\n    if (energy !== undefined) {\n      const diff = energy - meanEnergy;\n      varianceSum += diff * diff;\n    }\n  }\n\n  const stdEnergy = Math.sqrt(varianceSum / frameCount);\n\n  // 正規化（オプション）\n  if (normalized && totalEnergy > 1e-10) {\n    for (let i = 0; i < energies.length; i++) {\n      const currentEnergy = energies[i];\n      if (currentEnergy !== undefined) {\n        energies[i] = currentEnergy / totalEnergy;\n      }\n    }\n\n    return {\n      times,\n      energies,\n      totalEnergy: 1.0,\n      statistics: {\n        mean: meanEnergy / totalEnergy,\n        std: stdEnergy / totalEnergy,\n        max: maxEnergy / totalEnergy,\n        min: minEnergy / totalEnergy\n      }\n    };\n  }\n\n  return {\n    times,\n    energies,\n    totalEnergy,\n    statistics: {\n      mean: meanEnergy,\n      std: stdEnergy,\n      max: maxEnergy,\n      min: minEnergy\n    }\n  };\n}\n\n// ヘルパー関数\nfunction calculateFrameEnergy(\n  data: Float32Array,\n  start: number,\n  length: number,\n  windowFunction: string\n): number {\n  const windowed = applyEnergyWindow(data, windowFunction, start, length);\n  let energy = 0;\n  for (const sample of windowed) {\n    energy += sample * sample;\n  }\n  return energy;\n}\n","import { AudioData, AudioInspectError, AmplitudeOptions } from '../types.js';\nimport { getChannelData, ensureValidSample } from '../core/utils.js';\nimport { getRMS, getPeakAmplitude } from './time.js';\n\nexport interface CrestFactorOptions {\n  channel?: number;\n  windowSize?: number; // 窓サイズ（秒）\n  hopSize?: number; // ホップサイズ（秒）\n  method?: 'simple' | 'weighted'; // 重み付きクレストファクター\n}\n\nexport interface CrestFactorResult {\n  crestFactor: number; // 全体のクレストファクター (dB)\n  crestFactorLinear: number; // 線形スケールのクレストファクター\n  peak: number; // ピーク値（線形）\n  rms: number; // RMS値（線形）\n  timeVarying?:\n    | {\n        times: Float32Array;\n        values: Float32Array; // dB\n        valuesLinear: Float32Array; // 線形\n        peaks: Float32Array;\n        rmsValues: Float32Array;\n      }\n    | undefined;\n}\n\nfunction calculateFrameCrestFactor(\n  frameData: Float32Array,\n  method: 'simple' | 'weighted' = 'simple'\n): { peak: number; rms: number; cfDb: number; cfLinear: number } {\n  if (frameData.length === 0) {\n    return { peak: 0, rms: 0, cfDb: -Infinity, cfLinear: 0 };\n  }\n\n  let processedData = frameData;\n\n  // 重み付き処理（オプション）\n  if (method === 'weighted') {\n    // A-weightingの簡易実装\n    // 実際にはIIRフィルタで実装すべき\n    processedData = frameData; // プレースホルダー\n  }\n\n  let peakVal = 0;\n  let sumOfSquares = 0;\n  let validSamples = 0;\n\n  for (let i = 0; i < processedData.length; i++) {\n    const sample = ensureValidSample(processedData[i]);\n    const absSample = Math.abs(sample);\n\n    peakVal = Math.max(peakVal, absSample);\n    sumOfSquares += sample * sample;\n    validSamples++;\n  }\n\n  if (validSamples === 0) {\n    return { peak: 0, rms: 0, cfDb: -Infinity, cfLinear: 0 };\n  }\n\n  const rmsVal = Math.sqrt(sumOfSquares / validSamples);\n\n  if (rmsVal < 1e-10) {\n    return { peak: peakVal, rms: rmsVal, cfDb: Infinity, cfLinear: Infinity };\n  }\n\n  const cfLinear = peakVal / rmsVal;\n  const cfDb = 20 * Math.log10(cfLinear);\n\n  return { peak: peakVal, rms: rmsVal, cfDb, cfLinear };\n}\n\nexport function getCrestFactor(\n  audio: AudioData,\n  options: CrestFactorOptions = {}\n): CrestFactorResult {\n  const { channel = 0, windowSize, hopSize, method = 'simple' } = options;\n\n  // 全体のクレストファクター計算\n  const amplitudeOpts: AmplitudeOptions = { channel, asDB: false };\n  const overallPeak = getPeakAmplitude(audio, amplitudeOpts);\n  const overallRms = getRMS(audio, amplitudeOpts);\n\n  const overallCfLinear = overallRms > 1e-10 ? overallPeak / overallRms : Infinity;\n  const overallCfDb = overallRms > 1e-10 ? 20 * Math.log10(overallCfLinear) : Infinity;\n\n  let timeVaryingResult: CrestFactorResult['timeVarying'] | undefined;\n\n  // 時変クレストファクター計算\n  if (typeof windowSize === 'number' && typeof hopSize === 'number') {\n    if (windowSize <= 0 || hopSize <= 0) {\n      throw new AudioInspectError(\n        'INVALID_INPUT',\n        'windowSizeとhopSizeは正の値である必要があります'\n      );\n    }\n\n    if (hopSize > windowSize) {\n      console.warn(\n        '[audio-inspect] hopSizeがwindowSizeより大きいため、分析窓間にギャップが生じます'\n      );\n    }\n\n    const windowSizeSamples = Math.floor(windowSize * audio.sampleRate);\n    const hopSizeSamples = Math.floor(hopSize * audio.sampleRate);\n\n    if (windowSizeSamples === 0 || hopSizeSamples === 0) {\n      throw new AudioInspectError('INVALID_INPUT', 'サンプルレートに対して窓サイズが小さすぎます');\n    }\n\n    const channelData = getChannelData(audio, channel);\n    const dataLength = channelData.length;\n\n    if (dataLength < windowSizeSamples) {\n      // データが1窓分に満たない場合\n      const result = calculateFrameCrestFactor(channelData, method);\n      timeVaryingResult = {\n        times: new Float32Array([audio.duration / 2]),\n        values: new Float32Array([result.cfDb]),\n        valuesLinear: new Float32Array([result.cfLinear]),\n        peaks: new Float32Array([result.peak]),\n        rmsValues: new Float32Array([result.rms])\n      };\n    } else {\n      const frameCount = Math.floor((dataLength - windowSizeSamples) / hopSizeSamples) + 1;\n      const times = new Float32Array(frameCount);\n      const values = new Float32Array(frameCount);\n      const valuesLinear = new Float32Array(frameCount);\n      const peaks = new Float32Array(frameCount);\n      const rmsValues = new Float32Array(frameCount);\n\n      for (let i = 0; i < frameCount; i++) {\n        const start = i * hopSizeSamples;\n        const end = Math.min(start + windowSizeSamples, dataLength);\n        const frameData = channelData.subarray(start, end);\n\n        const frameResult = calculateFrameCrestFactor(frameData, method);\n\n        times[i] = (start + windowSizeSamples / 2) / audio.sampleRate;\n        values[i] = frameResult.cfDb;\n        valuesLinear[i] = frameResult.cfLinear;\n        peaks[i] = frameResult.peak;\n        rmsValues[i] = frameResult.rms;\n      }\n\n      timeVaryingResult = { times, values, valuesLinear, peaks, rmsValues };\n    }\n  }\n\n  return {\n    crestFactor: overallCfDb,\n    crestFactorLinear: overallCfLinear,\n    peak: overallPeak,\n    rms: overallRms,\n    timeVarying: timeVaryingResult\n  };\n}\n","import { AudioData, AudioInspectError } from '../types.js';\nimport { getFFT } from './frequency.js';\nimport { ensureValidSample } from '../core/utils.js';\n\nexport interface StereoAnalysisOptions {\n  frameSize?: number; // 分析フレームサイズ（サンプル数）\n  hopSize?: number; // ホップサイズ（サンプル数）\n  calculatePhase?: boolean; // 位相解析を行うか\n  calculateITD?: boolean; // 両耳間時間差を計算するか\n  calculateILD?: boolean; // 両耳間レベル差を計算するか\n}\n\nexport interface StereoAnalysisResult {\n  correlation: number; // 相関係数 (-1 to 1)\n  coherence?: Float32Array; // 周波数別コヒーレンス\n  width: number; // ステレオ幅 (0 to 1)\n  widthFrequency?: Float32Array; // 周波数別ステレオ幅\n  balance: number; // L/R バランス (-1 to 1)\n  phaseDifference?: number; // 平均位相差（度）\n  phaseCorrelation?: number; // 位相相関 (-1 to 1)\n  midSideRatio: number; // Mid/Side エネルギー比 (dB)\n  itd?: number; // 両耳間時間差 (ms)\n  ild?: number; // 両耳間レベル差 (dB)\n  goniometer?: {\n    // ゴニオメーター用データ\n    x: Float32Array; // L-R (Side)\n    y: Float32Array; // L+R (Mid)\n  };\n}\n\n// クロス相関による遅延推定\nfunction estimateDelay(\n  left: Float32Array,\n  right: Float32Array,\n  maxDelaySamples: number = 44\n): number {\n  const len = Math.min(left.length, right.length);\n  let maxCorr = -Infinity;\n  let bestDelay = 0;\n\n  for (let delay = -maxDelaySamples; delay <= maxDelaySamples; delay++) {\n    let correlation = 0;\n    let count = 0;\n\n    for (let i = 0; i < len; i++) {\n      const leftIdx = i;\n      const rightIdx = i + delay;\n\n      if (rightIdx >= 0 && rightIdx < len) {\n        const leftSample = ensureValidSample(left[leftIdx]);\n        const rightSample = ensureValidSample(right[rightIdx]);\n        correlation += leftSample * rightSample;\n        count++;\n      }\n    }\n\n    if (count > 0) {\n      correlation /= count;\n      if (correlation > maxCorr) {\n        maxCorr = correlation;\n        bestDelay = delay;\n      }\n    }\n  }\n\n  return bestDelay;\n}\n\n// コヒーレンス計算\nasync function calculateCoherence(\n  left: Float32Array,\n  right: Float32Array,\n  fftSize: number,\n  sampleRate: number\n): Promise<Float32Array> {\n  const leftFFT = await getFFT(\n    {\n      channelData: [left],\n      sampleRate,\n      numberOfChannels: 1,\n      length: left.length,\n      duration: left.length / sampleRate\n    },\n    { fftSize }\n  );\n\n  const rightFFT = await getFFT(\n    {\n      channelData: [right],\n      sampleRate,\n      numberOfChannels: 1,\n      length: right.length,\n      duration: right.length / sampleRate\n    },\n    { fftSize }\n  );\n\n  const coherence = new Float32Array(leftFFT.magnitude.length);\n\n  for (let i = 0; i < coherence.length; i++) {\n    const leftMag = leftFFT.magnitude[i] || 0;\n    const rightMag = rightFFT.magnitude[i] || 0;\n    const leftPhase = leftFFT.phase[i] || 0;\n    const rightPhase = rightFFT.phase[i] || 0;\n\n    // クロススペクトル\n    const crossReal = leftMag * rightMag * Math.cos(leftPhase - rightPhase);\n    const crossImag = leftMag * rightMag * Math.sin(leftPhase - rightPhase);\n    const crossMag = Math.sqrt(crossReal * crossReal + crossImag * crossImag);\n\n    // コヒーレンス = |Pxy|^2 / (Pxx * Pyy)\n    const denominator = leftMag * leftMag * rightMag * rightMag;\n    coherence[i] = denominator > 1e-10 ? (crossMag * crossMag) / denominator : 0;\n  }\n\n  return coherence;\n}\n\n// 周波数別ステレオ幅\nfunction calculateFrequencyWidth(\n  leftMag: Float32Array,\n  rightMag: Float32Array,\n  leftPhase: Float32Array,\n  rightPhase: Float32Array\n): Float32Array {\n  const width = new Float32Array(leftMag.length);\n\n  for (let i = 0; i < width.length; i++) {\n    const lMag = leftMag[i] || 0;\n    const rMag = rightMag[i] || 0;\n    const lPhase = leftPhase[i] || 0;\n    const rPhase = rightPhase[i] || 0;\n    const phaseDiff = lPhase - rPhase;\n\n    // M/S変換\n    const midMag = Math.abs(lMag + rMag) / 2;\n    const sideMag = Math.abs(lMag - rMag) / 2;\n\n    // 位相差も考慮したステレオ幅\n    const phaseWidth = Math.abs(Math.sin(phaseDiff / 2));\n    const magWidth = sideMag / (midMag + sideMag + 1e-10);\n\n    width[i] = Math.max(magWidth, phaseWidth);\n  }\n\n  return width;\n}\n\nexport async function getStereoAnalysis(\n  audio: AudioData,\n  options: StereoAnalysisOptions = {}\n): Promise<StereoAnalysisResult> {\n  if (audio.numberOfChannels < 2) {\n    throw new AudioInspectError('INVALID_INPUT', 'ステレオ解析には2チャンネル以上の音声が必要です');\n  }\n\n  const {\n    frameSize = audio.length,\n    calculatePhase = true,\n    calculateITD = true,\n    calculateILD = true\n  } = options;\n\n  const left = audio.channelData[0];\n  const right = audio.channelData[1];\n\n  if (!left || !right) {\n    throw new AudioInspectError('INVALID_INPUT', 'L/Rチャンネルのデータが存在しません');\n  }\n\n  const len = Math.min(left.length, right.length);\n\n  if (len === 0) {\n    return {\n      correlation: 0,\n      width: 0,\n      balance: 0,\n      midSideRatio: 0\n    };\n  }\n\n  // 基本的な統計量の計算\n  let sumL = 0,\n    sumR = 0,\n    sumLR = 0,\n    sumL2 = 0,\n    sumR2 = 0;\n  let energyL = 0,\n    energyR = 0;\n\n  for (let i = 0; i < len; i++) {\n    const l = ensureValidSample(left[i]);\n    const r = ensureValidSample(right[i]);\n\n    sumL += l;\n    sumR += r;\n    sumLR += l * r;\n    sumL2 += l * l;\n    sumR2 += r * r;\n\n    energyL += l * l;\n    energyR += r * r;\n  }\n\n  // 相関係数\n  const meanL = sumL / len;\n  const meanR = sumR / len;\n  const covariance = sumLR / len - meanL * meanR;\n  const stdL = Math.sqrt(sumL2 / len - meanL * meanL);\n  const stdR = Math.sqrt(sumR2 / len - meanR * meanR);\n  const correlation = stdL > 1e-10 && stdR > 1e-10 ? covariance / (stdL * stdR) : 0;\n\n  // Mid/Side処理\n  const mid = new Float32Array(len);\n  const side = new Float32Array(len);\n  let energyMid = 0,\n    energySide = 0;\n\n  for (let i = 0; i < len; i++) {\n    const l = ensureValidSample(left[i]);\n    const r = ensureValidSample(right[i]);\n\n    mid[i] = (l + r) * 0.5;\n    side[i] = (l - r) * 0.5;\n\n    energyMid += (mid[i] ?? 0) * (mid[i] ?? 0);\n    energySide += (side[i] ?? 0) * (side[i] ?? 0);\n  }\n\n  // メトリクスの計算\n  const width = energyMid + energySide > 1e-10 ? energySide / (energyMid + energySide) : 0;\n\n  const balance = energyL + energyR > 1e-10 ? (energyR - energyL) / (energyL + energyR) : 0;\n\n  const midSideRatio = energySide > 1e-10 ? 10 * Math.log10(energyMid / energySide) : Infinity;\n\n  const result: StereoAnalysisResult = {\n    correlation,\n    width,\n    balance,\n    midSideRatio\n  };\n\n  // 位相解析（オプション）\n  if (calculatePhase && frameSize < audio.length) {\n    const fftSize = Math.pow(2, Math.ceil(Math.log2(frameSize)));\n\n    // コヒーレンス計算\n    result.coherence = await calculateCoherence(\n      left.subarray(0, frameSize),\n      right.subarray(0, frameSize),\n      fftSize,\n      audio.sampleRate\n    );\n\n    // 周波数別解析\n    const leftFFT = await getFFT(\n      {\n        channelData: [left.subarray(0, frameSize)],\n        sampleRate: audio.sampleRate,\n        numberOfChannels: 1,\n        length: frameSize,\n        duration: frameSize / audio.sampleRate\n      },\n      { fftSize }\n    );\n\n    const rightFFT = await getFFT(\n      {\n        channelData: [right.subarray(0, frameSize)],\n        sampleRate: audio.sampleRate,\n        numberOfChannels: 1,\n        length: frameSize,\n        duration: frameSize / audio.sampleRate\n      },\n      { fftSize }\n    );\n\n    // 周波数別ステレオ幅\n    result.widthFrequency = calculateFrequencyWidth(\n      leftFFT.magnitude,\n      rightFFT.magnitude,\n      leftFFT.phase,\n      rightFFT.phase\n    );\n\n    // 平均位相差\n    let phaseDiffSum = 0;\n    let weightSum = 0;\n\n    for (let i = 1; i < leftFFT.phase.length; i++) {\n      // DC成分を除外\n      const leftMag = leftFFT.magnitude[i] || 0;\n      const rightMag = rightFFT.magnitude[i] || 0;\n      const leftPhase = leftFFT.phase[i] || 0;\n      const rightPhase = rightFFT.phase[i] || 0;\n\n      const weight = leftMag * rightMag;\n      let phaseDiff = leftPhase - rightPhase;\n\n      // 位相差を -π から π の範囲に正規化\n      while (phaseDiff > Math.PI) phaseDiff -= 2 * Math.PI;\n      while (phaseDiff < -Math.PI) phaseDiff += 2 * Math.PI;\n\n      phaseDiffSum += phaseDiff * weight;\n      weightSum += weight;\n    }\n\n    result.phaseDifference = weightSum > 1e-10 ? ((phaseDiffSum / weightSum) * 180) / Math.PI : 0;\n  }\n\n  // ITD（両耳間時間差）計算（オプション）\n  if (calculateITD) {\n    const delaySamples = estimateDelay(left, right);\n    result.itd = (delaySamples / audio.sampleRate) * 1000; // ms\n  }\n\n  // ILD（両耳間レベル差）計算（オプション）\n  if (calculateILD) {\n    const rmsL = Math.sqrt(energyL / len);\n    const rmsR = Math.sqrt(energyR / len);\n\n    result.ild = rmsL > 1e-10 && rmsR > 1e-10 ? 20 * Math.log10(rmsR / rmsL) : 0;\n  }\n\n  // ゴニオメーター用データ（Lissajous表示）\n  result.goniometer = {\n    x: side, // L-R\n    y: mid // L+R\n  };\n\n  return result;\n}\n\n// 時系列ステレオ解析（将来の拡張用）\nexport function getTimeVaryingStereoAnalysis(\n  _audio: AudioData,\n  _options: StereoAnalysisOptions & { windowSize?: number } = {}\n): Promise<{\n  times: Float32Array;\n  correlation: Float32Array;\n  width: Float32Array;\n  balance: Float32Array;\n}> {\n  return Promise.reject(\n    new AudioInspectError(\n      'UNSUPPORTED_FORMAT',\n      '時系列ステレオ解析は将来のバージョンで実装予定です'\n    )\n  );\n}\n","import { AudioData } from '../types.js';\nimport { getChannelData, ensureValidSample } from '../core/utils.js';\n\nexport interface VADOptions {\n  channel?: number;\n  frameSizeMs?: number;\n  hopSizeMs?: number;\n  method?: 'energy' | 'zcr' | 'combined' | 'adaptive';\n\n  // 閾値パラメータ\n  energyThreshold?: number; // 固定エネルギー閾値\n  zcrThresholdLow?: number; // ZCR下限（有声音）\n  zcrThresholdHigh?: number; // ZCR上限（無声音）\n\n  // 適応的閾値用パラメータ\n  adaptiveAlpha?: number; // 適応率 (0-1)\n  noiseFactor?: number; // ノイズレベルに対する倍率\n\n  // 時間制約\n  minSilenceDurationMs?: number;\n  minSpeechDurationMs?: number;\n\n  // 追加オプション\n  preEmphasis?: boolean; // プリエンファシスフィルタ\n  smoothing?: boolean; // 判定結果の平滑化\n}\n\nexport interface VADSegment {\n  start: number;\n  end: number;\n  type: 'speech' | 'silence';\n  confidence?: number; // 判定の信頼度 (0-1)\n}\n\nexport interface VADResult {\n  segments: VADSegment[];\n  speechRatio: number;\n  features?: {\n    energies: Float32Array;\n    zcrs: Float32Array;\n    decisions: Float32Array; // 0-1の連続値\n    times: Float32Array;\n  };\n}\n\n/**\n * プリエンファシスフィルタ\n */\nfunction applyPreEmphasis(data: Float32Array, alpha: number = 0.97): Float32Array {\n  const filtered = new Float32Array(data.length);\n  filtered[0] = data[0] || 0;\n\n  for (let i = 1; i < data.length; i++) {\n    const current = ensureValidSample(data[i]);\n    const previous = ensureValidSample(data[i - 1]);\n    filtered[i] = current - alpha * previous;\n  }\n\n  return filtered;\n}\n\n/**\n * フレームエネルギー計算\n */\nfunction calculateFrameEnergies(\n  channelData: Float32Array,\n  frameSizeSamples: number,\n  hopSizeSamples: number,\n  sampleRate: number,\n  useLogEnergy: boolean = false\n): { energies: Float32Array; times: Float32Array } {\n  const dataLength = channelData.length;\n\n  if (dataLength < frameSizeSamples) {\n    return { energies: new Float32Array(0), times: new Float32Array(0) };\n  }\n\n  const frameCount = Math.floor((dataLength - frameSizeSamples) / hopSizeSamples) + 1;\n  const energies = new Float32Array(frameCount);\n  const times = new Float32Array(frameCount);\n\n  for (let i = 0; i < frameCount; i++) {\n    const start = i * hopSizeSamples;\n    const end = Math.min(start + frameSizeSamples, dataLength);\n\n    let energy = 0;\n    let validSamples = 0;\n\n    for (let j = start; j < end; j++) {\n      const sample = ensureValidSample(channelData[j]);\n      energy += sample * sample;\n      validSamples++;\n    }\n\n    energy = validSamples > 0 ? energy / validSamples : 0; // 正規化\n\n    if (useLogEnergy) {\n      energies[i] = energy > 1e-10 ? 10 * Math.log10(energy) : -100;\n    } else {\n      energies[i] = energy;\n    }\n\n    times[i] = (start + frameSizeSamples / 2) / sampleRate;\n  }\n\n  return { energies, times };\n}\n\n/**\n * フレームZCR計算\n */\nfunction calculateFrameZCRs(\n  channelData: Float32Array,\n  frameSizeSamples: number,\n  hopSizeSamples: number,\n  normalize: boolean = true\n): Float32Array {\n  const dataLength = channelData.length;\n\n  if (dataLength < frameSizeSamples) {\n    return new Float32Array(0);\n  }\n\n  const frameCount = Math.floor((dataLength - frameSizeSamples) / hopSizeSamples) + 1;\n  const zcrs = new Float32Array(frameCount);\n\n  for (let i = 0; i < frameCount; i++) {\n    const start = i * hopSizeSamples;\n    const end = Math.min(start + frameSizeSamples, dataLength);\n\n    let crossings = 0;\n    let prevSign = Math.sign(ensureValidSample(channelData[start]));\n\n    for (let j = start + 1; j < end; j++) {\n      const sample = ensureValidSample(channelData[j]);\n      const currentSign = Math.sign(sample);\n      if (prevSign !== currentSign && prevSign !== 0 && currentSign !== 0) {\n        crossings++;\n      }\n      prevSign = currentSign;\n    }\n\n    zcrs[i] = normalize ? crossings / Math.max(1, end - start - 1) : crossings;\n  }\n\n  return zcrs;\n}\n\n/**\n * 適応的閾値の計算\n */\nfunction calculateAdaptiveThreshold(\n  values: Float32Array,\n  alpha: number,\n  noiseFactor: number,\n  initialFrames: number = 10\n): Float32Array {\n  const thresholds = new Float32Array(values.length);\n\n  // 初期ノイズレベルの推定（最初のフレームから）\n  let noiseLevel = 0;\n  const noiseFrames = Math.min(initialFrames, values.length);\n\n  for (let i = 0; i < noiseFrames; i++) {\n    const value = values[i];\n    if (value !== undefined) {\n      noiseLevel += value;\n    }\n  }\n  noiseLevel = noiseFrames > 0 ? noiseLevel / noiseFrames : 0;\n\n  // 適応的閾値の計算\n  for (let i = 0; i < values.length; i++) {\n    const value = values[i];\n    if (value === undefined) {\n      thresholds[i] =\n        i > 0 ? (thresholds[i - 1] ?? noiseLevel * noiseFactor) : noiseLevel * noiseFactor;\n      continue;\n    }\n\n    if (i === 0) {\n      thresholds[i] = noiseLevel * noiseFactor;\n    } else {\n      const prevThreshold = thresholds[i - 1];\n      // 指数移動平均によるノイズレベルの更新\n      if (prevThreshold !== undefined && value < prevThreshold) {\n        noiseLevel = alpha * noiseLevel + (1 - alpha) * value;\n      }\n      thresholds[i] = noiseLevel * noiseFactor;\n    }\n  }\n\n  return thresholds;\n}\n\n/**\n * 判定結果の平滑化（メディアンフィルタ）\n */\nfunction smoothDecisions(decisions: Float32Array, windowSize: number = 5): Float32Array {\n  const smoothed = new Float32Array(decisions.length);\n  const halfWindow = Math.floor(windowSize / 2);\n\n  for (let i = 0; i < decisions.length; i++) {\n    const start = Math.max(0, i - halfWindow);\n    const end = Math.min(decisions.length, i + halfWindow + 1);\n\n    // 窓内の値を収集してソート\n    const windowValues: number[] = [];\n    for (let j = start; j < end; j++) {\n      const value = decisions[j];\n      if (value !== undefined) {\n        windowValues.push(value);\n      }\n    }\n    windowValues.sort((a, b) => a - b);\n\n    // メディアン値を取得\n    if (windowValues.length > 0) {\n      const medianIdx = Math.floor(windowValues.length / 2);\n      const medianValue = windowValues[medianIdx];\n      smoothed[i] = medianValue ?? 0;\n    } else {\n      smoothed[i] = 0;\n    }\n  }\n\n  return smoothed;\n}\n\n/**\n * セグメント化（連続値から）\n */\nfunction createSegmentsFromContinuous(\n  decisions: Float32Array,\n  times: Float32Array,\n  threshold: number = 0.5,\n  minSpeechSec: number = 0.1,\n  minSilenceSec: number = 0.3\n): VADSegment[] {\n  const segments: VADSegment[] = [];\n  let currentSegment: VADSegment | null = null;\n\n  for (let i = 0; i < decisions.length; i++) {\n    const decision = decisions[i];\n    const time = times[i];\n    if (decision === undefined || time === undefined) continue;\n\n    const isSpeech = decision >= threshold;\n\n    if (!currentSegment) {\n      currentSegment = {\n        start: time,\n        end: time,\n        type: isSpeech ? 'speech' : 'silence',\n        confidence: Math.abs(decision - 0.5) * 2\n      };\n    } else if (\n      (isSpeech && currentSegment.type === 'speech') ||\n      (!isSpeech && currentSegment.type === 'silence')\n    ) {\n      // 同じタイプのセグメントを延長\n      currentSegment.end = time;\n      const conf = Math.abs(decision - 0.5) * 2;\n      currentSegment.confidence = Math.max(currentSegment.confidence || 0, conf);\n    } else {\n      // タイプが変わった場合\n      segments.push(currentSegment);\n      currentSegment = {\n        start: time,\n        end: time,\n        type: isSpeech ? 'speech' : 'silence',\n        confidence: Math.abs(decision - 0.5) * 2\n      };\n    }\n  }\n\n  if (currentSegment) {\n    segments.push(currentSegment);\n  }\n\n  // 短いセグメントのフィルタリング\n  return filterShortSegments(segments, minSpeechSec, minSilenceSec);\n}\n\n/**\n * 短いセグメントのフィルタリング\n */\nfunction filterShortSegments(\n  segments: VADSegment[],\n  minSpeechSec: number,\n  minSilenceSec: number\n): VADSegment[] {\n  if (segments.length === 0) return [];\n\n  const filtered: VADSegment[] = [];\n  let i = 0;\n\n  while (i < segments.length) {\n    const current = segments[i];\n    if (!current) {\n      i++;\n      continue;\n    }\n\n    const duration = current.end - current.start;\n\n    if (\n      (current.type === 'speech' && duration >= minSpeechSec) ||\n      (current.type === 'silence' && duration >= minSilenceSec)\n    ) {\n      // セグメントを保持\n      filtered.push(current);\n      i++;\n    } else {\n      // 短いセグメントの処理\n      if (filtered.length > 0 && i + 1 < segments.length) {\n        const prev = filtered[filtered.length - 1];\n        const next = segments[i + 1];\n\n        if (prev && next && prev.type === next.type) {\n          // 前後が同じタイプなら統合\n          prev.end = next.end;\n          i += 2; // 現在と次のセグメントをスキップ\n          continue;\n        }\n      }\n\n      // 統合できない場合はタイプを変更\n      if (filtered.length > 0) {\n        const lastFiltered = filtered[filtered.length - 1];\n        if (lastFiltered) {\n          lastFiltered.end = current.end;\n        }\n      }\n      i++;\n    }\n  }\n\n  return filtered;\n}\n\n/**\n * VAD（音声区間検出）を実行\n */\nexport function getVAD(audio: AudioData, options: VADOptions = {}): VADResult {\n  const {\n    channel = 0,\n    frameSizeMs = 30, // 30msフレーム\n    hopSizeMs = 10, // 10msホップ\n    method = 'combined',\n    energyThreshold = 0.02,\n    zcrThresholdLow = 0.05,\n    zcrThresholdHigh = 0.15,\n    adaptiveAlpha = 0.99,\n    noiseFactor = 3.0,\n    minSilenceDurationMs = 300,\n    minSpeechDurationMs = 100,\n    preEmphasis = true,\n    smoothing = true\n  } = options;\n\n  let channelData = getChannelData(audio, channel);\n\n  // プリエンファシス（オプション）\n  if (preEmphasis) {\n    channelData = applyPreEmphasis(channelData);\n  }\n\n  const sr = audio.sampleRate;\n  const frameSizeSamples = Math.floor((frameSizeMs / 1000) * sr);\n  const hopSizeSamples = Math.floor((hopSizeMs / 1000) * sr);\n\n  if (frameSizeSamples === 0 || hopSizeSamples === 0) {\n    return { segments: [], speechRatio: 0 };\n  }\n\n  // 特徴量の計算\n  const { energies, times } = calculateFrameEnergies(\n    channelData,\n    frameSizeSamples,\n    hopSizeSamples,\n    sr,\n    false\n  );\n\n  const zcrs = calculateFrameZCRs(channelData, frameSizeSamples, hopSizeSamples, true);\n\n  if (energies.length === 0) {\n    return { segments: [], speechRatio: 0 };\n  }\n\n  // VAD判定\n  const decisions = new Float32Array(energies.length);\n\n  switch (method) {\n    case 'energy': {\n      for (let i = 0; i < energies.length; i++) {\n        const energy = energies[i];\n        decisions[i] = energy !== undefined && energy > energyThreshold ? 1 : 0;\n      }\n      break;\n    }\n\n    case 'zcr': {\n      for (let i = 0; i < zcrs.length; i++) {\n        const zcr = zcrs[i];\n        decisions[i] = zcr !== undefined && zcr > zcrThresholdLow && zcr < zcrThresholdHigh ? 1 : 0;\n      }\n      break;\n    }\n\n    case 'combined': {\n      for (let i = 0; i < energies.length; i++) {\n        const energy = energies[i];\n        const zcr = zcrs[i];\n\n        const energyScore = energy !== undefined && energy > energyThreshold ? 1 : 0;\n        const zcrScore =\n          zcr !== undefined && zcr > zcrThresholdLow && zcr < zcrThresholdHigh ? 1 : 0;\n        decisions[i] = (energyScore + zcrScore) / 2;\n      }\n      break;\n    }\n\n    case 'adaptive': {\n      // 適応的閾値の計算\n      const adaptiveThreshold = calculateAdaptiveThreshold(energies, adaptiveAlpha, noiseFactor);\n\n      for (let i = 0; i < energies.length; i++) {\n        const energy = energies[i];\n        const zcr = zcrs[i];\n        const threshold = adaptiveThreshold[i];\n\n        const energyScore =\n          energy !== undefined && threshold !== undefined && energy > threshold ? 1 : 0;\n        const zcrScore =\n          zcr !== undefined && zcr > zcrThresholdLow && zcr < zcrThresholdHigh ? 0.5 : 0;\n        decisions[i] = Math.min(1, energyScore + zcrScore);\n      }\n      break;\n    }\n  }\n\n  // 平滑化（オプション）\n  const finalDecisions = smoothing ? smoothDecisions(decisions, 5) : decisions;\n\n  // セグメント化\n  const minSpeechSec = minSpeechDurationMs / 1000;\n  const minSilenceSec = minSilenceDurationMs / 1000;\n\n  const segments = createSegmentsFromContinuous(\n    finalDecisions,\n    times,\n    0.5,\n    minSpeechSec,\n    minSilenceSec\n  );\n\n  // 音声区間の割合計算\n  let totalSpeechDuration = 0;\n  for (const seg of segments) {\n    if (seg.type === 'speech') {\n      totalSpeechDuration += seg.end - seg.start;\n    }\n  }\n\n  const speechRatio = audio.duration > 0 ? Math.min(1, totalSpeechDuration / audio.duration) : 0;\n\n  return {\n    segments,\n    speechRatio,\n    features: {\n      energies,\n      zcrs,\n      decisions: finalDecisions,\n      times\n    }\n  };\n}\n","import { AudioData, AudioInspectError } from '../types.js';\nimport { ensureValidSample } from '../core/utils.js';\n\n// ITU-R BS.1770-4準拠の定数\nconst ABSOLUTE_GATE_LUFS = -70.0;\nconst RELATIVE_GATE_LU = 10.0;\nconst BLOCK_SIZE_MS = 400;\nconst BLOCK_OVERLAP = 0.75; // 75%オーバーラップ\nconst SHORT_TERM_WINDOW_MS = 3000;\nconst MOMENTARY_WINDOW_MS = 400;\n\n// K-weighting filter coefficients (ITU-R BS.1770-4)\nconst K_WEIGHTING_STAGE1 = {\n  // High-pass filter (Butterworth)\n  b: [1.53512485958697, -2.69169618940638, 1.19839281085285],\n  a: [1.0, -1.69065929318241, 0.73248077421585]\n};\n\nconst K_WEIGHTING_STAGE2 = {\n  // High-frequency shelf\n  b: [1.53660026327012, -2.68908427791073, 1.16158667615261],\n  a: [1.0, -1.68859431835989, 0.72909998803284]\n};\n\n// Biquadフィルタの状態\ninterface BiquadState {\n  x1: number;\n  x2: number;\n  y1: number;\n  y2: number;\n}\n\n// Biquadフィルタの適用\nfunction applyBiquad(\n  input: Float32Array,\n  b: number[],\n  a: number[],\n  state: BiquadState = { x1: 0, x2: 0, y1: 0, y2: 0 }\n): Float32Array {\n  const output = new Float32Array(input.length);\n  let { x1, x2, y1, y2 } = state;\n\n  for (let i = 0; i < input.length; i++) {\n    const x0 = ensureValidSample(input[i]);\n    const b0 = b[0] ?? 0;\n    const b1 = b[1] ?? 0;\n    const b2 = b[2] ?? 0;\n    const a1 = a[1] ?? 0;\n    const a2 = a[2] ?? 0;\n\n    const y0 = b0 * x0 + b1 * x1 + b2 * x2 - a1 * y1 - a2 * y2;\n\n    output[i] = y0;\n\n    x2 = x1;\n    x1 = x0;\n    y2 = y1;\n    y1 = y0;\n  }\n\n  // 状態を更新\n  state.x1 = x1;\n  state.x2 = x2;\n  state.y1 = y1;\n  state.y2 = y2;\n\n  return output;\n}\n\n// K-weightingフィルタの適用\nfunction applyKWeighting(channelData: Float32Array): Float32Array {\n  // ステージ1: ハイパスフィルタ\n  let filtered = applyBiquad(channelData, K_WEIGHTING_STAGE1.b, K_WEIGHTING_STAGE1.a);\n\n  // ステージ2: 高周波シェルフ\n  filtered = applyBiquad(filtered, K_WEIGHTING_STAGE2.b, K_WEIGHTING_STAGE2.a);\n\n  return filtered;\n}\n\n// ブロックのラウドネス計算\nfunction calculateBlockLoudness(channels: Float32Array[]): number {\n  let sumOfSquares = 0;\n  const numChannels = channels.length;\n\n  if (numChannels === 0) return -Infinity;\n\n  for (let ch = 0; ch < numChannels; ch++) {\n    const channelData = channels[ch];\n    if (!channelData || channelData.length === 0) continue;\n\n    let channelSum = 0;\n    let validSamples = 0;\n\n    for (let i = 0; i < channelData.length; i++) {\n      const sample = ensureValidSample(channelData[i]);\n      channelSum += sample * sample;\n      validSamples++;\n    }\n\n    if (validSamples === 0) continue;\n\n    // チャンネル重み付け（ステレオの場合）\n    const channelWeight = 1.0; // L, R, Cは1.0、Ls, Rsは1.41（サラウンドの場合）\n    sumOfSquares += channelWeight * (channelSum / validSamples);\n  }\n\n  // LUFSに変換\n  return -0.691 + 10 * Math.log10(Math.max(1e-15, sumOfSquares));\n}\n\nexport interface LUFSOptions {\n  channelMode?: 'mono' | 'stereo';\n  gated?: boolean;\n  calculateShortTerm?: boolean;\n  calculateMomentary?: boolean;\n  calculateLoudnessRange?: boolean;\n  calculateTruePeak?: boolean;\n}\n\nexport interface LUFSResult {\n  integrated: number; // Integrated loudness (LUFS)\n  shortTerm?: Float32Array; // Short-term loudness values\n  momentary?: Float32Array; // Momentary loudness values\n  loudnessRange?: number; // Loudness range (LU)\n  truePeak?: number[]; // True peak per channel (dBTP)\n  statistics?: {\n    percentile10: number; // 10th percentile\n    percentile95: number; // 95th percentile\n  };\n}\n\nexport function getLUFS(audio: AudioData, options: LUFSOptions = {}): LUFSResult {\n  const {\n    channelMode = audio.numberOfChannels >= 2 ? 'stereo' : 'mono',\n    gated = true,\n    calculateShortTerm = false,\n    calculateMomentary = false,\n    calculateLoudnessRange = false,\n    calculateTruePeak = false\n  } = options;\n\n  if (audio.numberOfChannels === 0) {\n    throw new AudioInspectError('INVALID_INPUT', '処理可能なチャンネルがありません');\n  }\n\n  // チャンネルデータの準備\n  const channelsToProcess: Float32Array[] = [];\n\n  if (channelMode === 'mono') {\n    const channel0 = audio.channelData[0];\n    if (channel0) {\n      channelsToProcess.push(channel0);\n    }\n  } else {\n    // ステレオ処理\n    const channel0 = audio.channelData[0];\n    const channel1 = audio.channelData[1];\n    if (channel0) channelsToProcess.push(channel0);\n    if (channel1) channelsToProcess.push(channel1);\n  }\n\n  if (channelsToProcess.length === 0) {\n    throw new AudioInspectError('INVALID_INPUT', '処理可能なチャンネルがありません');\n  }\n\n  // K-weightingの適用\n  const kWeightedChannels = channelsToProcess.map((ch) => applyKWeighting(ch));\n\n  // ブロック処理のパラメータ\n  const sampleRate = audio.sampleRate;\n  const blockSizeSamples = Math.floor((BLOCK_SIZE_MS / 1000) * sampleRate);\n  const hopSizeSamples = Math.floor(blockSizeSamples * (1 - BLOCK_OVERLAP));\n  const dataLength = kWeightedChannels[0]?.length ?? 0;\n\n  if (dataLength === 0) {\n    return { integrated: -Infinity };\n  }\n\n  // Integrated Loudness の計算\n  const blockLoudnessValues: number[] = [];\n\n  for (let pos = 0; pos + blockSizeSamples <= dataLength; pos += hopSizeSamples) {\n    const blockChannels = kWeightedChannels.map((ch) => ch.subarray(pos, pos + blockSizeSamples));\n\n    const loudness = calculateBlockLoudness(blockChannels);\n    if (isFinite(loudness)) {\n      blockLoudnessValues.push(loudness);\n    }\n  }\n\n  let integratedLoudness = -Infinity;\n\n  if (blockLoudnessValues.length > 0) {\n    let finalLoudnessValues = [...blockLoudnessValues];\n\n    if (gated) {\n      // 絶対ゲート（-70 LUFS）\n      finalLoudnessValues = finalLoudnessValues.filter((l) => l >= ABSOLUTE_GATE_LUFS);\n\n      if (finalLoudnessValues.length > 0) {\n        // 相対ゲートのための平均計算\n        const sumPower = finalLoudnessValues.reduce((sum, lufs) => {\n          return sum + Math.pow(10, (lufs + 0.691) / 10);\n        }, 0);\n\n        const meanLoudness = -0.691 + 10 * Math.log10(sumPower / finalLoudnessValues.length);\n        const relativeThreshold = meanLoudness - RELATIVE_GATE_LU;\n\n        // 相対ゲート適用\n        finalLoudnessValues = finalLoudnessValues.filter((l) => l >= relativeThreshold);\n      }\n    }\n\n    if (finalLoudnessValues.length > 0) {\n      // 最終的なIntegrated Loudness\n      const sumPower = finalLoudnessValues.reduce((sum, lufs) => {\n        return sum + Math.pow(10, (lufs + 0.691) / 10);\n      }, 0);\n\n      integratedLoudness = -0.691 + 10 * Math.log10(sumPower / finalLoudnessValues.length);\n    }\n  }\n\n  const result: LUFSResult = {\n    integrated: integratedLoudness\n  };\n\n  // Short-term Loudness（オプション）\n  if (calculateShortTerm) {\n    const shortTermSamples = Math.floor((SHORT_TERM_WINDOW_MS / 1000) * sampleRate);\n    const shortTermHop = hopSizeSamples;\n    const shortTermValues: number[] = [];\n\n    for (let pos = 0; pos + shortTermSamples <= dataLength; pos += shortTermHop) {\n      const windowChannels = kWeightedChannels.map((ch) =>\n        ch.subarray(pos, pos + shortTermSamples)\n      );\n\n      const loudness = calculateBlockLoudness(windowChannels);\n      if (isFinite(loudness)) {\n        shortTermValues.push(loudness);\n      }\n    }\n\n    result.shortTerm = new Float32Array(shortTermValues);\n  }\n\n  // Momentary Loudness（オプション）\n  if (calculateMomentary) {\n    const momentarySamples = Math.floor((MOMENTARY_WINDOW_MS / 1000) * sampleRate);\n    const momentaryHop = hopSizeSamples;\n    const momentaryValues: number[] = [];\n\n    for (let pos = 0; pos + momentarySamples <= dataLength; pos += momentaryHop) {\n      const windowChannels = kWeightedChannels.map((ch) =>\n        ch.subarray(pos, pos + momentarySamples)\n      );\n\n      const loudness = calculateBlockLoudness(windowChannels);\n      if (isFinite(loudness)) {\n        momentaryValues.push(loudness);\n      }\n    }\n\n    result.momentary = new Float32Array(momentaryValues);\n  }\n\n  // Loudness Range（オプション）\n  if (calculateLoudnessRange && result.shortTerm) {\n    const validValues = Array.from(result.shortTerm)\n      .filter((v) => v > ABSOLUTE_GATE_LUFS && isFinite(v))\n      .sort((a, b) => a - b);\n\n    if (validValues.length > 0) {\n      const percentile10Index = Math.floor(validValues.length * 0.1);\n      const percentile95Index = Math.floor(validValues.length * 0.95);\n\n      const percentile10 = validValues[percentile10Index] ?? -Infinity;\n      const percentile95 = validValues[percentile95Index] ?? -Infinity;\n\n      result.loudnessRange = percentile95 - percentile10;\n      result.statistics = { percentile10, percentile95 };\n    }\n  }\n\n  // True Peak（オプション - 簡易実装）\n  if (calculateTruePeak) {\n    result.truePeak = channelsToProcess.map((ch) => {\n      let peak = 0;\n      for (const sample of ch) {\n        const sampleValue = ensureValidSample(sample);\n        peak = Math.max(peak, Math.abs(sampleValue));\n      }\n      return peak > 0 ? 20 * Math.log10(peak) : -Infinity;\n    });\n  }\n\n  return result;\n}\n","// AudioWorkletGlobalScope interface for type safety\ninterface AudioWorkletGlobalScopeInterface {\n  registerProcessor: (name: string, processorClass: unknown) => void;\n  sampleRate: number;\n  currentTime: number;\n}\n\ndeclare const AudioWorkletGlobalScope: AudioWorkletGlobalScopeInterface | undefined;\nconst isAudioWorkletGlobalScope = typeof AudioWorkletGlobalScope !== 'undefined';\n\nimport {\n  AudioInspectProcessorOptions,\n  AudioData,\n  AnalysisResultMessage,\n  ErrorMessage,\n  UpdateOptionsMessage\n} from '../types.js';\n\n// 特徴量関数のマップを型安全に作成\nimport * as features from '../features/index.js';\nimport {\n  getRMS,\n  getPeaks,\n  getZeroCrossing,\n  getWaveform,\n  getPeak,\n  getPeakAmplitude\n} from '../features/time.js';\nimport { getFFT, getSpectrum } from '../features/frequency.js';\nimport { getSpectralFeatures, getTimeVaryingSpectralFeatures } from '../features/spectral.js';\nimport { getEnergy } from '../features/energy.js';\nimport { getCrestFactor } from '../features/dynamics.js';\nimport { getStereoAnalysis, getTimeVaryingStereoAnalysis } from '../features/stereo.js';\nimport { getVAD } from '../features/vad.js';\nimport { getLUFS } from '../features/loudness.js';\n\n// AudioWorkletProcessorの型定義（ブラウザ環境で利用可能）\ndeclare class AudioWorkletProcessor {\n  readonly port: MessagePort;\n  process(\n    inputs: Float32Array[][],\n    _outputs: Float32Array[][],\n    _parameters: Record<string, Float32Array>\n  ): boolean;\n}\n\ndeclare const registerProcessor: (name: string, processorClass: unknown) => void;\ndeclare const sampleRate: number;\ndeclare const currentTime: number;\n\n// 型安全な特徴量関数マップ\ntype FeatureFunction = (audio: AudioData, options?: unknown) => unknown | Promise<unknown>;\n\n// featureMap定義の前に、必要な関数をインライン化または条件付きインポート\nlet featureMap: Record<string, FeatureFunction> = {};\n\n// 通常環境では導入した関数を使用\ntry {\n  featureMap = {\n    // 時間領域の特徴量\n    getRMS: getRMS as FeatureFunction,\n    getPeaks: getPeaks as FeatureFunction,\n    getZeroCrossing: getZeroCrossing as FeatureFunction,\n    getWaveform: getWaveform as FeatureFunction,\n    getPeak: getPeak as FeatureFunction,\n    getPeakAmplitude: getPeakAmplitude as FeatureFunction,\n\n    // 周波数領域の特徴量\n    getFFT: getFFT as FeatureFunction,\n    getSpectrum: getSpectrum as FeatureFunction,\n\n    // スペクトル特徴量\n    getSpectralFeatures: getSpectralFeatures as FeatureFunction,\n    getTimeVaryingSpectralFeatures: getTimeVaryingSpectralFeatures as FeatureFunction,\n\n    // エネルギー解析\n    getEnergy: getEnergy as FeatureFunction,\n\n    // ダイナミクス解析\n    getCrestFactor: getCrestFactor as FeatureFunction,\n\n    // ステレオ解析\n    getStereoAnalysis: getStereoAnalysis as FeatureFunction,\n    getTimeVaryingStereoAnalysis: getTimeVaryingStereoAnalysis as FeatureFunction,\n\n    // VAD（音声区間検出）\n    getVAD: getVAD as FeatureFunction,\n\n    // LUFS（ラウドネス測定）\n    getLUFS: getLUFS as FeatureFunction,\n\n    // フォールバック（他の関数も含む）\n    ...(features as Record<string, FeatureFunction>)\n  };\n} catch (error) {\n  console.warn('[AudioInspectProcessor] 一部の機能のインポートに失敗、基本機能のみ使用:', error);\n  // フォールバック：基本的な機能のみを提供\n  featureMap = {\n    getRMS: (audio: AudioData) => {\n      // getRMSの簡易実装\n      const channelData = audio.channelData[0];\n      if (!channelData) return 0;\n\n      let sumOfSquares = 0;\n      for (let i = 0; i < channelData.length; i++) {\n        const sample = channelData[i] || 0;\n        sumOfSquares += sample * sample;\n      }\n      return Math.sqrt(sumOfSquares / channelData.length);\n    },\n    // 他の基本的な機能も同様に実装\n    getPeak: (audio: AudioData) => {\n      const channelData = audio.channelData[0];\n      if (!channelData) return 0;\n\n      let max = 0;\n      for (let i = 0; i < channelData.length; i++) {\n        const abs = Math.abs(channelData[i] || 0);\n        if (abs > max) max = abs;\n      }\n      return max;\n    }\n  };\n}\n\n/**\n * AudioWorkletプロセッサー：AudioWorkletスレッドで実行される\n * リアルタイム性を保つため、非同期処理をノンブロッキングで実行\n */\nclass AudioInspectProcessor extends AudioWorkletProcessor {\n  private options: AudioInspectProcessorOptions = {\n    featureName: 'getRMS',\n    bufferSize: 1024,\n    hopSize: 512,\n    inputChannelCount: 1\n  };\n  private buffers: Float32Array[] = [];\n  private bufferWritePosition = 0;\n  private lastAnalysisPosition = 0;\n  private isAnalyzing = false; // 解析実行中フラグ（排他制御）\n\n  constructor(options?: AudioWorkletNodeOptions) {\n    super();\n\n    try {\n      console.log('[AudioInspectProcessor] 初期化開始', {\n        isAudioWorklet: isAudioWorkletGlobalScope,\n        options\n      });\n\n      this.options = {\n        featureName: 'getRMS',\n        bufferSize: 1024,\n        hopSize: 512,\n        inputChannelCount: 1,\n        ...(options?.processorOptions as Partial<AudioInspectProcessorOptions> || {})\n      };\n\n      console.log('[AudioInspectProcessor] 設定初期化完了', this.options);\n\n      // buffers配列を初期化時に適切な型で作成\n      this.buffers = new Array(this.options.inputChannelCount).fill(null).map(() => \n        new Float32Array(this.options.bufferSize * 2 + 256)\n      );\n\n      console.log('[AudioInspectProcessor] バッファ初期化完了', {\n        inputChannelCount: this.options.inputChannelCount,\n        bufferSize: this.options.bufferSize,\n        totalBufferSize: this.options.bufferSize * 2 + 256\n      });\n\n      // メッセージハンドラーを設定\n      this.port.onmessage = this.handleMessage.bind(this);\n\n      console.log('[AudioInspectProcessor] 初期化完了');\n    } catch (error) {\n      console.error('[AudioInspectProcessor] 初期化エラー:', error);\n      // エラーをメインスレッドに通知\n      this.port.postMessage({\n        type: 'error',\n        message: 'プロセッサー初期化失敗',\n        detail: error\n      });\n    }\n  }\n\n  override process(\n    inputs: Float32Array[][],\n    _outputs: Float32Array[][],\n    _parameters: Record<string, Float32Array>\n  ): boolean {\n    console.log('AudioInspectProcessor: process関数呼び出し', {\n      inputsLength: inputs.length,\n      firstInputLength: inputs[0]?.length || 0,\n      firstChannelLength: inputs[0]?.[0]?.length || 0\n    });\n\n    const input = inputs[0];\n    if (!input || input.length === 0) {\n      console.log('AudioInspectProcessor: 入力データなし、スキップ');\n      return true;\n    }\n\n    try {\n      // Add input data to buffer\n      this.addToBuffer(input);\n\n      // Check and perform analysis (non-blocking)\n      this.checkAndPerformAnalysis();\n    } catch (error) {\n      console.error('AudioInspectProcessor: process関数でエラー:', error);\n      this.sendError('Error occurred during processing', error);\n    }\n\n    return true;\n  }\n\n  private addToBuffer(input: Float32Array[]): void {\n    const frameSize = input[0]?.length || 0;\n    if (frameSize === 0) return;\n\n    // 各チャンネルのデータをバッファに追加\n    for (\n      let channel = 0;\n      channel < Math.min(input.length, this.options.inputChannelCount);\n      channel++\n    ) {\n      const channelData = input[channel];\n      const buffer = this.buffers[channel];\n\n      if (channelData && buffer) {\n        for (let i = 0; i < frameSize; i++) {\n          buffer[this.bufferWritePosition + i] = channelData[i] || 0;\n        }\n      }\n    }\n\n    this.bufferWritePosition += frameSize;\n\n    // バッファがオーバーフローしそうな場合は、データを前方にシフト\n    // フレームサイズ + マージンを考慮した条件\n    const firstBuffer = this.buffers[0];\n    if (firstBuffer && this.bufferWritePosition + frameSize > firstBuffer.length) {\n      this.shiftBuffers();\n    }\n  }\n\n  /**\n   * Shift buffer data forward to secure space\n   * Works as a sliding window\n   */\n  private shiftBuffers(): void {\n    const keepSize = this.options.bufferSize;\n    const shiftAmount = this.bufferWritePosition - keepSize;\n\n    if (shiftAmount <= 0) return;\n\n    // バッファオーバーフロー警告を送信\n    this.port.postMessage({\n      type: 'bufferOverflow',\n      details: {\n        bufferWritePosition: this.bufferWritePosition,\n        bufferSize: this.options.bufferSize,\n        timestamp: currentTime\n      }\n    });\n\n    // 各チャンネルのバッファをシフト\n    for (const buffer of this.buffers) {\n      buffer.copyWithin(0, shiftAmount, this.bufferWritePosition);\n    }\n\n    // 位置を更新\n    this.bufferWritePosition = keepSize;\n    this.lastAnalysisPosition = Math.max(0, this.lastAnalysisPosition - shiftAmount);\n  }\n\n  /**\n   * 解析実行の判定（ホップサイズベース）\n   */\n  private checkAndPerformAnalysis(): void {\n    // 既に解析実行中の場合はスキップ（排他制御）\n    if (this.isAnalyzing) {\n      return;\n    }\n\n    // ホップサイズ分の新しいデータが蓄積され、かつバッファサイズ分のデータが利用可能な場合\n    const newDataSize = this.bufferWritePosition - this.lastAnalysisPosition;\n\n    // Debug log for buffer status\n    console.log('AudioInspectProcessor: バッファ状況チェック', {\n      newDataSize,\n      hopSize: this.options.hopSize,\n      bufferWritePosition: this.bufferWritePosition,\n      bufferSize: this.options.bufferSize,\n      lastAnalysisPosition: this.lastAnalysisPosition,\n      shouldAnalyze:\n        newDataSize >= this.options.hopSize && this.bufferWritePosition >= this.options.bufferSize\n    });\n\n    if (\n      newDataSize >= this.options.hopSize &&\n      this.bufferWritePosition >= this.options.bufferSize\n    ) {\n      console.log('AudioInspectProcessor: 解析実行条件を満たしました、解析開始');\n\n      // 次の解析開始位置を計算（オーバーラップを考慮）\n      const nextAnalysisPosition = this.lastAnalysisPosition + this.options.hopSize;\n      this.lastAnalysisPosition = nextAnalysisPosition;\n\n      // Execute analysis asynchronously (does not block audio thread)\n      this.performAnalysisAsync();\n    }\n  }\n\n  /**\n   * Execute analysis asynchronously (does not block audio thread)\n   */\n  private performAnalysisAsync(): void {\n    // Set exclusive control flag\n    this.isAnalyzing = true;\n\n    try {\n      // Extract analysis data\n      const analysisData = this.extractAnalysisData();\n\n      // 一時的なAudioDataオブジェクトを作成\n      const audioData: AudioData = {\n        sampleRate: sampleRate,\n        channelData: analysisData,\n        duration: this.options.bufferSize / sampleRate,\n        numberOfChannels: analysisData.length,\n        length: this.options.bufferSize\n      };\n\n      // Execute corresponding analysis function asynchronously\n      this.executeFeatureFunctionAsync(audioData);\n    } catch (error) {\n      this.isAnalyzing = false;\n      this.sendError('Error occurred during analysis processing', error);\n    }\n  }\n\n  /**\n   * 解析データを現在のバッファから抽出\n   */\n  private extractAnalysisData(): Float32Array[] {\n    const startPos = this.bufferWritePosition - this.options.bufferSize;\n    const channelData: Float32Array[] = [];\n\n    for (let channel = 0; channel < this.options.inputChannelCount; channel++) {\n      const data = new Float32Array(this.options.bufferSize);\n      const sourceBuffer = this.buffers[channel];\n\n      if (sourceBuffer) {\n        for (let i = 0; i < this.options.bufferSize; i++) {\n          data[i] = sourceBuffer[startPos + i] || 0;\n        }\n      }\n\n      channelData.push(data);\n    }\n\n    return channelData;\n  }\n\n  /**\n   * Execute analysis function asynchronously and handle results or errors\n   */\n  private executeFeatureFunctionAsync(audioData: AudioData): void {\n    console.log('AudioInspectProcessor: 解析関数実行開始', {\n      featureName: this.options.featureName,\n      audioDataLength: audioData.length,\n      numberOfChannels: audioData.numberOfChannels\n    });\n\n    const featureFunction = featureMap[this.options.featureName];\n\n    if (!featureFunction || typeof featureFunction !== 'function') {\n      console.error('AudioInspectProcessor: 解析関数が見つかりません:', this.options.featureName);\n      this.isAnalyzing = false;\n      this.sendError(`Unknown analysis function: ${this.options.featureName}`);\n      return;\n    }\n\n    try {\n      // Execute function (supports both sync and async)\n      const resultOrPromise = featureFunction(audioData, this.options.featureOptions);\n\n      // プロミスかどうかの型安全なチェック\n      const isPromiseLike = (value: unknown): value is Promise<unknown> => {\n        return (\n          value !== null &&\n          typeof value === 'object' &&\n          'then' in value &&\n          typeof value.then === 'function'\n        );\n      };\n\n      if (isPromiseLike(resultOrPromise)) {\n        // Async result\n        console.log('AudioInspectProcessor: 非同期解析関数実行中...');\n        resultOrPromise\n          .then((result) => {\n            console.log('AudioInspectProcessor: 非同期解析完了、結果:', result);\n            this.sendResult(result);\n            this.isAnalyzing = false;\n          })\n          .catch((error) => {\n            console.error('AudioInspectProcessor: 非同期解析エラー:', error);\n            this.sendError('Error occurred during analysis execution', error);\n            this.isAnalyzing = false;\n          });\n      } else {\n        // Sync result\n        console.log('AudioInspectProcessor: 同期解析完了、結果:', resultOrPromise);\n        this.sendResult(resultOrPromise);\n        this.isAnalyzing = false;\n      }\n    } catch (error) {\n      console.error('AudioInspectProcessor: 解析関数実行エラー:', error);\n      this.isAnalyzing = false;\n      this.sendError('Error occurred during analysis execution', error);\n    }\n  }\n\n  /**\n   * Send analysis result to main thread\n   */\n  private sendResult(data: unknown): void {\n    // Debug log for message sending\n    console.log('AudioInspectProcessor: 解析結果を送信:', {\n      type: 'analysisResult',\n      data,\n      timestamp: Date.now()\n    });\n\n    const message: AnalysisResultMessage = {\n      type: 'analysisResult',\n      data,\n      timestamp: Date.now()\n    };\n\n    this.port.postMessage(message);\n  }\n\n  /**\n   * Send error to main thread\n   */\n  private sendError(message: string, detail?: unknown): void {\n    // Debug log for error sending\n    console.log('AudioInspectProcessor: エラーを送信:', {\n      type: 'error',\n      message,\n      detail\n    });\n\n    const errorMessage: ErrorMessage = {\n      type: 'error',\n      message,\n      detail\n    };\n\n    this.port.postMessage(errorMessage);\n  }\n\n  private handleMessage(event: MessageEvent): void {\n    const message = event.data as { type: string };\n\n    switch (message.type) {\n      case 'updateOptions':\n        this.handleUpdateOptions(message as UpdateOptionsMessage);\n        break;\n      case 'reset':\n        this.handleReset();\n        break;\n      default:\n        // exhaustive switchチェック（型安全な未知メッセージ処理）\n        console.warn('Unknown message type:', message.type);\n        void message; // 未使用変数警告を回避\n    }\n  }\n\n  /**\n   * オプション更新（部分更新をサポート）\n   */\n  private handleUpdateOptions(message: UpdateOptionsMessage): void {\n    const newOptions = { ...this.options, ...message.payload };\n\n    // バッファサイズが変更された場合はバッファを再初期化\n    if (\n      newOptions.bufferSize !== this.options.bufferSize ||\n      newOptions.inputChannelCount !== this.options.inputChannelCount\n    ) {\n      this.options = newOptions;\n      this.reinitializeBuffers();\n    } else {\n      this.options = newOptions;\n    }\n  }\n\n  private handleReset(): void {\n    this.bufferWritePosition = 0;\n    this.lastAnalysisPosition = 0;\n    this.isAnalyzing = false; // 解析中フラグもリセット\n\n    // バッファをクリア\n    for (const buffer of this.buffers) {\n      buffer.fill(0);\n    }\n  }\n\n  private reinitializeBuffers(): void {\n    this.buffers = new Array(this.options.inputChannelCount).fill(null).map(() => \n      new Float32Array(this.options.bufferSize * 2 + 256)\n    );\n\n    this.bufferWritePosition = 0;\n    this.lastAnalysisPosition = 0;\n    this.isAnalyzing = false;\n  }\n}\n\n// AudioWorkletプロセッサーを登録\nregisterProcessor('audio-inspect-processor', AudioInspectProcessor);\n"],"mappings":"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","names":["ret","webfftWrapper_default","init_webfftWrapper","import_meta","ret","webfftWrapper_default","init_webfftWrapper","n","i","fft_default","init_fft","webfftWrapper_default","init_webfftWrapper","init_fft","fft_default","import_meta","ret","FFT_default","init_FFT","webfftWrapper_default","init_webfftWrapper","init_FFT","FFT_default","FFT","webfftWrapper_default","init_webfftWrapper","webfftWrapper_default","init_webfftWrapper","import_meta","KissFFTModule","KissFFT_default","init_KissFFT","ret","kissFFTModule","kiss_fft_alloc","kiss_fft","kiss_fft_free","webfftWrapper_default","init_webfftWrapper","init_KissFFT","KissFFT_default","fft_default","init_fft","_singleTransform2","_singleTransform4","init_webfftWrapper","init_fft","webfftWrapper_default","fft_default","channelData","SILENCE_DB","sampleRate","getChannelData","channelData","sampleRate","sampleRate","sampleRate","sampleRate"]}