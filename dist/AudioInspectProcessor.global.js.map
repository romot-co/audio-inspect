{"version":3,"sources":["../node_modules/webfft/lib/kissfft/KissFFT.mjs","../node_modules/webfft/lib/kissfft/webfftWrapper.js","../node_modules/webfft/lib/indutny/fft.js","../node_modules/webfft/lib/indutny/webfftWrapper.js","../node_modules/webfft/lib/cross/Cross.mjs","../node_modules/webfft/lib/cross/FFT.js","../node_modules/webfft/lib/cross/webfftWrapper.js","../node_modules/webfft/lib/nayuki/fft.js","../node_modules/webfft/lib/nayuki/webfftWrapper.js","../node_modules/webfft/lib/nayukic/NayukiCFFT.mjs","../node_modules/webfft/lib/nayukic/FFT.js","../node_modules/webfft/lib/nayukic/webfftWrapper.js","../node_modules/webfft/lib/nockert/complex.js","../node_modules/webfft/lib/nockert/webfftWrapper.js","../node_modules/webfft/lib/mljs/fftlib.js","../node_modules/webfft/lib/mljs/webfftWrapper.js","../node_modules/webfft/lib/utils/checkCapabilities.js","../node_modules/webfft/lib/kissfftmodified/KissFFT.mjs","../node_modules/webfft/lib/kissfftmodified/webfftWrapper.js","../node_modules/webfft/lib/indutnymodified/fft.js","../node_modules/webfft/lib/main.js","../src/features/index.ts","../src/types.ts","../src/core/utils.ts","../src/features/time.ts","../src/core/fft-provider.ts","../src/features/frequency.ts","../src/features/spectral.ts","../src/features/energy.ts","../src/features/dynamics.ts","../src/features/stereo.ts","../src/features/vad.ts","../src/features/loudness.ts","../src/core/AudioInspectProcessor.ts"],"names":["import_meta","KissFFTModule","KissFFT_default","init_KissFFT","__esmMin","_scriptDir","moduleArg","Module","readyPromiseResolve","readyPromiseReject","resolve","reject","moduleOverrides","arguments_","scriptDirectory","locateFile","path","read_","title","err","wasmBinary","abort","wasmMemory","wasmExports","ABORT","HEAP8","HEAPU8","updateMemoryViews","b","HEAP16","HEAPU16","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","preRun","addOnPreRun","callRuntimeCallbacks","initRuntime","postRun","addOnPostRun","cb","addOnInit","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","callback","what","e","dataURIPrefix","isDataURI","filename","wasmBinaryFile","getBinarySync","file","binary","tryParseAsDataURI","instantiateSync","info","module","instance","createWasm","wasmImports","receiveInstance","exports","result","callbacks","_emscripten_memcpy_big","dest","src","num","abortOnCannotGrowMemory","requestedSize","_emscripten_resize_heap","getCFunc","ident","func","writeArrayToMemory","array","buffer","lengthBytesUTF8","str","len","i","c","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","endIdx","u","u1","stringToUTF8","outPtr","stringToUTF8OnStack","size","ret","stackAlloc","UTF8Decoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endPtr","u0","u2","ch","UTF8ToString","ptr","ccall","returnType","argTypes","args","opts","toC","arr","convertReturnValue","cArgs","stack","converter","stackSave","onDone","stackRestore","cwrap","numericArgs","type","numericRet","asm","___errno_location","intArrayFromBase64","s","decoded","bytes","calledRun","runCaller","run","doRun","kissFFTModule","kiss_fft_alloc","kiss_fft","kiss_fft_free","KissFftWrapperWasm","webfftWrapper_default","init_webfftWrapper","inputArray","outptr","cout","outputArray","FFT_indutny","table","angle","power","t","j","shift","revShift","fft_default","init_fft","complex","storage","res","input","spectrum","half","out","data","width","step","outOff","bitrev","off","inv","quarterLen","limit","k","A","B","C","D","Ar","Ai","Br","Bi","Cr","Ci","Dr","Di","MAr","MAi","tableBr","tableBi","MBr","MBi","tableCr","tableCi","MCr","MCi","tableDr","tableDi","MDr","MDi","T0r","T0i","T1r","T1i","T2r","T2i","T3r","T3i","FAr","FAi","FCr","FCi","FBr","FBi","FDr","FDi","evenR","evenI","oddR","oddI","leftR","leftI","rightR","rightI","step2","step3","halfLen","hquarterLen","ST0r","ST0i","ST1r","ST1i","ST2r","ST2i","ST3r","ST3i","SFAr","SFAi","SFBr","SFBi","SA","SB","IndutnyFftWrapperJavascript","inputArr","outputArr","CrossModule","Cross_default","init_Cross","ENVIRONMENT_IS_WORKER","thisProgram","quit_","HEAP32","HEAPU32","___wasm_call_ctors","_fftCross","_malloc","_free","FFTCross","crossModule","real","imag","inverse","n","fftCross","ro","io","FFT_default","init_FFT","CrossFftWrapperWasm","FFTNayuki","reverseBits","temp","halfsize","tablestep","tpre","tpim","x","bits","y","NayukiFftWrapperJavascript","NayukiCModule","NayukiCFFT_default","init_NayukiCFFT","HEAPF64","EXITSTATUS","_precalc","FFTNayukiC","nayukiCModule","nc_precalc_f","nc_transform_radix2_precalc_f","nc_dispose_f","nc_precalc","nc_transform_radix2_precalc","NayukiWasmFftWrapperWasm","FFT","complex_default","init_complex","namespace","butterfly2","output","outputOffset","outputStride","fStride","state","m","s0_r","s0_i","s1_r","s1_i","t1_r","t1_i","v1_r","v1_i","r0_r","r0_i","r1_r","r1_i","butterfly3","m1","m2","fStride1","fStride2","s2_r","s2_i","t2_r","t2_i","v2_r","v2_i","i0_r","i0_i","i1_r","i1_i","i2_r","i2_i","r2_r","r2_i","butterfly4","m3","fStride3","s3_r","s3_i","t3_r","t3_i","v3_r","v3_i","i3_r","i3_i","r3_r","r3_i","butterfly","p","scratch","q1","x0_r","x0_i","tOffset","q","work","f","fOffset","inputStride","factors","theta","phase","v","inputOffset","NockertFftWrapperJavascript","init","_n","_initArray","_makeBitReversalTable","_makeCosSinTable","fft1d","re","im","fastFourierTransform","ifft1d","bt1d","fft2d","tre","tim","x1","x2","y1","y2","ifft2d","d","h","ik","tmp","wr","wi","xr","xi","n4","l","_bitrev","_cstb","n2","n8","n2p4","dc","ds","fftlib_default","init_fftlib","MljsWebFftWrapperJavascript","input_real","input_imag","relaxedSimd","simd","checkBrowserCapabilities","browserName","browserVersion","osName","osVersion","uad","ua","values","brandInfo","brand","uaArr","uaBrowser","isFirefox","isSafari","isChrome","isEdge","isOpera","browsers","browser","versionMatch","osMatch","osDetails","windowsVersionMap","osInfo","os","error","checkCapabilities_default","init_checkCapabilities","_kiss_fft","KissFftModifiedWrapperWasm","IndutnyModifiedFftWrapperJavascript","main_exports","__export","main_default","validSizes","webfft","init_main","subLibrary","useProfile","profile","fftLibrary","inputArrComplex","innerLen","outterLen","intermediateArray","finalArray","newArray","temparray","duration","refresh","quick","totalStart","subLibraries","ffsPerSecond","secondsPerRun","ci","start","numFfts","totalElapsed","argmax","profileObj","features_exports","getCrestFactor","getEnergy","getFFT","getLUFS","getPeakAmplitude","getPeaks","getRMS","getSpectralFeatures","getSpectrum","getStereoAnalysis","getTimeVaryingSpectralFeatures","getTimeVaryingStereoAnalysis","getVAD","getWaveform","getZeroCrossing","AudioInspectError","code","message","cause","getChannelData","audio","channel","averageData","sum","channelData","sample","safeArrayAccess","index","defaultValue","isValidSample","value","ensureValidSample","amplitudeToDecibels","amplitude","reference","ratio","detectAllInitialPeaks","threshold","includeProminence","peaks","length","current","prev","next","peak","calculateProminence","peakIndex","peakValue","leftMin","rightMin","options","count","minDistance","allInitialPeaks","a","selectedPeaks","occupiedRegions","candidate","candidateStart","candidateEnd","end","maxAmplitude","averageAmplitude","SILENCE_DB","optionsOrChannel","sumOfSquares","validSampleCount","rms","resolvedOptions","crossings","framesPerSecond","method","desiredFrameCount","maxPossibleFrameCount","frameCount","samplesPerFrame","waveform","totalAmplitude","startSample","endSample","lastAmplitude","frameData","calculatePeakAmplitude","calculateAverageAmplitude","calculateRMSAmplitude","time","WebFFTProvider","sampleRate","enableProfiling","WebFFTConstructor","complexInput","complexOutput","magnitude","frequencies","NativeFFTProvider","reversed","halfSize","reversedIndex","stage","stageSize","twiddleStep","twiddleIndex","evenIndex","oddIndex","evenReal","evenImag","oddReal","oddImag","tempReal","tempImag","realPart","imagPart","FFTProviderFactory","config","provider","exhaustiveCheck","applyWindow","windowType","windowed","N","windowValue","fftSize","windowFunction","inputData","windowedData","fftProvider","minFrequency","maxFrequency","decibels","timeFrames","overlap","fftOptions","fftResult","filteredResult","filterFrequencyRange","magnitudeToDecibels","spectrogram","computeSpectrogram","minFreq","maxFreq","startIndex","endIndex","actualEndIndex","mag","hopSize","numPossibleFrames","actualFrames","times","intensities","filteredFrequencies","frequencyStartIndex","frequencyEndIndex","frame","tempEndIndex","filteredMagnitude","frameIntensity","calculateSpectralCentroid","weightedSum","magnitudeSum","freq","calculateSpectralBandwidth","centroid","weightedVarianceSum","deviation","calculateSpectralRolloff","totalEnergy","targetEnergy","cumulativeEnergy","calculateSpectralFlatness","minIndex","maxIndex","geometricMean","arithmeticMean","safeMag","calculateZeroCrossingRate","samples","curr","calculateSpectralFlux","currentMagnitude","previousMagnitude","flux","previous","diff","rolloffThreshold","spectralCentroid","spectralBandwidth","spectralRolloff","spectralFlatness","zeroCrossingRate","frameSize","numFrames","totalFrames","spectralFlux","frameIndex","paddedFrame","frameAudio","features","applyEnergyWindow","normalized","dataLength","energy","calculateFrameEnergy","energies","maxEnergy","minEnergy","windowedFrame","frameEnergy","meanEnergy","varianceSum","stdEnergy","currentEnergy","calculateFrameCrestFactor","processedData","peakVal","validSamples","absSample","rmsVal","cfLinear","cfDb","windowSize","amplitudeOpts","overallPeak","overallRms","overallCfLinear","overallCfDb","timeVaryingResult","windowSizeSamples","hopSizeSamples","valuesLinear","rmsValues","frameResult","estimateDelay","left","right","maxDelaySamples","maxCorr","bestDelay","delay","correlation","leftIdx","rightIdx","leftSample","rightSample","calculateCoherence","leftFFT","rightFFT","coherence","leftMag","rightMag","leftPhase","rightPhase","crossReal","crossImag","crossMag","denominator","calculateFrequencyWidth","lMag","rMag","lPhase","rPhase","phaseDiff","midMag","sideMag","phaseWidth","magWidth","calculatePhase","calculateITD","calculateILD","sumL","sumR","sumLR","sumL2","sumR2","energyL","energyR","r","meanL","meanR","covariance","stdL","stdR","mid","side","energyMid","energySide","balance","midSideRatio","phaseDiffSum","weightSum","weight","delaySamples","rmsL","rmsR","_audio","_options","applyPreEmphasis","alpha","filtered","calculateFrameEnergies","frameSizeSamples","useLogEnergy","calculateFrameZCRs","normalize","zcrs","prevSign","currentSign","calculateAdaptiveThreshold","noiseFactor","initialFrames","thresholds","noiseLevel","noiseFrames","prevThreshold","smoothDecisions","decisions","smoothed","halfWindow","windowValues","medianIdx","medianValue","createSegmentsFromContinuous","minSpeechSec","minSilenceSec","segments","currentSegment","decision","isSpeech","conf","filterShortSegments","lastFiltered","frameSizeMs","hopSizeMs","energyThreshold","zcrThresholdLow","zcrThresholdHigh","adaptiveAlpha","minSilenceDurationMs","minSpeechDurationMs","preEmphasis","smoothing","sr","zcr","energyScore","zcrScore","adaptiveThreshold","finalDecisions","totalSpeechDuration","seg","speechRatio","ABSOLUTE_GATE_LUFS","RELATIVE_GATE_LU","BLOCK_SIZE_MS","BLOCK_OVERLAP","SHORT_TERM_WINDOW_MS","MOMENTARY_WINDOW_MS","K_WEIGHTING_STAGE1","K_WEIGHTING_STAGE2","applyBiquad","x0","b0","b1","b2","a1","a2","y0","applyKWeighting","calculateBlockLoudness","channels","numChannels","channelSum","channelMode","gated","calculateShortTerm","calculateMomentary","calculateLoudnessRange","calculateTruePeak","channelsToProcess","channel0","channel1","kWeightedChannels","blockSizeSamples","blockLoudnessValues","pos","blockChannels","loudness","integratedLoudness","finalLoudnessValues","sumPower","lufs","relativeThreshold","shortTermSamples","shortTermHop","shortTermValues","windowChannels","momentarySamples","momentaryHop","momentaryValues","validValues","percentile10Index","percentile95Index","percentile10","percentile95","sampleValue","isAudioWorkletGlobalScope","featureMap","max","abs","AudioInspectProcessor","inputs","_outputs","_parameters","firstBuffer","keepSize","shiftAmount","newDataSize","nextAnalysisPosition","analysisData","audioData","startPos","sourceBuffer","featureFunction","resultOrPromise","detail","errorMessage","event","newOptions"],"mappings":"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","file":"AudioInspectProcessor.global.js","sourcesContent":["\nvar KissFFTModule = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmExports;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)\"}function instantiateSync(file,info){var module;var binary=getBinarySync(file);module=new WebAssembly.Module(binary);var instance=new WebAssembly.Instance(module,info);return[instance,module]}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;wasmExports=exports;wasmMemory=wasmExports[\"c\"];updateMemoryViews();wasmTable=wasmExports[\"j\"];addOnInit(wasmExports[\"d\"]);removeRunDependency(\"wasm-instantiate\");return exports}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}var result=instantiateSync(wasmBinaryFile,info);return receiveInstance(result[0])}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var _emscripten_memcpy_big=(dest,src,num)=>HEAPU8.copyWithin(dest,src,src+num);var abortOnCannotGrowMemory=requestedSize=>{abort(\"OOM\")};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;abortOnCannotGrowMemory(requestedSize)};function getCFunc(ident){var func=Module[\"_\"+ident];return func}var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var ccall=function(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var cwrap=function(ident,returnType,argTypes,opts){var numericArgs=!argTypes||argTypes.every(type=>type===\"number\"||type===\"boolean\");var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}};var wasmImports={b:_emscripten_memcpy_big,a:_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=asm[\"d\"];var _kiss_fft_free=Module[\"_kiss_fft_free\"]=asm[\"e\"];var _free=Module[\"_free\"]=asm[\"f\"];var _kiss_fft_alloc=Module[\"_kiss_fft_alloc\"]=asm[\"g\"];var _malloc=Module[\"_malloc\"]=asm[\"h\"];var _kiss_fft=Module[\"_kiss_fft\"]=asm[\"i\"];var ___errno_location=asm[\"__errno_location\"];var stackSave=asm[\"k\"];var stackRestore=asm[\"l\"];var stackAlloc=asm[\"m\"];function intArrayFromBase64(s){try{var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg\n}\n\n);\n})();\nexport default KissFFTModule;","import KissFFTModule from \"./KissFFT.mjs\";\n\n(\"use strict\");\n\nvar kissFFTModule = KissFFTModule({});\n\nvar kiss_fft_alloc = kissFFTModule.cwrap(\"kiss_fft_alloc\", \"number\", [\n  \"number\",\n  \"number\",\n  \"number\",\n  \"number\",\n]);\n\nvar kiss_fft = kissFFTModule.cwrap(\"kiss_fft\", \"void\", [\n  \"number\",\n  \"number\",\n  \"number\",\n]);\n\nvar kiss_fft_free = kissFFTModule.cwrap(\"kiss_fft_free\", \"void\", [\"number\"]);\n\nclass KissFftWrapperWasm {\n  constructor(size) {\n    this.size = size;\n    this.fcfg = kiss_fft_alloc(this.size, false);\n    this.icfg = kiss_fft_alloc(this.size, true);\n\n    this.inptr = kissFFTModule._malloc(this.size * 8);\n\n    this.cin = new Float32Array(\n      kissFFTModule.HEAPU8.buffer,\n      this.inptr,\n      this.size * 2,\n    );\n  }\n\n  fft = function (inputArray) {\n    // TODO: figure out how to move this into the constructor without breaking things (unit tests will catch it)\n    const outptr = kissFFTModule._malloc(this.size * 8);\n\n    const cout = new Float32Array(\n      kissFFTModule.HEAPU8.buffer,\n      outptr,\n      this.size * 2,\n    );\n\n    this.cin.set(inputArray);\n\n    kiss_fft(this.fcfg, this.inptr, outptr);\n\n    // we need to free the memory of outptr before we return, so we need this too\n    let outputArray = new Float32Array(this.size * 2);\n    outputArray.set(cout);\n\n    kissFFTModule._free(outptr);\n\n    return outputArray;\n  };\n\n  dispose() {\n    kiss_fft_free(this.fcfg);\n    kiss_fft_free(this.icfg);\n    kissFFTModule._free(this.inptr);\n  }\n}\n\nexport default KissFftWrapperWasm;\n","\"use strict\";\n\nfunction FFT_indutny(size) {\n  this.size = size | 0;\n  if (this.size <= 1 || (this.size & (this.size - 1)) !== 0)\n    throw new Error(\"FFT size must be a power of two and bigger than 1\");\n\n  this._csize = size << 1;\n\n  // NOTE: Use of `var` is intentional for old V8 versions\n  var table = new Array(this.size * 2);\n  for (var i = 0; i < table.length; i += 2) {\n    const angle = (Math.PI * i) / this.size;\n    table[i] = Math.cos(angle);\n    table[i + 1] = -Math.sin(angle);\n  }\n  this.table = table;\n\n  // Find size's power of two\n  var power = 0;\n  for (var t = 1; this.size > t; t <<= 1) power++;\n\n  // Calculate initial step's width:\n  //   * If we are full radix-4 - it is 2x smaller to give inital len=8\n  //   * Otherwise it is the same as `power` to give len=4\n  this._width = power % 2 === 0 ? power - 1 : power;\n\n  // Pre-compute bit-reversal patterns\n  this._bitrev = new Array(1 << this._width);\n  for (var j = 0; j < this._bitrev.length; j++) {\n    this._bitrev[j] = 0;\n    for (var shift = 0; shift < this._width; shift += 2) {\n      var revShift = this._width - shift - 2;\n      this._bitrev[j] |= ((j >>> shift) & 3) << revShift;\n    }\n  }\n\n  this._out = null;\n  this._data = null;\n  this._inv = 0;\n}\n\nFFT_indutny.prototype.fromComplexArray = function fromComplexArray(complex, storage) {\n  var res = storage || new Array(complex.length >>> 1);\n  for (var i = 0; i < complex.length; i += 2) res[i >>> 1] = complex[i];\n  return res;\n};\n\nFFT_indutny.prototype.createComplexArray = function createComplexArray() {\n  const res = new Array(this._csize);\n  for (var i = 0; i < res.length; i++) res[i] = 0;\n  return res;\n};\n\nFFT_indutny.prototype.toComplexArray = function toComplexArray(input, storage) {\n  var res = storage || this.createComplexArray();\n  for (var i = 0; i < res.length; i += 2) {\n    res[i] = input[i >>> 1];\n    res[i + 1] = 0;\n  }\n  return res;\n};\n\nFFT_indutny.prototype.completeSpectrum = function completeSpectrum(spectrum) {\n  var size = this._csize;\n  var half = size >>> 1;\n  for (var i = 2; i < half; i += 2) {\n    spectrum[size - i] = spectrum[i];\n    spectrum[size - i + 1] = -spectrum[i + 1];\n  }\n};\n\nFFT_indutny.prototype.transform = function transform(out, data) {\n  if (out === data) throw new Error(\"Input and output buffers must be different\");\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._transform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT_indutny.prototype.realTransform = function realTransform(out, data) {\n  if (out === data) throw new Error(\"Input and output buffers must be different\");\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._realTransform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT_indutny.prototype.inverseTransform = function inverseTransform(out, data) {\n  if (out === data) throw new Error(\"Input and output buffers must be different\");\n\n  this._out = out;\n  this._data = data;\n  this._inv = 1;\n  this._transform4();\n  for (var i = 0; i < out.length; i++) out[i] /= this.size;\n  this._out = null;\n  this._data = null;\n};\n\n// radix-4 implementation\n//\n// NOTE: Uses of `var` are intentional for older V8 version that do not\n// support both `let compound assignments` and `const phi`\nFFT_indutny.prototype._transform4 = function _transform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform2(outOff, off, step);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform4(outOff, off, step);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var quarterLen = len >>> 2;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      // Full case\n      var limit = outOff + quarterLen;\n      for (var i = outOff, k = 0; i < limit; i += 2, k += step) {\n        const A = i;\n        const B = A + quarterLen;\n        const C = B + quarterLen;\n        const D = C + quarterLen;\n\n        // Original values\n        const Ar = out[A];\n        const Ai = out[A + 1];\n        const Br = out[B];\n        const Bi = out[B + 1];\n        const Cr = out[C];\n        const Ci = out[C + 1];\n        const Dr = out[D];\n        const Di = out[D + 1];\n\n        // Middle values\n        const MAr = Ar;\n        const MAi = Ai;\n\n        const tableBr = table[k];\n        const tableBi = inv * table[k + 1];\n        const MBr = Br * tableBr - Bi * tableBi;\n        const MBi = Br * tableBi + Bi * tableBr;\n\n        const tableCr = table[2 * k];\n        const tableCi = inv * table[2 * k + 1];\n        const MCr = Cr * tableCr - Ci * tableCi;\n        const MCi = Cr * tableCi + Ci * tableCr;\n\n        const tableDr = table[3 * k];\n        const tableDi = inv * table[3 * k + 1];\n        const MDr = Dr * tableDr - Di * tableDi;\n        const MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        const T0r = MAr + MCr;\n        const T0i = MAi + MCi;\n        const T1r = MAr - MCr;\n        const T1i = MAi - MCi;\n        const T2r = MBr + MDr;\n        const T2i = MBi + MDi;\n        const T3r = inv * (MBr - MDr);\n        const T3i = inv * (MBi - MDi);\n\n        // Final values\n        const FAr = T0r + T2r;\n        const FAi = T0i + T2i;\n\n        const FCr = T0r - T2r;\n        const FCi = T0i - T2i;\n\n        const FBr = T1r + T3i;\n        const FBi = T1i - T3r;\n\n        const FDr = T1r - T3i;\n        const FDi = T1i + T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n        out[C] = FCr;\n        out[C + 1] = FCi;\n        out[D] = FDr;\n        out[D + 1] = FDi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT_indutny.prototype._singleTransform2 = function _singleTransform2(outOff, off, step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const evenI = data[off + 1];\n  const oddR = data[off + step];\n  const oddI = data[off + step + 1];\n\n  const leftR = evenR + oddR;\n  const leftI = evenI + oddI;\n  const rightR = evenR - oddR;\n  const rightI = evenI - oddI;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = leftI;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = rightI;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT_indutny.prototype._singleTransform4 = function _singleTransform4(outOff, off, step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Ai = data[off + 1];\n  const Br = data[off + step];\n  const Bi = data[off + step + 1];\n  const Cr = data[off + step2];\n  const Ci = data[off + step2 + 1];\n  const Dr = data[off + step3];\n  const Di = data[off + step3 + 1];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T0i = Ai + Ci;\n  const T1r = Ar - Cr;\n  const T1i = Ai - Ci;\n  const T2r = Br + Dr;\n  const T2i = Bi + Di;\n  const T3r = inv * (Br - Dr);\n  const T3i = inv * (Bi - Di);\n\n  // Final values\n  const FAr = T0r + T2r;\n  const FAi = T0i + T2i;\n\n  const FBr = T1r + T3i;\n  const FBi = T1i - T3r;\n\n  const FCr = T0r - T2r;\n  const FCi = T0i - T2i;\n\n  const FDr = T1r - T3i;\n  const FDi = T1i + T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = FAi;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = FCi;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n\n// Real input radix-4 implementation\nFFT_indutny.prototype._realTransform4 = function _realTransform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform2(outOff, off >>> 1, step >>> 1);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform4(outOff, off >>> 1, step >>> 1);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var halfLen = len >>> 1;\n    var quarterLen = halfLen >>> 1;\n    var hquarterLen = quarterLen >>> 1;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      for (var i = 0, k = 0; i <= hquarterLen; i += 2, k += step) {\n        var A = outOff + i;\n        var B = A + quarterLen;\n        var C = B + quarterLen;\n        var D = C + quarterLen;\n\n        // Original values\n        var Ar = out[A];\n        var Ai = out[A + 1];\n        var Br = out[B];\n        var Bi = out[B + 1];\n        var Cr = out[C];\n        var Ci = out[C + 1];\n        var Dr = out[D];\n        var Di = out[D + 1];\n\n        // Middle values\n        var MAr = Ar;\n        var MAi = Ai;\n\n        var tableBr = table[k];\n        var tableBi = inv * table[k + 1];\n        var MBr = Br * tableBr - Bi * tableBi;\n        var MBi = Br * tableBi + Bi * tableBr;\n\n        var tableCr = table[2 * k];\n        var tableCi = inv * table[2 * k + 1];\n        var MCr = Cr * tableCr - Ci * tableCi;\n        var MCi = Cr * tableCi + Ci * tableCr;\n\n        var tableDr = table[3 * k];\n        var tableDi = inv * table[3 * k + 1];\n        var MDr = Dr * tableDr - Di * tableDi;\n        var MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        var T0r = MAr + MCr;\n        var T0i = MAi + MCi;\n        var T1r = MAr - MCr;\n        var T1i = MAi - MCi;\n        var T2r = MBr + MDr;\n        var T2i = MBi + MDi;\n        var T3r = inv * (MBr - MDr);\n        var T3i = inv * (MBi - MDi);\n\n        // Final values\n        var FAr = T0r + T2r;\n        var FAi = T0i + T2i;\n\n        var FBr = T1r + T3i;\n        var FBi = T1i - T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n\n        // Output final middle point\n        if (i === 0) {\n          var FCr = T0r - T2r;\n          var FCi = T0i - T2i;\n          out[C] = FCr;\n          out[C + 1] = FCi;\n          continue;\n        }\n\n        // Do not overwrite ourselves\n        if (i === hquarterLen) continue;\n\n        // In the flipped case:\n        // MAi = -MAi\n        // MBr=-MBi, MBi=-MBr\n        // MCr=-MCr\n        // MDr=MDi, MDi=MDr\n        var ST0r = T1r;\n        var ST0i = -T1i;\n        var ST1r = T0r;\n        var ST1i = -T0i;\n        var ST2r = -inv * T3i;\n        var ST2i = -inv * T3r;\n        var ST3r = -inv * T2i;\n        var ST3i = -inv * T2r;\n\n        var SFAr = ST0r + ST2r;\n        var SFAi = ST0i + ST2i;\n\n        var SFBr = ST1r + ST3i;\n        var SFBi = ST1i - ST3r;\n\n        var SA = outOff + quarterLen - i;\n        var SB = outOff + halfLen - i;\n\n        out[SA] = SFAr;\n        out[SA + 1] = SFAi;\n        out[SB] = SFBr;\n        out[SB + 1] = SFBi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT_indutny.prototype._singleRealTransform2 = function _singleRealTransform2(outOff, off, step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const oddR = data[off + step];\n\n  const leftR = evenR + oddR;\n  const rightR = evenR - oddR;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = 0;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT_indutny.prototype._singleRealTransform4 = function _singleRealTransform4(outOff, off, step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Br = data[off + step];\n  const Cr = data[off + step2];\n  const Dr = data[off + step3];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T1r = Ar - Cr;\n  const T2r = Br + Dr;\n  const T3r = inv * (Br - Dr);\n\n  // Final values\n  const FAr = T0r + T2r;\n\n  const FBr = T1r;\n  const FBi = -T3r;\n\n  const FCr = T0r - T2r;\n\n  const FDr = T1r;\n  const FDi = T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = 0;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n\nexport default FFT_indutny;\n","import FFT_indutny from \"./fft.js\";\r\n\r\nclass IndutnyFftWrapperJavascript {\r\n  constructor(size) {\r\n    this.size = size;\r\n    this.indutnyFft = new FFT_indutny(size);\r\n  }\r\n\r\n  fft(inputArr) {\r\n    const outputArr = new Float32Array(2 * this.size);\r\n    this.indutnyFft.transform(outputArr, inputArr);\r\n    return outputArr;\r\n  }\r\n}\r\n\r\nexport default IndutnyFftWrapperJavascript;\r\n","\nvar CrossModule = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmExports;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)\"}function instantiateSync(file,info){var module;var binary=getBinarySync(file);module=new WebAssembly.Module(binary);var instance=new WebAssembly.Instance(module,info);return[instance,module]}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;wasmExports=exports;wasmMemory=wasmExports[\"b\"];updateMemoryViews();wasmTable=wasmExports[\"e\"];addOnInit(wasmExports[\"c\"]);removeRunDependency(\"wasm-instantiate\");return exports}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}var result=instantiateSync(wasmBinaryFile,info);return receiveInstance(result[0])}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var abortOnCannotGrowMemory=requestedSize=>{abort(\"OOM\")};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;abortOnCannotGrowMemory(requestedSize)};function getCFunc(ident){var func=Module[\"_\"+ident];return func}var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var ccall=function(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var cwrap=function(ident,returnType,argTypes,opts){var numericArgs=!argTypes||argTypes.every(type=>type===\"number\"||type===\"boolean\");var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}};var wasmImports={a:_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=asm[\"c\"];var _fftCross=Module[\"_fftCross\"]=asm[\"d\"];var ___errno_location=asm[\"__errno_location\"];var _malloc=Module[\"_malloc\"]=asm[\"f\"];var _free=Module[\"_free\"]=asm[\"g\"];var stackSave=asm[\"h\"];var stackRestore=asm[\"i\"];var stackAlloc=asm[\"j\"];function intArrayFromBase64(s){try{var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg\n}\n\n);\n})();\nexport default CrossModule;","import CrossModule from \"./Cross.mjs\";\n\n(\"use strict\");\n\nvar crossModule = CrossModule({});\n\nvar fftCross = crossModule.cwrap(\"fftCross\", \"void\", [\n  \"number\",\n  \"number\",\n  \"number\",\n  \"number\",\n  \"number\",\n  \"number\",\n]);\n\nfunction FFTCross(size) {\n  this.size = size;\n  this.n = size * 8;\n  this.ptr = crossModule._malloc(this.n * 4);\n  this.ri = new Uint8Array(crossModule.HEAPU8.buffer, this.ptr, this.n);\n  this.ii = new Uint8Array(\n    crossModule.HEAPU8.buffer,\n    this.ptr + this.n,\n    this.n,\n  );\n\n  this.transform = function (real, imag, inverse) {\n    var ptr = this.ptr;\n    var n = this.n;\n    this.ri.set(new Uint8Array(real.buffer));\n    this.ii.set(new Uint8Array(imag.buffer));\n    fftCross(this.size, inverse, ptr, ptr + n, ptr + n * 2, ptr + n * 3);\n    var ro = new Float64Array(\n      crossModule.HEAPU8.buffer,\n      ptr + n * 2,\n      this.size,\n    );\n    var io = new Float64Array(\n      crossModule.HEAPU8.buffer,\n      ptr + n * 3,\n      this.size,\n    );\n    return { real: ro, imag: io };\n  };\n\n  this.dispose = function () {\n    crossModule._free(this.ptr);\n  };\n}\n\nexport default FFTCross;\n","import FFTCross from \"./FFT.js\";\r\n\r\nclass CrossFftWrapperWasm {\r\n  constructor(size) {\r\n    this.size = size;\r\n    this.fftcross = new FFTCross(size);\r\n    this.real = new Float64Array(this.size);\r\n    this.imag = new Float64Array(this.size);\r\n  }\r\n\r\n  fft(inputArr) {\r\n    for (var i = 0; i < this.size; i++) {\r\n      this.real[i] = inputArr[2 * i];\r\n      this.imag[i] = inputArr[2 * i + 1];\r\n    }\r\n    const out = this.fftcross.transform(this.real, this.imag, false);\r\n    const outputArr = new Float32Array(2 * this.size);\r\n    for (var i = 0; i < this.size; i++) {\r\n      outputArr[2 * i] = out.real[i];\r\n      outputArr[2 * i + 1] = out.imag[i];\r\n    }\r\n    return outputArr;\r\n  }\r\n}\r\n\r\nexport default CrossFftWrapperWasm;\r\n","/*\n * Free FFT and convolution (JavaScript)\n *\n * Copyright (c) 2014 Project Nayuki\n * http://www.nayuki.io/page/free-small-fft-in-multiple-languages\n *\n * (MIT License)\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n * - The above copyright notice and this permission notice shall be included in\n *   all copies or substantial portions of the Software.\n * - The Software is provided \"as is\", without warranty of any kind, express or\n *   implied, including but not limited to the warranties of merchantability,\n *   fitness for a particular purpose and noninfringement. In no event shall the\n *   authors or copyright holders be liable for any claim, damages or other\n *   liability, whether in an action of contract, tort or otherwise, arising from,\n *   out of or in connection with the Software or the use or other dealings in the\n *   Software.\n *\n * Slightly restructured by Chris Cannam, cannam@all-day-breakfast.com\n */\n\n\"use strict\";\n\n/*\n * Construct an object for calculating the discrete Fourier transform (DFT) of size n, where n is a power of 2.\n */\nfunction FFTNayuki(n) {\n  this.n = n;\n  this.levels = -1;\n\n  for (var i = 0; i < 32; i++) {\n    if (1 << i == n) {\n      this.levels = i; // Equal to log2(n)\n    }\n  }\n  if (this.levels == -1) {\n    throw \"Length is not a power of 2\";\n  }\n\n  this.cosTable = new Array(n / 2);\n  this.sinTable = new Array(n / 2);\n  for (var i = 0; i < n / 2; i++) {\n    this.cosTable[i] = Math.cos((2 * Math.PI * i) / n);\n    this.sinTable[i] = Math.sin((2 * Math.PI * i) / n);\n  }\n\n  /*\n   * Computes the discrete Fourier transform (DFT) of the given complex vector, storing the result back into the vector.\n   * The vector's length must be equal to the size n that was passed to the object constructor, and this must be a power of 2. Uses the Cooley-Tukey decimation-in-time radix-2 algorithm.\n   */\n  this.forward = function (real, imag) {\n    var n = this.n;\n\n    // Bit-reversed addressing permutation\n    for (var i = 0; i < n; i++) {\n      var j = reverseBits(i, this.levels);\n      if (j > i) {\n        var temp = real[i];\n        real[i] = real[j];\n        real[j] = temp;\n        temp = imag[i];\n        imag[i] = imag[j];\n        imag[j] = temp;\n      }\n    }\n\n    // Cooley-Tukey decimation-in-time radix-2 FFT\n    for (var size = 2; size <= n; size *= 2) {\n      var halfsize = size / 2;\n      var tablestep = n / size;\n      for (var i = 0; i < n; i += size) {\n        for (var j = i, k = 0; j < i + halfsize; j++, k += tablestep) {\n          var tpre = real[j + halfsize] * this.cosTable[k] + imag[j + halfsize] * this.sinTable[k];\n          var tpim = -real[j + halfsize] * this.sinTable[k] + imag[j + halfsize] * this.cosTable[k];\n          real[j + halfsize] = real[j] - tpre;\n          imag[j + halfsize] = imag[j] - tpim;\n          real[j] += tpre;\n          imag[j] += tpim;\n        }\n      }\n    }\n\n    // Returns the integer whose value is the reverse of the lowest 'bits' bits of the integer 'x'.\n    function reverseBits(x, bits) {\n      var y = 0;\n      for (var i = 0; i < bits; i++) {\n        y = (y << 1) | (x & 1);\n        x >>>= 1;\n      }\n      return y;\n    }\n  };\n\n  /*\n   * Computes the inverse discrete Fourier transform (IDFT) of the given complex vector, storing the result back into the vector.\n   * The vector's length must be equal to the size n that was passed to the object constructor, and this must be a power of 2. This is a wrapper function. This transform does not perform scaling, so the inverse is not a true inverse.\n   */\n  this.inverse = function (real, imag) {\n    forward(imag, real);\n  };\n}\n\nexport default FFTNayuki;\n","import FFTNayuki from \"./fft.js\"; // this one has the sin/cos tables precomputed\r\n\r\nclass NayukiFftWrapperJavascript {\r\n  constructor(size) {\r\n    this.size = size;\r\n    this.fftNayuki = new FFTNayuki(size);\r\n  }\r\n\r\n  fft(inputArr) {\r\n    // it uses the same buffer for input and output\r\n    const real = new Float32Array(this.size);\r\n    const imag = new Float32Array(this.size);\r\n    const outputArr = new Float32Array(this.size * 2);\r\n\r\n    for (var i = 0; i < this.size; ++i) {\r\n      real[i] = inputArr[i * 2];\r\n      imag[i] = inputArr[i * 2 + 1];\r\n    }\r\n    this.fftNayuki.forward(real, imag); // this does the FFT, it uses the same buffer for input and output\r\n    for (var i = 0; i < this.size; ++i) {\r\n      outputArr[i * 2] = real[i];\r\n      outputArr[i * 2 + 1] = imag[i];\r\n    }\r\n    return outputArr;\r\n  }\r\n}\r\n\r\nexport default NayukiFftWrapperJavascript;\r\n","\nvar NayukiCModule = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmExports;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)\"}function instantiateSync(file,info){var module;var binary=getBinarySync(file);module=new WebAssembly.Module(binary);var instance=new WebAssembly.Instance(module,info);return[instance,module]}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;wasmExports=exports;wasmMemory=wasmExports[\"b\"];updateMemoryViews();wasmTable=wasmExports[\"l\"];addOnInit(wasmExports[\"c\"]);removeRunDependency(\"wasm-instantiate\");return exports}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}var result=instantiateSync(wasmBinaryFile,info);return receiveInstance(result[0])}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var abortOnCannotGrowMemory=requestedSize=>{abort(\"OOM\")};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;abortOnCannotGrowMemory(requestedSize)};function getCFunc(ident){var func=Module[\"_\"+ident];return func}var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var ccall=function(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var cwrap=function(ident,returnType,argTypes,opts){var numericArgs=!argTypes||argTypes.every(type=>type===\"number\"||type===\"boolean\");var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}};var wasmImports={a:_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=asm[\"c\"];var _malloc=Module[\"_malloc\"]=asm[\"d\"];var _free=Module[\"_free\"]=asm[\"e\"];var _precalc=Module[\"_precalc\"]=asm[\"f\"];var _precalc_f=Module[\"_precalc_f\"]=asm[\"g\"];var _dispose=Module[\"_dispose\"]=asm[\"h\"];var _dispose_f=Module[\"_dispose_f\"]=asm[\"i\"];var _transform_radix2_precalc=Module[\"_transform_radix2_precalc\"]=asm[\"j\"];var _transform_radix2_precalc_f=Module[\"_transform_radix2_precalc_f\"]=asm[\"k\"];var ___errno_location=asm[\"__errno_location\"];var stackSave=asm[\"m\"];var stackRestore=asm[\"n\"];var stackAlloc=asm[\"o\"];function intArrayFromBase64(s){try{var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg\n}\n\n);\n})();\nexport default NayukiCModule;","import NayukiCModule from \"./NayukiCFFT.mjs\";\n\n(\"use strict\");\n\nvar nayukiCModule = NayukiCModule({});\n\nvar nc_precalc = nayukiCModule.cwrap(\"precalc\", \"number\", [\"number\"]);\n\nvar nc_dispose = nayukiCModule.cwrap(\"dispose\", \"void\", [\"number\"]);\n\nvar nc_transform_radix2_precalc = nayukiCModule.cwrap(\n  \"transform_radix2_precalc\",\n  \"void\",\n  [\"number\", \"number\", \"number\", \"number\"],\n);\n\nvar nc_precalc_f = nayukiCModule.cwrap(\"precalc_f\", \"number\", [\"number\"]);\n\nvar nc_dispose_f = nayukiCModule.cwrap(\"dispose_f\", \"void\", [\"number\"]);\n\nvar nc_transform_radix2_precalc_f = nayukiCModule.cwrap(\n  \"transform_radix2_precalc_f\",\n  \"void\",\n  [\"number\", \"number\", \"number\", \"number\"],\n);\n\nfunction FFTNayukiC(n) {\n  this.n = n;\n  this.rptr = nayukiCModule._malloc(n * 4 + n * 4);\n  this.iptr = this.rptr + n * 4;\n  this.rarr = new Float32Array(nayukiCModule.HEAPU8.buffer, this.rptr, n);\n  this.iarr = new Float32Array(nayukiCModule.HEAPU8.buffer, this.iptr, n);\n  this.tables = nc_precalc_f(n);\n\n  this.forward = function (real, imag) {\n    this.rarr.set(real);\n    this.iarr.set(imag);\n    nc_transform_radix2_precalc_f(this.rptr, this.iptr, this.n, this.tables);\n    real.set(this.rarr);\n    imag.set(this.iarr);\n  };\n\n  this.dispose = function () {\n    nayukiCModule._free(this.rptr);\n    nc_dispose_f(this.tables);\n  };\n}\n\nexport default FFTNayukiC;\n","import FFTNayukiC from \"./FFT.js\";\r\n\r\nclass NayukiWasmFftWrapperWasm {\r\n  constructor(size) {\r\n    this.size = size;\r\n    this.fftNayuki = new FFTNayukiC(size);\r\n  }\r\n\r\n  fft(inputArr) {\r\n    // it uses the same buffer for input and output\r\n    const real = new Float32Array(this.size);\r\n    const imag = new Float32Array(this.size);\r\n    const outputArr = new Float32Array(this.size * 2);\r\n\r\n    for (var i = 0; i < this.size; ++i) {\r\n      real[i] = inputArr[i * 2];\r\n      imag[i] = inputArr[i * 2 + 1];\r\n    }\r\n    this.fftNayuki.forward(real, imag); // this does the FFT, it uses the same buffer for input and output\r\n    for (var i = 0; i < this.size; ++i) {\r\n      outputArr[i * 2] = real[i];\r\n      outputArr[i * 2 + 1] = imag[i];\r\n    }\r\n    return outputArr;\r\n  }\r\n}\r\n\r\nexport default NayukiWasmFftWrapperWasm;\r\n","/* Copyright (c) 2012, Jens Nockert <jens@ofmlabs.org>, Jussi Kalliokoski <jussi@ofmlabs.org>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nif (!FFT) {\n  var FFT = {};\n}\n\nvoid (function (namespace) {\n  \"use strict\";\n\n  function butterfly2(output, outputOffset, outputStride, fStride, state, m) {\n    var t = state.twiddle;\n\n    for (var i = 0; i < m; i++) {\n      var s0_r = output[2 * (outputOffset + outputStride * i)],\n        s0_i = output[2 * (outputOffset + outputStride * i) + 1];\n      var s1_r = output[2 * (outputOffset + outputStride * (i + m))],\n        s1_i = output[2 * (outputOffset + outputStride * (i + m)) + 1];\n\n      var t1_r = t[2 * (0 + fStride * i)],\n        t1_i = t[2 * (0 + fStride * i) + 1];\n\n      var v1_r = s1_r * t1_r - s1_i * t1_i,\n        v1_i = s1_r * t1_i + s1_i * t1_r;\n\n      var r0_r = s0_r + v1_r,\n        r0_i = s0_i + v1_i;\n      var r1_r = s0_r - v1_r,\n        r1_i = s0_i - v1_i;\n\n      (output[2 * (outputOffset + outputStride * i)] = r0_r),\n        (output[2 * (outputOffset + outputStride * i) + 1] = r0_i);\n      (output[2 * (outputOffset + outputStride * (i + m))] = r1_r),\n        (output[2 * (outputOffset + outputStride * (i + m)) + 1] = r1_i);\n    }\n  }\n\n  function butterfly3(output, outputOffset, outputStride, fStride, state, m) {\n    var t = state.twiddle;\n    var m1 = m,\n      m2 = 2 * m;\n    var fStride1 = fStride,\n      fStride2 = 2 * fStride;\n\n    var e = t[2 * (0 + fStride * m) + 1];\n\n    for (var i = 0; i < m; i++) {\n      var s0_r = output[2 * (outputOffset + outputStride * i)],\n        s0_i = output[2 * (outputOffset + outputStride * i) + 1];\n\n      var s1_r = output[2 * (outputOffset + outputStride * (i + m1))],\n        s1_i = output[2 * (outputOffset + outputStride * (i + m1)) + 1];\n      var t1_r = t[2 * (0 + fStride1 * i)],\n        t1_i = t[2 * (0 + fStride1 * i) + 1];\n      var v1_r = s1_r * t1_r - s1_i * t1_i,\n        v1_i = s1_r * t1_i + s1_i * t1_r;\n\n      var s2_r = output[2 * (outputOffset + outputStride * (i + m2))],\n        s2_i = output[2 * (outputOffset + outputStride * (i + m2)) + 1];\n      var t2_r = t[2 * (0 + fStride2 * i)],\n        t2_i = t[2 * (0 + fStride2 * i) + 1];\n      var v2_r = s2_r * t2_r - s2_i * t2_i,\n        v2_i = s2_r * t2_i + s2_i * t2_r;\n\n      var i0_r = v1_r + v2_r,\n        i0_i = v1_i + v2_i;\n\n      var r0_r = s0_r + i0_r,\n        r0_i = s0_i + i0_i;\n      (output[2 * (outputOffset + outputStride * i)] = r0_r),\n        (output[2 * (outputOffset + outputStride * i) + 1] = r0_i);\n\n      var i1_r = s0_r - i0_r * 0.5;\n      var i1_i = s0_i - i0_i * 0.5;\n\n      var i2_r = (v1_r - v2_r) * e;\n      var i2_i = (v1_i - v2_i) * e;\n\n      var r1_r = i1_r - i2_i;\n      var r1_i = i1_i + i2_r;\n      (output[2 * (outputOffset + outputStride * (i + m1))] = r1_r),\n        (output[2 * (outputOffset + outputStride * (i + m1)) + 1] = r1_i);\n\n      var r2_r = i1_r + i2_i;\n      var r2_i = i1_i - i2_r;\n      (output[2 * (outputOffset + outputStride * (i + m2))] = r2_r),\n        (output[2 * (outputOffset + outputStride * (i + m2)) + 1] = r2_i);\n    }\n  }\n\n  function butterfly4(output, outputOffset, outputStride, fStride, state, m) {\n    var t = state.twiddle;\n    var m1 = m,\n      m2 = 2 * m,\n      m3 = 3 * m;\n    var fStride1 = fStride,\n      fStride2 = 2 * fStride,\n      fStride3 = 3 * fStride;\n\n    for (var i = 0; i < m; i++) {\n      var s0_r = output[2 * (outputOffset + outputStride * i)],\n        s0_i = output[2 * (outputOffset + outputStride * i) + 1];\n\n      var s1_r = output[2 * (outputOffset + outputStride * (i + m1))],\n        s1_i = output[2 * (outputOffset + outputStride * (i + m1)) + 1];\n      var t1_r = t[2 * (0 + fStride1 * i)],\n        t1_i = t[2 * (0 + fStride1 * i) + 1];\n      var v1_r = s1_r * t1_r - s1_i * t1_i,\n        v1_i = s1_r * t1_i + s1_i * t1_r;\n\n      var s2_r = output[2 * (outputOffset + outputStride * (i + m2))],\n        s2_i = output[2 * (outputOffset + outputStride * (i + m2)) + 1];\n      var t2_r = t[2 * (0 + fStride2 * i)],\n        t2_i = t[2 * (0 + fStride2 * i) + 1];\n      var v2_r = s2_r * t2_r - s2_i * t2_i,\n        v2_i = s2_r * t2_i + s2_i * t2_r;\n\n      var s3_r = output[2 * (outputOffset + outputStride * (i + m3))],\n        s3_i = output[2 * (outputOffset + outputStride * (i + m3)) + 1];\n      var t3_r = t[2 * (0 + fStride3 * i)],\n        t3_i = t[2 * (0 + fStride3 * i) + 1];\n      var v3_r = s3_r * t3_r - s3_i * t3_i,\n        v3_i = s3_r * t3_i + s3_i * t3_r;\n\n      var i0_r = s0_r + v2_r,\n        i0_i = s0_i + v2_i;\n      var i1_r = s0_r - v2_r,\n        i1_i = s0_i - v2_i;\n      var i2_r = v1_r + v3_r,\n        i2_i = v1_i + v3_i;\n      var i3_r = v1_r - v3_r,\n        i3_i = v1_i - v3_i;\n\n      var r0_r = i0_r + i2_r,\n        r0_i = i0_i + i2_i;\n\n      if (state.inverse) {\n        var r1_r = i1_r - i3_i;\n        var r1_i = i1_i + i3_r;\n      } else {\n        var r1_r = i1_r + i3_i;\n        var r1_i = i1_i - i3_r;\n      }\n\n      var r2_r = i0_r - i2_r,\n        r2_i = i0_i - i2_i;\n\n      if (state.inverse) {\n        var r3_r = i1_r + i3_i;\n        var r3_i = i1_i - i3_r;\n      } else {\n        var r3_r = i1_r - i3_i;\n        var r3_i = i1_i + i3_r;\n      }\n\n      (output[2 * (outputOffset + outputStride * i)] = r0_r),\n        (output[2 * (outputOffset + outputStride * i) + 1] = r0_i);\n      (output[2 * (outputOffset + outputStride * (i + m1))] = r1_r),\n        (output[2 * (outputOffset + outputStride * (i + m1)) + 1] = r1_i);\n      (output[2 * (outputOffset + outputStride * (i + m2))] = r2_r),\n        (output[2 * (outputOffset + outputStride * (i + m2)) + 1] = r2_i);\n      (output[2 * (outputOffset + outputStride * (i + m3))] = r3_r),\n        (output[2 * (outputOffset + outputStride * (i + m3)) + 1] = r3_i);\n    }\n  }\n\n  function butterfly(output, outputOffset, outputStride, fStride, state, m, p) {\n    var t = state.twiddle,\n      n = state.n,\n      scratch = new Float64Array(2 * p);\n\n    for (var u = 0; u < m; u++) {\n      for (var q1 = 0, k = u; q1 < p; q1++, k += m) {\n        var x0_r = output[2 * (outputOffset + outputStride * k)],\n          x0_i = output[2 * (outputOffset + outputStride * k) + 1];\n        (scratch[2 * q1] = x0_r), (scratch[2 * q1 + 1] = x0_i);\n      }\n\n      for (var q1 = 0, k = u; q1 < p; q1++, k += m) {\n        var tOffset = 0;\n\n        var x0_r = scratch[2 * 0],\n          x0_i = scratch[2 * 0 + 1];\n        (output[2 * (outputOffset + outputStride * k)] = x0_r),\n          (output[2 * (outputOffset + outputStride * k) + 1] = x0_i);\n\n        for (var q = 1; q < p; q++) {\n          tOffset = (tOffset + fStride * k) % n;\n\n          var s0_r = output[2 * (outputOffset + outputStride * k)],\n            s0_i = output[2 * (outputOffset + outputStride * k) + 1];\n\n          var s1_r = scratch[2 * q],\n            s1_i = scratch[2 * q + 1];\n          var t1_r = t[2 * tOffset],\n            t1_i = t[2 * tOffset + 1];\n          var v1_r = s1_r * t1_r - s1_i * t1_i,\n            v1_i = s1_r * t1_i + s1_i * t1_r;\n\n          var r0_r = s0_r + v1_r,\n            r0_i = s0_i + v1_i;\n          (output[2 * (outputOffset + outputStride * k)] = r0_r),\n            (output[2 * (outputOffset + outputStride * k) + 1] = r0_i);\n        }\n      }\n    }\n  }\n\n  function work(output, outputOffset, outputStride, f, fOffset, fStride, inputStride, factors, state) {\n    var p = factors.shift();\n    var m = factors.shift();\n\n    if (m == 1) {\n      for (var i = 0; i < p * m; i++) {\n        var x0_r = f[2 * (fOffset + fStride * inputStride * i)],\n          x0_i = f[2 * (fOffset + fStride * inputStride * i) + 1];\n        (output[2 * (outputOffset + outputStride * i)] = x0_r),\n          (output[2 * (outputOffset + outputStride * i) + 1] = x0_i);\n      }\n    } else {\n      for (var i = 0; i < p; i++) {\n        work(\n          output,\n          outputOffset + outputStride * i * m,\n          outputStride,\n          f,\n          fOffset + i * fStride * inputStride,\n          fStride * p,\n          inputStride,\n          factors.slice(),\n          state\n        );\n      }\n    }\n\n    switch (p) {\n      case 2:\n        butterfly2(output, outputOffset, outputStride, fStride, state, m);\n        break;\n      case 3:\n        butterfly3(output, outputOffset, outputStride, fStride, state, m);\n        break;\n      case 4:\n        butterfly4(output, outputOffset, outputStride, fStride, state, m);\n        break;\n      default:\n        butterfly(output, outputOffset, outputStride, fStride, state, m, p);\n        break;\n    }\n  }\n\n  var complex = function (n, inverse) {\n    if (arguments.length < 2) {\n      throw new RangeError(\"You didn't pass enough arguments, passed `\" + arguments.length + \"'\");\n    }\n\n    var n = ~~n,\n      inverse = !!inverse;\n\n    if (n < 1) {\n      throw new RangeError(\"n is outside range, should be positive integer, was `\" + n + \"'\");\n    }\n\n    var state = {\n      n: n,\n      inverse: inverse,\n\n      factors: [],\n      twiddle: new Float64Array(2 * n),\n      scratch: new Float64Array(2 * n)\n    };\n\n    var t = state.twiddle,\n      theta = (2 * Math.PI) / n;\n\n    for (var i = 0; i < n; i++) {\n      if (inverse) {\n        var phase = theta * i;\n      } else {\n        var phase = -theta * i;\n      }\n\n      t[2 * i] = Math.cos(phase);\n      t[2 * i + 1] = Math.sin(phase);\n    }\n\n    var p = 4,\n      v = Math.floor(Math.sqrt(n));\n\n    while (n > 1) {\n      while (n % p) {\n        switch (p) {\n          case 4:\n            p = 2;\n            break;\n          case 2:\n            p = 3;\n            break;\n          default:\n            p += 2;\n            break;\n        }\n\n        if (p > v) {\n          p = n;\n        }\n      }\n\n      n /= p;\n\n      state.factors.push(p);\n      state.factors.push(n);\n    }\n\n    this.state = state;\n  };\n\n  complex.prototype.simple = function (output, input, t) {\n    this.process(output, 0, 1, input, 0, 1, t);\n  };\n\n  complex.prototype.process = function (output, outputOffset, outputStride, input, inputOffset, inputStride, t) {\n    var outputStride = ~~outputStride,\n      inputStride = ~~inputStride;\n\n    var type = t == \"real\" ? t : \"complex\";\n\n    if (outputStride < 1) {\n      throw new RangeError(\"outputStride is outside range, should be positive integer, was `\" + outputStride + \"'\");\n    }\n\n    if (inputStride < 1) {\n      throw new RangeError(\"inputStride is outside range, should be positive integer, was `\" + inputStride + \"'\");\n    }\n\n    if (type == \"real\") {\n      for (var i = 0; i < this.state.n; i++) {\n        var x0_r = input[inputOffset + inputStride * i];\n        var x0_i = 0.0;\n\n        (this.state.scratch[2 * i] = x0_r), (this.state.scratch[2 * i + 1] = x0_i);\n      }\n\n      work(output, outputOffset, outputStride, this.state.scratch, 0, 1, 1, this.state.factors.slice(), this.state);\n    } else {\n      if (input == output) {\n        work(this.state.scratch, 0, 1, input, inputOffset, 1, inputStride, this.state.factors.slice(), this.state);\n\n        for (var i = 0; i < this.state.n; i++) {\n          var x0_r = this.state.scratch[2 * i],\n            x0_i = this.state.scratch[2 * i + 1];\n\n          (output[2 * (outputOffset + outputStride * i)] = x0_r),\n            (output[2 * (outputOffset + outputStride * i) + 1] = x0_i);\n        }\n      } else {\n        work(\n          output,\n          outputOffset,\n          outputStride,\n          input,\n          inputOffset,\n          1,\n          inputStride,\n          this.state.factors.slice(),\n          this.state\n        );\n      }\n    }\n  };\n\n  namespace.complex = complex;\n})(FFT);\n\nexport default FFT;\n","import FFT from \"./complex.js\";\r\n\r\nclass NockertFftWrapperJavascript {\r\n  constructor(size) {\r\n    this.size = size;\r\n    this.nockertfft = new FFT.complex(size, false); // 2nd arg is for inverse\r\n  }\r\n\r\n  fft(inputArr) {\r\n    const outputArr = new Float32Array(2 * this.size);\r\n    this.nockertfft.simple(outputArr, inputArr, \"complex\");\r\n    return outputArr;\r\n  }\r\n}\r\n\r\nexport default NockertFftWrapperJavascript;\r\n","// core operations\nlet _n = 0; // order\nlet _bitrev = null; // bit reversal table\nlet _cstb = null; // sin/cos table\n\nfunction init(n) {\n  if (n !== 0 && (n & (n - 1)) === 0) {\n    _n = n;\n    _initArray();\n    _makeBitReversalTable();\n    _makeCosSinTable();\n  } else {\n    throw new Error(\"init: radix-2 required\");\n  }\n}\n\n// 1D-FFT\nfunction fft1d(re, im) {\n  fastFourierTransform(re, im, 1);\n}\n\n// 1D-IFFT\nfunction ifft1d(re, im) {\n  let n = 1 / _n;\n  fastFourierTransform(re, im, -1);\n  for (let i = 0; i < _n; i++) {\n    re[i] *= n;\n    im[i] *= n;\n  }\n}\n\n// 1D-IFFT\nfunction bt1d(re, im) {\n  fastFourierTransform(re, im, -1);\n}\n\n// 2D-FFT Not very useful if the number of rows have to be equal to cols\nfunction fft2d(re, im) {\n  let tre = [];\n  let tim = [];\n  let i = 0;\n  // x-axis\n  for (let y = 0; y < _n; y++) {\n    i = y * _n;\n    for (let x1 = 0; x1 < _n; x1++) {\n      tre[x1] = re[x1 + i];\n      tim[x1] = im[x1 + i];\n    }\n    fft1d(tre, tim);\n    for (let x2 = 0; x2 < _n; x2++) {\n      re[x2 + i] = tre[x2];\n      im[x2 + i] = tim[x2];\n    }\n  }\n  // y-axis\n  for (let x = 0; x < _n; x++) {\n    for (let y1 = 0; y1 < _n; y1++) {\n      i = x + y1 * _n;\n      tre[y1] = re[i];\n      tim[y1] = im[i];\n    }\n    fft1d(tre, tim);\n    for (let y2 = 0; y2 < _n; y2++) {\n      i = x + y2 * _n;\n      re[i] = tre[y2];\n      im[i] = tim[y2];\n    }\n  }\n}\n\n// 2D-IFFT\nfunction ifft2d(re, im) {\n  let tre = [];\n  let tim = [];\n  let i = 0;\n  // x-axis\n  for (let y = 0; y < _n; y++) {\n    i = y * _n;\n    for (let x1 = 0; x1 < _n; x1++) {\n      tre[x1] = re[x1 + i];\n      tim[x1] = im[x1 + i];\n    }\n    ifft1d(tre, tim);\n    for (let x2 = 0; x2 < _n; x2++) {\n      re[x2 + i] = tre[x2];\n      im[x2 + i] = tim[x2];\n    }\n  }\n  // y-axis\n  for (let x = 0; x < _n; x++) {\n    for (let y1 = 0; y1 < _n; y1++) {\n      i = x + y1 * _n;\n      tre[y1] = re[i];\n      tim[y1] = im[i];\n    }\n    ifft1d(tre, tim);\n    for (let y2 = 0; y2 < _n; y2++) {\n      i = x + y2 * _n;\n      re[i] = tre[y2];\n      im[i] = tim[y2];\n    }\n  }\n}\n\n// core operation of FFT\nfunction fastFourierTransform(re, im, inv) {\n  let d;\n  let h;\n  let ik;\n  let m;\n  let tmp;\n  let wr;\n  let wi;\n  let xr;\n  let xi;\n  let n4 = _n >> 2;\n  // bit reversal\n  for (let l = 0; l < _n; l++) {\n    m = _bitrev[l];\n    if (l < m) {\n      tmp = re[l];\n      re[l] = re[m];\n      re[m] = tmp;\n      tmp = im[l];\n      im[l] = im[m];\n      im[m] = tmp;\n    }\n  }\n  // butterfly operation\n  for (let k = 1; k < _n; k <<= 1) {\n    h = 0;\n    d = _n / (k << 1);\n    for (let j = 0; j < k; j++) {\n      wr = _cstb[h + n4];\n      wi = inv * _cstb[h];\n      for (let i = j; i < _n; i += k << 1) {\n        ik = i + k;\n        xr = wr * re[ik] + wi * im[ik];\n        xi = wr * im[ik] - wi * re[ik];\n        re[ik] = re[i] - xr;\n        re[i] += xr;\n        im[ik] = im[i] - xi;\n        im[i] += xi;\n      }\n      h += d;\n    }\n  }\n}\n\n// initialize the array (supports TypedArray)\nfunction _initArray() {\n  if (typeof Uint32Array !== \"undefined\") {\n    _bitrev = new Uint32Array(_n);\n  } else {\n    _bitrev = [];\n  }\n  if (typeof Float64Array !== \"undefined\") {\n    _cstb = new Float64Array(_n * 1.25);\n  } else {\n    _cstb = [];\n  }\n}\n\n//function _paddingZero() {\n//    // TODO\n//}\n\nfunction _makeBitReversalTable() {\n  let i = 0;\n  let j = 0;\n  let k = 0;\n  _bitrev[0] = 0;\n  while (++i < _n) {\n    k = _n >> 1;\n    while (k <= j) {\n      j -= k;\n      k >>= 1;\n    }\n    j += k;\n    _bitrev[i] = j;\n  }\n}\n\n// makes trigonometric function table\nfunction _makeCosSinTable() {\n  let n2 = _n >> 1;\n  let n4 = _n >> 2;\n  let n8 = _n >> 3;\n  let n2p4 = n2 + n4;\n  let t = Math.sin(Math.PI / _n);\n  let dc = 2 * t * t;\n  let ds = Math.sqrt(dc * (2 - dc));\n  let c = (_cstb[n4] = 1);\n  let s = (_cstb[0] = 0);\n  t = 2 * dc;\n  for (let i = 1; i < n8; i++) {\n    c -= dc;\n    dc += t * c;\n    s += ds;\n    ds -= t * s;\n    _cstb[i] = s;\n    _cstb[n4 - i] = c;\n  }\n  if (n8 !== 0) {\n    _cstb[n8] = Math.sqrt(0.5);\n  }\n  for (let j = 0; j < n4; j++) {\n    _cstb[n2 - j] = _cstb[j];\n  }\n  for (let k = 0; k < n2p4; k++) {\n    _cstb[k + n2] = -_cstb[k];\n  }\n}\n\nconst FFT = {\n  init,\n  fft1d,\n  ifft1d,\n  fft2d,\n  ifft2d,\n  fft: fft1d,\n  ifft: ifft1d,\n  bt: bt1d\n};\n\nexport default FFT;\n","import FFT from \"./fftlib.js\";\r\n\r\nclass MljsWebFftWrapperJavascript {\r\n  constructor(size) {\r\n    this.size = size;\r\n    this.FFT_mljs = FFT;\r\n    this.FFT_mljs.init(size);\r\n  }\r\n\r\n  fft(inputArr) {\r\n    const input_real = new Float32Array(this.size);\r\n    const input_imag = new Float32Array(this.size);\r\n    const outputArr = new Float32Array(2 * this.size);\r\n\r\n    for (var i = 0; i < this.size; ++i) {\r\n      input_real[i] = inputArr[i * 2];\r\n      input_imag[i] = inputArr[i * 2 + 1];\r\n    }\r\n\r\n    this.FFT_mljs.fft(input_real, input_imag); // performs fft in-place\r\n\r\n    for (var i = 0; i < this.size; ++i) {\r\n      outputArr[i * 2] = input_real[i];\r\n      outputArr[i * 2 + 1] = input_imag[i];\r\n    }\r\n    return outputArr;\r\n  }\r\n}\r\n\r\nexport default MljsWebFftWrapperJavascript;\r\n","// The following SIMD checkers were taken from 'wasm-feature-detect' NPM package:\nasync function relaxedSimd() {\n  return await WebAssembly.validate(\n    new Uint8Array([\n      0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 15,\n      1, 13, 0, 65, 1, 253, 15, 65, 2, 253, 15, 253, 128, 2, 11,\n    ]),\n  );\n}\n\nasync function simd() {\n  return await WebAssembly.validate(\n    new Uint8Array([\n      0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 10,\n      1, 8, 0, 65, 0, 253, 15, 253, 98, 11,\n    ]),\n  );\n}\n\n// Define the async function to check for Wasm and SIMD support\nasync function checkBrowserCapabilities() {\n  let browserName = \"Other\";\n  let browserVersion = \"Unknown\";\n  let osName = \"Other\";\n  let osVersion = \"Unknown\";\n  let uad = navigator.userAgentData;\n  let ua = navigator.userAgent;\n\n  // Check if Edge, Chrome, or Opera (uses User Agent Data API)\n  try {\n    if (uad) {\n      const values = await uad.getHighEntropyValues([\n        \"architecture\",\n        \"model\",\n        \"platform\",\n        \"platformVersion\",\n        \"uaFullVersion\",\n      ]);\n\n      const brandInfo = uad.brands.find((brand) =>\n        [\"Microsoft Edge\", \"Google Chrome\", \"Opera\"].includes(brand.brand),\n      );\n      browserName = brandInfo ? brandInfo.brand : \"Other\";\n      browserVersion = brandInfo ? `v${brandInfo.version}` : \"Unknown\";\n      osName = values.platform ? values.platform : \"Other\";\n      osVersion = values.platformVersion\n        ? `v${values.platformVersion}`\n        : \"Unknown\";\n    }\n\n    // user agent string parsing for mobile and firefox, safari\n    // other browsers included in case mobile\n    if (browserName === \"Other\" || osName === \"Other\") {\n      const uaArr = ua.split(\" \");\n      const uaBrowser = uaArr[uaArr.length - 1];\n      const isFirefox = /Firefox/.test(uaBrowser);\n      // CriOS is Chrome for iOS and Chrome is Chrome for Android\n      const isSafari =\n        /Safari/.test(uaBrowser) &&\n        !/CriOS/.test(uaBrowser) &&\n        !/Chrome/.test(uaBrowser);\n      const isChrome = /CriOS/.test(uaBrowser) || /Chrome/.test(uaBrowser);\n      const isEdge = /Edg/.test(uaBrowser);\n      const isOpera = /OPR/.test(uaBrowser);\n\n      const browsers = [\n        {\n          name: \"Mozilla Firefox\",\n          regex: /Firefox\\/(\\d+\\.\\d+)/,\n          flag: isFirefox,\n        },\n        { name: \"Safari\", regex: /Version\\/(\\d+\\.\\d+)/, flag: isSafari },\n        {\n          name: \"Google Chrome\",\n          regex: /CriOS|Chrome\\/(\\d+\\.\\d+)/,\n          flag: isChrome,\n        },\n        { name: \"Microsoft Edge\", regex: /Edg\\/(\\d+\\.\\d+)/, flag: isEdge },\n        { name: \"Opera\", regex: /OPR\\/(\\d+\\.\\d+)/, flag: isOpera },\n      ];\n\n      for (const browser of browsers) {\n        if (browser.flag) {\n          browserName = browser.name;\n          const versionMatch = uaBrowser.match(browser.regex);\n          browserVersion = versionMatch ? versionMatch[1] : \"Unknown\";\n          break;\n        }\n      }\n\n      const osMatch = ua.match(/\\(([^)]+)\\)/);\n      const osDetails = osMatch ? osMatch[1].split(\"; \") : [];\n      console.log(osMatch);\n      console.log(osDetails);\n\n      const windowsVersionMap = {\n        \"10.0\": \"10\",\n        \"6.3\": \"8.1\",\n        \"6.2\": \"8\",\n        \"6.1\": \"7\",\n        \"6.0\": \"Vista\",\n        \"5.2\": \"XP 64-bit\",\n        \"5.1\": \"XP\",\n        \"5.0\": \"2000\",\n      };\n\n      const osInfo = [\n        {\n          name: \"Windows\",\n          regex: /Windows NT/,\n          transform: (s) => windowsVersionMap[s.split(\" \")[2]],\n          index: 0,\n        },\n        {\n          name: \"Mac OS X\",\n          regex: /Mac OS X/,\n          transform: (s) => s.replace(\"_\", \".\").split(\" \")[3],\n          index: 0,\n        },\n        {\n          name: \"Linux\",\n          regex: /Linux/,\n          transform: () => \"Unknown\", // Precise Linux version can be difficult to determine\n          index: 0,\n        },\n        {\n          name: \"Android\",\n          regex: /Android/,\n          transform: (s) => s.split(\" \")[1],\n          index: 0,\n        },\n        {\n          name: \"iOS\",\n          regex: /iPhone/,\n          transform: (s) => s.split(\" \")[1].replace(\"_\", \".\"),\n          index: 0,\n        },\n      ];\n\n      for (const os of osInfo) {\n        if (os.regex.test(osDetails[0])) {\n          osName = os.name;\n          console.log(`osDetails: ${osDetails}`);\n          osVersion = os.transform\n            ? os.transform(osDetails[1])\n            : os.versionMap[osDetails[1].split(\" \")[os.index]];\n          break;\n        }\n      }\n    }\n  } catch (error) {\n    console.error(\"Could not retrieve user agent data\", error);\n  }\n  return {\n    browserName: browserName,\n    browserVersion: browserVersion,\n    osName: osName,\n    osVersion: osVersion,\n    wasm: typeof WebAssembly === \"object\",\n    relaxedSimd: await relaxedSimd(),\n    simd: await simd(),\n  };\n}\n\n// Export the function\nexport default checkBrowserCapabilities;\n","\nvar KissFFTModule = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmExports;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)\"}function instantiateSync(file,info){var module;var binary=getBinarySync(file);module=new WebAssembly.Module(binary);var instance=new WebAssembly.Instance(module,info);return[instance,module]}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;wasmExports=exports;wasmMemory=wasmExports[\"b\"];updateMemoryViews();wasmTable=wasmExports[\"i\"];addOnInit(wasmExports[\"c\"]);removeRunDependency(\"wasm-instantiate\");return exports}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}var result=instantiateSync(wasmBinaryFile,info);return receiveInstance(result[0])}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var abortOnCannotGrowMemory=requestedSize=>{abort(\"OOM\")};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;abortOnCannotGrowMemory(requestedSize)};function getCFunc(ident){var func=Module[\"_\"+ident];return func}var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var ccall=function(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var cwrap=function(ident,returnType,argTypes,opts){var numericArgs=!argTypes||argTypes.every(type=>type===\"number\"||type===\"boolean\");var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}};var wasmImports={a:_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=asm[\"c\"];var _kiss_fft_free=Module[\"_kiss_fft_free\"]=asm[\"d\"];var _free=Module[\"_free\"]=asm[\"e\"];var _kiss_fft_alloc=Module[\"_kiss_fft_alloc\"]=asm[\"f\"];var _malloc=Module[\"_malloc\"]=asm[\"g\"];var _kiss_fft=Module[\"_kiss_fft\"]=asm[\"h\"];var ___errno_location=asm[\"__errno_location\"];var stackSave=asm[\"j\"];var stackRestore=asm[\"k\"];var stackAlloc=asm[\"l\"];function intArrayFromBase64(s){try{var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg\n}\n\n);\n})();\nexport default KissFFTModule;","import KissFFTModule from \"./KissFFT.mjs\";\n\n(\"use strict\");\n\nvar kissFFTModule = KissFFTModule({});\n\nvar kiss_fft_alloc = kissFFTModule.cwrap(\"kiss_fft_alloc\", \"number\", [\n  \"number\",\n  \"number\",\n  \"number\",\n  \"number\",\n]);\n\nvar kiss_fft = kissFFTModule.cwrap(\"kiss_fft\", \"void\", [\n  \"number\",\n  \"number\",\n  \"number\",\n]);\n\nvar kiss_fft_free = kissFFTModule.cwrap(\"kiss_fft_free\", \"void\", [\"number\"]);\n\nclass KissFftModifiedWrapperWasm {\n  constructor(size) {\n    this.size = size;\n    this.fcfg = kiss_fft_alloc(size, false);\n    this.icfg = kiss_fft_alloc(size, true);\n\n    this.inptr = kissFFTModule._malloc(size * 8 + size * 8);\n\n    this.cin = new Float32Array(\n      kissFFTModule.HEAPU8.buffer,\n      this.inptr,\n      size * 2,\n    );\n  }\n\n  fft = function (inputArray) {\n    // TODO: figure out how to move this into the constructor without breaking things (unit tests will catch it)\n    const outptr = kissFFTModule._malloc(this.size * 8);\n\n    const cout = new Float32Array(\n      kissFFTModule.HEAPU8.buffer,\n      outptr,\n      this.size * 2,\n    );\n\n    this.cin.set(inputArray);\n\n    kiss_fft(this.fcfg, this.inptr, outptr);\n\n    // we need to free the memory of outptr before we return, so we need this too\n    let outputArray = new Float32Array(this.size * 2);\n    outputArray.set(cout);\n\n    kissFFTModule._free(outptr);\n\n    return outputArray;\n  };\n\n  dispose() {\n    kiss_fft_free(this.fcfg);\n    kiss_fft_free(this.icfg);\n    kissFFTModule._free(this.inptr);\n  }\n}\n\nexport default KissFftModifiedWrapperWasm;\n","\"use strict\";\n\n/* Modification Notes\n- Removing the inv part increased it by 3% or so\n- Simplifying transform hurt because i was repeating the same math\n- getting rid of the wrapper imrpoved it by like 1%\n*/\n\nfunction IndutnyModifiedFftWrapperJavascript(size) {\n  this.size = size;\n\n  this._csize = size << 1;\n\n  var table = new Array(this.size * 2);\n  for (var i = 0; i < table.length; i += 2) {\n    const angle = (Math.PI * i) / this.size;\n    table[i] = Math.cos(angle);\n    table[i + 1] = -Math.sin(angle);\n  }\n  this.table = table;\n\n  // Find size's power of two\n  var power = 0;\n  for (var t = 1; this.size > t; t <<= 1) power++;\n\n  // Calculate initial step's width, either 4 or 8 depending on the fftsize\n  this._width = power % 2 === 0 ? power - 1 : power;\n\n  // Pre-compute bit-reversal patterns\n  this._bitrev = new Array(1 << this._width);\n  for (var j = 0; j < this._bitrev.length; j++) {\n    this._bitrev[j] = 0;\n    for (var shift = 0; shift < this._width; shift += 2) {\n      var revShift = this._width - shift - 2;\n      this._bitrev[j] |= ((j >>> shift) & 3) << revShift;\n    }\n  }\n\n  this._data = null;\n}\n\n// FFT\nIndutnyModifiedFftWrapperJavascript.prototype.fft = function fft(data) {\n  this._data = data;\n  this._out = new Float32Array(2 * this.size);\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var step = 1 << this._width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  // len is either 4 or 8, and both are used for the common fft sizes\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform2(outOff, off, step);\n    }\n  } else {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform4(outOff, off, step);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var quarterLen = len >>> 2;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      // Full case\n      var limit = outOff + quarterLen;\n      for (var i = outOff, k = 0; i < limit; i += 2, k += step) {\n        const A = i;\n        const B = A + quarterLen;\n        const C = B + quarterLen;\n        const D = C + quarterLen;\n\n        // Original values\n        const Ar = this._out[A];\n        const Ai = this._out[A + 1];\n        const Br = this._out[B];\n        const Bi = this._out[B + 1];\n        const Cr = this._out[C];\n        const Ci = this._out[C + 1];\n        const Dr = this._out[D];\n        const Di = this._out[D + 1];\n\n        // Middle values\n        const MAr = Ar;\n        const MAi = Ai;\n\n        const tableBr = this.table[k];\n        const tableBi = this.table[k + 1];\n        const MBr = Br * tableBr - Bi * tableBi;\n        const MBi = Br * tableBi + Bi * tableBr;\n\n        const tableCr = this.table[2 * k];\n        const tableCi = this.table[2 * k + 1];\n        const MCr = Cr * tableCr - Ci * tableCi;\n        const MCi = Cr * tableCi + Ci * tableCr;\n\n        const tableDr = this.table[3 * k];\n        const tableDi = this.table[3 * k + 1];\n        const MDr = Dr * tableDr - Di * tableDi;\n        const MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        const T0r = MAr + MCr;\n        const T0i = MAi + MCi;\n        const T1r = MAr - MCr;\n        const T1i = MAi - MCi;\n        const T2r = MBr + MDr;\n        const T2i = MBi + MDi;\n        const T3r = MBr - MDr;\n        const T3i = MBi - MDi;\n\n        this._out[A] = T0r + T2r;\n        this._out[A + 1] = T0i + T2i;\n        this._out[B] = T1r + T3i;\n        this._out[B + 1] = T1i - T3r;\n        this._out[C] = T0r - T2r;\n        this._out[C + 1] = T0i - T2i;\n        this._out[D] = T1r - T3i;\n        this._out[D + 1] = T1i + T3r;\n      }\n    }\n  }\n\n  return this._out;\n};\n\n// radix-2 (called for len=4)\nIndutnyModifiedFftWrapperJavascript.prototype._singleTransform2 =\n  function _singleTransform2(outOff, off, step) {\n    const evenR = this._data[off];\n    const evenI = this._data[off + 1];\n    const oddR = this._data[off + step];\n    const oddI = this._data[off + step + 1];\n\n    this._out[outOff] = evenR + oddR;\n    this._out[outOff + 1] = evenI + oddI;\n    this._out[outOff + 2] = evenR - oddR;\n    this._out[outOff + 3] = evenI - oddI;\n  };\n\n// radix-4 (called for len=8)\nIndutnyModifiedFftWrapperJavascript.prototype._singleTransform4 =\n  function _singleTransform4(outOff, off, step) {\n    const step2 = step * 2;\n    const step3 = step * 3;\n\n    const Ar = this._data[off];\n    const Ai = this._data[off + 1];\n    const Br = this._data[off + step];\n    const Bi = this._data[off + step + 1];\n    const Cr = this._data[off + step2];\n    const Ci = this._data[off + step2 + 1];\n    const Dr = this._data[off + step3];\n    const Di = this._data[off + step3 + 1];\n\n    const T0r = Ar + Cr;\n    const T0i = Ai + Ci;\n    const T1r = Ar - Cr;\n    const T1i = Ai - Ci;\n    const T2r = Br + Dr;\n    const T2i = Bi + Di;\n    const T3r = Br - Dr;\n    const T3i = Bi - Di;\n\n    this._out[outOff] = T0r + T2r;\n    this._out[outOff + 1] = T0i + T2i;\n    this._out[outOff + 2] = T1r + T3i;\n    this._out[outOff + 3] = T1i - T3r;\n    this._out[outOff + 4] = T0r - T2r;\n    this._out[outOff + 5] = T0i - T2i;\n    this._out[outOff + 6] = T1r - T3i;\n    this._out[outOff + 7] = T1i + T3r;\n  };\n\nexport default IndutnyModifiedFftWrapperJavascript;\n","import KissFftWrapperWasm from \"./kissfft/webfftWrapper.js\";\nimport IndutnyFftWrapperJavascript from \"./indutny/webfftWrapper.js\";\n//import DntjWebFftWrapperJavascript from \"./dntj/webfftWrapper.js\";\nimport CrossFftWrapperWasm from \"./cross/webfftWrapper.js\";\nimport NayukiFftWrapperJavascript from \"./nayuki/webfftWrapper.js\";\nimport NayukiWasmFftWrapperWasm from \"./nayukic/webfftWrapper.js\";\nimport NockertFftWrapperJavascript from \"./nockert/webfftWrapper.js\";\nimport MljsWebFftWrapperJavascript from \"./mljs/webfftWrapper.js\";\n//import ViljaFftWrapperWasm from \"./kissfftviljaNOTFINISHED/webfftWrapper.js\";\nimport checkBrowserCapabilities from \"./utils/checkCapabilities.js\";\nimport KissFftModifiedWrapperWasm from \"./kissfftmodified/webfftWrapper.js\";\nimport IndutnyModifiedFftWrapperJavascript from \"./indutnymodified/fft.js\";\n\nconst validSizes = [\n  4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 16384,\n  32768, 65536, 131072,\n];\n\nclass webfft {\n  constructor(size = 128, subLibrary = \"indutnyJavascript\", useProfile = true) {\n    if (!validSizes.includes(size)) {\n      throw new Error(\"Size must be a power of 2 between 4 and 131072\");\n    }\n    this.size = size;\n    this.outputArr = new Float32Array(2 * size);\n    this.subLibrary = subLibrary;\n    this.fftLibrary = undefined;\n    const profile = this.getCurrentProfile();\n    if (profile && useProfile) {\n      this.setSubLibrary(profile.fastestSubLibrary);\n    } else {\n      this.setSubLibrary(subLibrary);\n    }\n  }\n\n  availableSubLibraries() {\n    return [\n      \"kissWasm\",\n      \"indutnyModifiedJavascript\",\n      \"indutnyJavascript\",\n      \"crossWasm\",\n      \"mljsJavascript\",\n      \"nockertJavascript\",\n      \"nayuki3Wasm\",\n      \"nayukiJavascript\",\n      //\"dntjJavascript\", // need to figure out the precise scale factor before we can use this one, mainly due to unit tests\n      \"kissfftmodifiedWasm\", // currently doesnt perform any better\n      //\"viljaWasm\"\n    ];\n  }\n\n  // A subset of the libraries known to be quickest, and removing ones that are too similar to others\n  availableSubLibrariesQuick() {\n    return [\"kissWasm\", \"indutnyModifiedJavascript\"];\n  }\n\n  getCurrentProfile() {\n    // check if local storage is available\n    if (typeof localStorage === \"undefined\") {\n      return undefined;\n    }\n    if (!localStorage.getItem(\"webfftProfile\")) {\n      return undefined; // No profile\n    }\n    return JSON.parse(localStorage.getItem(\"webfftProfile\"));\n  }\n\n  setSubLibrary(subLibrary) {\n    switch (subLibrary) {\n      case \"nayukiJavascript\":\n        this.fftLibrary = new NayukiFftWrapperJavascript(this.size);\n        break;\n      case \"nayuki3Wasm\":\n        this.fftLibrary = new NayukiWasmFftWrapperWasm(this.size);\n        break;\n      case \"kissWasm\":\n        this.fftLibrary = new KissFftWrapperWasm(this.size);\n        break;\n      case \"crossWasm\":\n        this.fftLibrary = new CrossFftWrapperWasm(this.size);\n        if (this.size > 16384)\n          this.fftLibrary = new IndutnyFftWrapperJavascript(this.size); // Cross throws \"memory access out of bounds\" for large sizes\\\n        break;\n      case \"nockertJavascript\":\n        this.fftLibrary = new NockertFftWrapperJavascript(this.size);\n        break;\n      //case \"dntjJavascript\":\n      //  this.fftLibrary = new DntjWebFftWrapperJavascript(this.size);\n      //  break;\n      case \"indutnyJavascript\":\n        this.fftLibrary = new IndutnyFftWrapperJavascript(this.size);\n        break;\n      case \"mljsJavascript\":\n        this.fftLibrary = new MljsWebFftWrapperJavascript(this.size);\n        break;\n      case \"kissfftmodifiedWasm\":\n        this.fftLibrary = new KissFftModifiedWrapperWasm(this.size);\n        break;\n      //case \"viljaWasm\":\n      //  this.fftLibrary = new ViljaFftWrapperWasm(this.size);\n      case \"indutnyModifiedJavascript\":\n        this.fftLibrary = new IndutnyModifiedFftWrapperJavascript(this.size);\n        break;\n      default:\n        //this.fftLibrary = new IndutnyFftWrapperJavascript(this.size);\n        throw new Error(\"Invalid sublibrary\");\n    }\n  }\n\n  fft(inputArr) {\n    if (inputArr.length !== 2 * this.size) {\n      throw new Error(\"Input array length must be == 2 * size\");\n    }\n    this.outputArr = this.fftLibrary.fft(inputArr);\n    return this.outputArr;\n  }\n\n  // convinience function for people who want to use real-valued input.\n  //   note that you still have to give it a size that is 2x your real-valued input length!!\n  //   it doesn't actually speed it up by 2x\n  //   output is complex but the lenght of inputArr because the negative freqs are removed\n  fftr(inputArr) {\n    var { outputArr, fftLibrary, size } = this;\n    if (inputArr.length !== size) {\n      throw new Error(\"Input array length must be == size\");\n    }\n    const inputArrComplex = new Float32Array(2 * size);\n    inputArrComplex.fill(0);\n    for (let i = 0; i < size; i++) {\n      inputArrComplex[2 * i] = inputArr[i];\n    }\n    outputArr = fftLibrary.fft(inputArrComplex);\n    return outputArr.slice(size, size * 2);\n  }\n\n  // takes in an array of arrays each of length 2*size.  the outter array length must also be a power of two.  only supports complex\n  fft2d(inputArray) {\n    const innerLen = inputArray[0].length / 2;\n    const outterLen = inputArray.length;\n\n    if (innerLen !== this.size) {\n      throw new Error(\"Inner array length must be == 2 * size\");\n    }\n    if (!validSizes.includes(outterLen)) {\n      throw new Error(\n        \"Outter array length must be a power of 2 between 4 and 131072\",\n      );\n    }\n\n    let intermediateArray = [];\n    for (let i = 0; i < outterLen; i++) {\n      this.outputArr = this.fft(inputArray[i]);\n      intermediateArray.push(this.outputArr);\n    }\n\n    // change the sublibs fftsize to the outter\n    this.dispose();\n    this.size = outterLen;\n    this.setSubLibrary(this.subLibrary); // this should reinitialize the sublib with the new size\n\n    // normally at these point we would transpose the 2d array, but with javascript its easier to just incorporate it into the next step when we pull elements\n    let finalArray = [];\n    for (let i = 0; i < innerLen; i++) {\n      const newArray = new Float32Array(2 * outterLen);\n      newArray.fill(0);\n      for (let j = 0; j < outterLen; j++) {\n        newArray[2 * j] = intermediateArray[j][2 * i];\n        newArray[2 * j + 1] = intermediateArray[j][2 * i + 1];\n      }\n      let temparray = new Float32Array(2 * outterLen);\n      temparray = this.fft(newArray);\n      finalArray.push(temparray);\n    }\n\n    // Now do a final transpose\n    let outputArray = [];\n    for (let i = 0; i < outterLen; i++) {\n      let newArray = new Float32Array(2 * innerLen);\n      for (let j = 0; j < innerLen; j++) {\n        newArray[2 * j] = finalArray[j][2 * i];\n        newArray[2 * j + 1] = finalArray[j][2 * i + 1];\n      }\n      outputArray.push(newArray);\n    }\n\n    // change back to original size\n    this.dispose();\n    this.size = innerLen;\n    this.setSubLibrary(this.subLibrary); // this should reinitialize the sublib to the original size\n\n    return outputArray;\n  }\n\n  profile(duration = 1, refresh = true, quick = false) {\n    if (!refresh && this.getCurrentProfile()) {\n      return this.getCurrentProfile();\n    }\n    const totalStart = performance.now();\n    let subLibraries;\n    if (quick) {\n      subLibraries = this.availableSubLibrariesQuick();\n    } else {\n      subLibraries = this.availableSubLibraries();\n    }\n    let ffsPerSecond = [];\n    const secondsPerRun = duration / subLibraries.length / 2; // split in half because of warmup\n    for (let i = 0; i < subLibraries.length; i++) {\n      this.setSubLibrary(subLibraries[i]);\n\n      // Create input array\n      const ci = new Float32Array(2 * this.size);\n      for (let j = 0; j < this.size; j++) {\n        ci[2 * j] = Math.random() - 0.5;\n        ci[2 * j + 1] = Math.random() - 0.5;\n      }\n\n      // Warmup\n      let start = performance.now();\n      while ((performance.now() - start) / 1e3 < secondsPerRun) {\n        const co = this.fft(ci);\n      }\n\n      // Benchmark\n      start = performance.now();\n      let numFfts = 0;\n      while ((performance.now() - start) / 1e3 < secondsPerRun) {\n        const co = this.fft(ci);\n        numFfts++;\n      }\n      ffsPerSecond.push((1e3 * numFfts) / (performance.now() - start));\n\n      this.dispose();\n    }\n    const totalElapsed = (performance.now() - totalStart) / 1e3;\n\n    // Update current FFT method\n    let argmax = ffsPerSecond.indexOf(Math.max(...ffsPerSecond));\n\n    const profileObj = {\n      fftsPerSecond: ffsPerSecond,\n      subLibraries: subLibraries,\n      totalElapsed: totalElapsed,\n      fastestSubLibrary: subLibraries[argmax],\n    };\n\n    console.log(\"Setting sublibrary to\", profileObj.fastestSubLibrary);\n    this.setSubLibrary(profileObj.fastestSubLibrary);\n    if (typeof localStorage !== \"undefined\") {\n      localStorage.setItem(\"webfftProfile\", JSON.stringify(profileObj));\n    }\n    return profileObj;\n  }\n\n  async checkBrowserCapabilities() {\n    return await checkBrowserCapabilities();\n  }\n\n  dispose() {\n    if (this.fftLibrary && this.fftLibrary.dispose !== undefined) {\n      this.fftLibrary.dispose();\n    }\n  }\n}\n\nexport default webfft;\n","// 時間領域の特徴量\nexport {\n  getPeaks,\n  getRMS,\n  getZeroCrossing,\n  getWaveform,\n  getPeak,\n  getPeakAmplitude\n} from './time.js';\nexport type {\n  PeaksOptions,\n  Peak,\n  PeaksResult,\n  WaveformOptions,\n  WaveformPoint,\n  WaveformResult\n} from './time.js';\n\n// 周波数領域の特徴量\nexport { getFFT, getSpectrum } from './frequency.js';\nexport type {\n  FFTOptions,\n  SpectrumOptions,\n  FFTAnalysisResult,\n  SpectrumAnalysisResult,\n  SpectrogramData\n} from './frequency.js';\n\n// スペクトル特徴量\nexport { getSpectralFeatures, getTimeVaryingSpectralFeatures } from './spectral.js';\nexport type {\n  SpectralFeaturesOptions,\n  SpectralFeaturesResult,\n  TimeVaryingSpectralOptions,\n  TimeVaryingSpectralResult\n} from './spectral.js';\n\n// エネルギー解析\nexport { getEnergy } from './energy.js';\nexport type { EnergyOptions, EnergyResult } from './energy.js';\n\n// ダイナミクス解析\nexport { getCrestFactor } from './dynamics.js';\nexport type { CrestFactorOptions, CrestFactorResult } from './dynamics.js';\n\n// ステレオ解析\nexport { getStereoAnalysis, getTimeVaryingStereoAnalysis } from './stereo.js';\nexport type { StereoAnalysisOptions, StereoAnalysisResult } from './stereo.js';\n\n// VAD（音声区間検出）\nexport { getVAD } from './vad.js';\nexport type { VADOptions, VADSegment, VADResult } from './vad.js';\n\n// LUFS（ラウドネス測定）\nexport { getLUFS } from './loudness.js';\nexport type { LUFSOptions, LUFSResult } from './loudness.js';\n","/**\n * audio-inspect ライブラリの型定義\n */\n\nimport type { FFTProviderType } from './core/fft-provider.js';\n\n/**\n * 音声ソースの型定義\n */\nexport type AudioSource =\n  | ArrayBuffer\n  | Blob\n  | File\n  | URL\n  | string // URLパス\n  | MediaStream\n  | AudioBuffer\n  | AudioData;\n\n/**\n * 音声データの構造\n */\nexport interface AudioData {\n  /** サンプルレート（Hz） */\n  sampleRate: number;\n  /** チャンネルごとのオーディオデータ */\n  channelData: Float32Array[];\n  /** 音声の長さ（秒） */\n  duration: number;\n  /** チャンネル数 */\n  numberOfChannels: number;\n  /** サンプル数 */\n  length: number;\n}\n\n/**\n * 特徴抽出関数の型\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type Feature<T> = (audio: AudioData, ...args: any[]) => T | Promise<T>;\n\n/**\n * ロード時のオプション\n */\nexport interface LoadOptions {\n  /** リサンプリング対象のサンプルレート */\n  sampleRate?: number;\n  /** チャンネル数の指定 */\n  channels?: number | 'mono';\n  /** 正規化するか */\n  normalize?: boolean;\n  /** 遅延読み込み（大きなファイル用） */\n  lazy?: boolean;\n  /** チャンクサイズ（ストリーミング時） */\n  chunkSize?: number;\n}\n\n/**\n * ストリーミング制御インターフェース\n */\nexport interface StreamController {\n  pause(): void;\n  resume(): void;\n  stop(): void;\n  readonly paused: boolean;\n}\n\n/**\n * ストリーミングオプション\n */\nexport interface StreamOptions {\n  /** バッファサイズ */\n  bufferSize?: number;\n  /** ホップサイズ */\n  hopSize?: number;\n  /** 更新頻度の制限（ミリ秒） */\n  throttle?: number;\n  /** 窓関数の種類 */\n  windowFunction?: WindowFunction;\n  /** AudioInspectProcessorのモジュールURL（フル機能版を使用する場合） */\n  processorModuleUrl?: string;\n}\n\n/**\n * フォールバック機能付きストリーミングオプション\n */\nexport interface StreamOptionsWithFallback extends StreamOptions {\n  /** フォールバック処理を有効にするか */\n  enableFallback?: boolean;\n  /** フォールバック時のハンドラー */\n  fallbackHandler?: (audio: AudioData) => void;\n}\n\n/**\n * 窓関数の種類\n */\nexport type WindowFunction = 'hann' | 'hamming' | 'blackman' | 'rectangular';\n\n/**\n * 振幅測定のオプション\n */\nexport interface AmplitudeOptions {\n  channel?: number;\n  asDB?: boolean;\n  reference?: number; // dB計算の基準値（デフォルト: 1.0 = 0 dBFS）\n}\n\n/**\n * 共通の解析オプション\n */\nexport interface CommonAnalysisOptions {\n  channel?: number;\n}\n\n/**\n * 時間窓パラメータ\n */\nexport interface TimeWindowOptions {\n  windowSizeMs?: number;\n  hopSizeMs?: number;\n}\n\n/**\n * 周波数範囲パラメータ\n */\nexport interface FrequencyRangeOptions {\n  minFrequency?: number;\n  maxFrequency?: number;\n}\n\n/**\n * Nullable型の明示的な定義\n */\nexport type NullableNumber = number | null;\nexport type NullableFloat32Array = Float32Array | null;\n\n/**\n * 結果型（エラー処理用）\n */\nexport type Result<T, E = AudioInspectError> =\n  | { success: true; value: T }\n  | { success: false; error: E };\n\n/**\n * エラーコード\n */\nexport type ErrorCode =\n  | 'INVALID_INPUT'\n  | 'UNSUPPORTED_FORMAT'\n  | 'DECODE_ERROR'\n  | 'NETWORK_ERROR'\n  | 'FFT_PROVIDER_ERROR'\n  | 'PROCESSING_ERROR'\n  | 'INITIALIZATION_FAILED'\n  | 'WORKLET_NOT_SUPPORTED' // AudioWorkletサポートなし\n  | 'MODULE_LOAD_FAILED'; // モジュール読み込み失敗\n\n/**\n * Audio-inspect specific error\n */\nexport class AudioInspectError extends Error {\n  public override readonly name = 'AudioInspectError';\n\n  constructor(\n    public readonly code: ErrorCode,\n    message: string,\n    public override readonly cause?: unknown\n  ) {\n    super(message);\n  }\n}\n\n/**\n * audio-inspect固有のエラーかチェック\n */\nexport function isAudioInspectError(error: unknown): error is AudioInspectError {\n  return error instanceof AudioInspectError;\n}\n\n/**\n * AudioInspectNodeのオプション\n */\nexport interface AudioInspectNodeOptions {\n  /** 使用する解析機能名 */\n  featureName: string;\n  /** 解析機能に渡すオプション */\n  featureOptions?: unknown;\n  /** 解析を実行するための内部バッファサイズ（サンプル数） */\n  bufferSize?: number;\n  /** 次の解析を開始するまでのオフセット（サンプル数） */\n  hopSize?: number;\n  /** 入力として期待するチャンネル数 */\n  inputChannelCount?: number;\n  /** 使用するFFTプロバイダー */\n  provider?: FFTProviderType;\n}\n\n/**\n * AudioWorkletプロセッサーの初期化オプション\n */\nexport interface AudioInspectProcessorOptions {\n  featureName: string;\n  featureOptions?: unknown;\n  bufferSize: number;\n  hopSize: number;\n  inputChannelCount: number;\n  provider?: FFTProviderType;\n}\n\n/**\n * AudioWorklet共通メッセージ型（型安全性向上）\n */\nexport type AudioWorkletMessage =\n  | AnalysisResultMessage\n  | ErrorMessage\n  | UpdateOptionsMessage\n  | ResetMessage\n  | CleanupMessage;\n\n/**\n * 解析結果メッセージ\n */\nexport interface AnalysisResultMessage {\n  type: 'analysisResult';\n  data: unknown;\n  timestamp: number;\n}\n\n/**\n * Error message\n */\nexport interface ErrorMessage {\n  type: 'error';\n  message: string;\n  detail?: unknown;\n}\n\n/**\n * オプション更新メッセージ\n */\nexport interface UpdateOptionsMessage {\n  type: 'updateOptions';\n  payload: Partial<AudioInspectProcessorOptions>;\n}\n\n/**\n * リセットメッセージ\n */\nexport interface ResetMessage {\n  type: 'reset';\n}\n\n/**\n * クリーンアップメッセージ\n */\nexport interface CleanupMessage {\n  type: 'cleanup';\n}\n\n/**\n * AudioInspectNodeのイベントハンドラー\n */\nexport interface AudioInspectNodeEventHandlers {\n  onresult?: (event: { data: unknown; timestamp: number }) => void;\n  onerror?: (event: { message: string; detail?: unknown }) => void;\n}\n\n// Buffer overflow warning message (newly added)\nexport interface BufferOverflowMessage {\n  type: 'bufferOverflow';\n  details: {\n    bufferWritePosition: number;\n    bufferSize: number;\n    timestamp: number;\n  };\n}\n","import { AudioData, AudioInspectError } from '../types.js';\n\n/**\n * Safely get channel data common function\n * @param audio - AudioData object\n * @param channel - Channel number (-1 for average of all channels)\n * @returns Data of the specified channel\n * @throws AudioInspectError if channel is invalid\n */\nexport function getChannelData(audio: AudioData, channel: number): Float32Array {\n  if (channel === -1) {\n    // Calculate average of all channels\n    const averageData = new Float32Array(audio.length);\n    for (let i = 0; i < audio.length; i++) {\n      let sum = 0;\n      for (let ch = 0; ch < audio.numberOfChannels; ch++) {\n        const channelData = audio.channelData[ch];\n        if (!channelData) {\n          throw new AudioInspectError('INVALID_INPUT', `Channel ${ch} data does not exist`);\n        }\n        if (i < channelData.length) {\n          const sample = channelData[i];\n          if (sample !== undefined) {\n            sum += sample;\n          }\n        }\n      }\n      averageData[i] = sum / audio.numberOfChannels;\n    }\n    return averageData;\n  }\n\n  if (channel < 0 || channel >= audio.numberOfChannels) {\n    throw new AudioInspectError(\n      'INVALID_INPUT',\n      `Invalid channel number: ${channel}. Valid range is 0-${audio.numberOfChannels - 1} or -1 (average)`\n    );\n  }\n\n  const channelData = audio.channelData[channel];\n  if (!channelData) {\n    throw new AudioInspectError('INVALID_INPUT', `Channel ${channel} data does not exist`);\n  }\n\n  return channelData;\n}\n\n/**\n * Check if a number is a power of two\n */\nexport function isPowerOfTwo(n: number): boolean {\n  return n > 0 && Number.isInteger(n) && (n & (n - 1)) === 0;\n}\n\n/**\n * Calculate the next power of two\n */\nexport function nextPowerOfTwo(n: number): number {\n  if (!isValidSample(n) || n <= 0) return 1;\n  if (isPowerOfTwo(n)) return n;\n  return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n\n/**\n * Type-safe array access\n */\nexport function safeArrayAccess<T>(array: ArrayLike<T>, index: number, defaultValue: T): T {\n  if (index >= 0 && index < array.length) {\n    return array[index] ?? defaultValue;\n  }\n  return defaultValue;\n}\n\n/**\n * Validate number validity\n */\nexport function isValidSample(value: unknown): value is number {\n  return typeof value === 'number' && !isNaN(value) && isFinite(value);\n}\n\n/**\n * Safe retrieval of sample values\n */\nexport function ensureValidSample(\n  value: number | undefined | null,\n  defaultValue: number = 0\n): number {\n  return isValidSample(value) ? value : defaultValue;\n}\n\n/**\n * Safe allocation of Float32Array\n */\nexport function ensureFloat32Array(\n  data: Float32Array | undefined | null,\n  length: number\n): Float32Array {\n  if (data instanceof Float32Array && data.length === length) {\n    return data;\n  }\n  return new Float32Array(length);\n}\n\n/**\n * Convert amplitude to dB\n */\nexport function amplitudeToDecibels(amplitude: number, reference: number = 1.0): number {\n  const MIN_AMPLITUDE_FOR_DB = 1e-10; // -200 dBFS\n  const SILENCE_DB = -Infinity;\n\n  if (amplitude <= 0 || reference <= 0) {\n    return SILENCE_DB;\n  }\n\n  const ratio = amplitude / reference;\n  return ratio > MIN_AMPLITUDE_FOR_DB ? 20 * Math.log10(ratio) : SILENCE_DB;\n}\n\n/**\n * Convert dB to amplitude\n */\nexport function decibelsToAmplitude(db: number, reference: number = 1.0): number {\n  if (!isFinite(db)) return 0;\n  return reference * Math.pow(10, db / 20);\n}\n","import { AudioData, AmplitudeOptions, AudioInspectError } from '../types.js';\nimport {\n  getChannelData,\n  ensureValidSample,\n  isValidSample,\n  amplitudeToDecibels,\n  safeArrayAccess\n} from '../core/utils.js';\n\n/**\n * ピーク検出のオプション\n */\nexport interface PeaksOptions {\n  /** 抽出するピークの数（デフォルト: 100） */\n  count?: number;\n  /** ピーク検出の閾値（0-1、デフォルト: 0.1） */\n  threshold?: number;\n  /** 解析するチャンネル（デフォルト: 0、-1で全チャンネルの平均） */\n  channel?: number;\n  /** 最小ピーク間距離（サンプル数、デフォルト: サンプルレート/100） */\n  minDistance?: number;\n}\n\n/**\n * ピーク情報\n */\nexport interface Peak {\n  /** ピークの位置（サンプル数） */\n  position: number;\n  /** ピークの時間位置（秒） */\n  time: number;\n  /** ピークの振幅（0-1） */\n  amplitude: number;\n}\n\n/**\n * ピーク検出結果\n */\nexport interface PeaksResult {\n  /** 検出されたピーク */\n  peaks: Peak[];\n  /** 最大振幅 */\n  maxAmplitude: number;\n  /** 平均振幅 */\n  averageAmplitude: number;\n}\n\ninterface PeakCandidate {\n  position: number;\n  amplitude: number;\n  prominence?: number; // ピークの顕著性（オプション）\n}\n\n// より洗練されたピーク検出アルゴリズム\nfunction detectAllInitialPeaks(\n  data: Float32Array,\n  threshold: number,\n  includeProminence: boolean = false\n): PeakCandidate[] {\n  const peaks: PeakCandidate[] = [];\n  const length = data.length;\n\n  if (length < 3) return peaks; // 最低3サンプル必要\n\n  for (let i = 1; i < length - 1; i++) {\n    const current = Math.abs(ensureValidSample(data[i]));\n    const prev = Math.abs(ensureValidSample(data[i - 1]));\n    const next = Math.abs(ensureValidSample(data[i + 1]));\n\n    // ローカルマキシマムかつ閾値を超えているか\n    if (current > prev && current > next && current > threshold) {\n      const peak: PeakCandidate = {\n        position: i,\n        amplitude: current\n      };\n\n      // オプション：ピークの顕著性を計算\n      if (includeProminence) {\n        peak.prominence = calculateProminence(data, i, current);\n      }\n\n      peaks.push(peak);\n    }\n  }\n\n  return peaks;\n}\n\n// ピークの顕著性を計算（オプション機能）\nfunction calculateProminence(data: Float32Array, peakIndex: number, peakValue: number): number {\n  // 左側の最小値を探索\n  let leftMin = peakValue;\n  for (let i = peakIndex - 1; i >= 0; i--) {\n    const value = Math.abs(ensureValidSample(data[i]));\n    if (value > peakValue) break; // より高いピークに到達\n    leftMin = Math.min(leftMin, value);\n  }\n\n  // 右側の最小値を探索\n  let rightMin = peakValue;\n  for (let i = peakIndex + 1; i < data.length; i++) {\n    const value = Math.abs(ensureValidSample(data[i]));\n    if (value > peakValue) break; // より高いピークに到達\n    rightMin = Math.min(rightMin, value);\n  }\n\n  return peakValue - Math.max(leftMin, rightMin);\n}\n\n/**\n * ピーク検出を行う\n */\nexport function getPeaks(audio: AudioData, options: PeaksOptions = {}): PeaksResult {\n  const {\n    count = 100,\n    threshold = 0.1,\n    channel = 0,\n    minDistance = Math.floor(audio.sampleRate / 100) // デフォルト10ms\n  } = options;\n\n  if (count <= 0) {\n    throw new AudioInspectError('INVALID_INPUT', 'ピーク数は正の整数である必要があります');\n  }\n\n  if (threshold < 0 || threshold > 1) {\n    throw new AudioInspectError('INVALID_INPUT', '閾値は0から1の範囲である必要があります');\n  }\n\n  const channelData = getChannelData(audio, channel);\n\n  if (channelData.length === 0) {\n    return {\n      peaks: [],\n      maxAmplitude: 0,\n      averageAmplitude: 0\n    };\n  }\n\n  // 1. すべての初期ピーク候補を検出\n  const allInitialPeaks = detectAllInitialPeaks(channelData, threshold);\n\n  if (allInitialPeaks.length === 0) {\n    return {\n      peaks: [],\n      maxAmplitude: 0,\n      averageAmplitude: 0\n    };\n  }\n\n  // 2. 振幅の降順でソート\n  allInitialPeaks.sort((a, b) => b.amplitude - a.amplitude);\n\n  // 3. 空間的フィルタリング（最小距離制約）\n  const selectedPeaks: Peak[] = [];\n  const occupiedRegions: Array<[number, number]> = []; // [start, end]の配列\n\n  for (const candidate of allInitialPeaks) {\n    if (selectedPeaks.length >= count) break;\n\n    // 占有領域との重複をチェック\n    const candidateStart = candidate.position - minDistance;\n    const candidateEnd = candidate.position + minDistance;\n\n    const hasOverlap = occupiedRegions.some(\n      ([start, end]) => !(candidateEnd < start || candidateStart > end)\n    );\n\n    if (!hasOverlap) {\n      selectedPeaks.push({\n        position: candidate.position,\n        time: candidate.position / audio.sampleRate,\n        amplitude: candidate.amplitude\n      });\n\n      occupiedRegions.push([candidateStart, candidateEnd]);\n    }\n  }\n\n  // 4. 時間順でソート\n  selectedPeaks.sort((a, b) => a.position - b.position);\n\n  // 5. 統計情報の計算（すべての候補から）\n  const maxAmplitude = allInitialPeaks.length > 0 ? (allInitialPeaks[0]?.amplitude ?? 0) : 0;\n  const averageAmplitude =\n    allInitialPeaks.length > 0\n      ? allInitialPeaks.reduce((sum, p) => sum + p.amplitude, 0) / allInitialPeaks.length\n      : 0;\n\n  return {\n    peaks: selectedPeaks,\n    maxAmplitude,\n    averageAmplitude\n  };\n}\n\n// 定数定義\nconst SILENCE_DB = -Infinity;\n\n/**\n * RMS（Root Mean Square）を計算\n */\nexport function getRMS(audio: AudioData, optionsOrChannel: AmplitudeOptions | number = {}): number {\n  const options: Required<AmplitudeOptions> =\n    typeof optionsOrChannel === 'number'\n      ? { channel: optionsOrChannel, asDB: false, reference: 1.0 }\n      : {\n          channel: 0,\n          asDB: false,\n          reference: 1.0,\n          ...optionsOrChannel\n        };\n\n  const channelData = getChannelData(audio, options.channel);\n\n  if (channelData.length === 0) {\n    return options.asDB ? SILENCE_DB : 0;\n  }\n\n  // RMS計算（数値的安定性を考慮）\n  let sumOfSquares = 0;\n  let validSampleCount = 0;\n\n  for (let i = 0; i < channelData.length; i++) {\n    const sample = channelData[i];\n    if (isValidSample(sample)) {\n      sumOfSquares += sample * sample;\n      validSampleCount++;\n    }\n  }\n\n  if (validSampleCount === 0) {\n    return options.asDB ? SILENCE_DB : 0;\n  }\n\n  const rms = Math.sqrt(sumOfSquares / validSampleCount);\n\n  return options.asDB ? amplitudeToDecibels(rms, options.reference) : rms;\n}\n\n/**\n * ピーク振幅を計算\n */\nexport function getPeakAmplitude(audio: AudioData, options: AmplitudeOptions = {}): number {\n  const resolvedOptions: Required<AmplitudeOptions> = {\n    channel: 0,\n    asDB: false,\n    reference: 1.0,\n    ...options\n  };\n\n  const channelData = getChannelData(audio, resolvedOptions.channel);\n\n  if (channelData.length === 0) {\n    return resolvedOptions.asDB ? SILENCE_DB : 0;\n  }\n\n  let peak = 0;\n  for (let i = 0; i < channelData.length; i++) {\n    const sample = channelData[i];\n    if (isValidSample(sample)) {\n      peak = Math.max(peak, Math.abs(sample));\n    }\n  }\n\n  return resolvedOptions.asDB ? amplitudeToDecibels(peak, resolvedOptions.reference) : peak;\n}\n\n// エイリアスとしてgetPeakをエクスポート\nexport { getPeakAmplitude as getPeak };\n\n/**\n * ゼロクロッシング率を計算\n */\nexport function getZeroCrossing(audio: AudioData, channel = 0): number {\n  const channelData = getChannelData(audio, channel);\n\n  if (channelData.length < 2) {\n    return 0;\n  }\n\n  let crossings = 0;\n  for (let i = 1; i < channelData.length; i++) {\n    const prev = ensureValidSample(channelData[i - 1]);\n    const current = ensureValidSample(channelData[i]);\n\n    // 符号が変わった場合はゼロクロッシング\n    if ((prev >= 0 && current < 0) || (prev < 0 && current >= 0)) {\n      crossings++;\n    }\n  }\n\n  return crossings / (channelData.length - 1);\n}\n\n/**\n * 波形データ取得のオプション\n */\nexport interface WaveformOptions {\n  /** 1秒あたりのサンプル数（解像度、デフォルト: 60） */\n  framesPerSecond?: number;\n  /** 解析するチャンネル（デフォルト: 0、-1で全チャンネルの平均） */\n  channel?: number;\n  /** 振幅の計算方法（デフォルト: 'rms'） */\n  method?: 'rms' | 'peak' | 'average';\n}\n\n/**\n * 波形データポイント\n */\nexport interface WaveformPoint {\n  /** 時間位置（秒） */\n  time: number;\n  /** 振幅値（0-1） */\n  amplitude: number; // nullを許容しない設計\n}\n\n/**\n * 波形データ取得結果\n */\nexport interface WaveformResult {\n  /** 波形データポイントの配列 */\n  waveform: WaveformPoint[];\n  /** 最大振幅 */\n  maxAmplitude: number;\n  /** 平均振幅 */\n  averageAmplitude: number;\n  /** フレーム数 */\n  frameCount: number;\n  /** フレームあたりのサンプル数 */\n  samplesPerFrame: number;\n}\n\n/**\n * 時間軸に沿った波形データを取得\n */\nexport function getWaveform(audio: AudioData, options: WaveformOptions = {}): WaveformResult {\n  const { framesPerSecond = 60, channel = 0, method = 'rms' } = options;\n\n  const channelData = getChannelData(audio, channel);\n\n  // 修正2.3: 極端なフレーム数指定時の不具合対応\n  // audio.length が0の場合は frameCount も0にする\n  const desiredFrameCount = Math.ceil(audio.duration * framesPerSecond);\n  const maxPossibleFrameCount = audio.length > 0 ? audio.length : desiredFrameCount > 0 ? 1 : 0;\n  const frameCount = Math.min(desiredFrameCount, maxPossibleFrameCount);\n\n  const samplesPerFrame = frameCount > 0 ? Math.max(1, Math.floor(audio.length / frameCount)) : 0;\n\n  const waveform: WaveformPoint[] = [];\n  let maxAmplitude = 0;\n  let totalAmplitude = 0;\n\n  for (let i = 0; i < frameCount; i++) {\n    const startSample = i * samplesPerFrame;\n    const endSample = Math.min(startSample + samplesPerFrame, channelData.length);\n\n    // フレーム長が0または負の場合の処理\n    if (endSample <= startSample) {\n      // 最後の有効な振幅値を使用、または0\n      const lastAmplitude =\n        waveform.length > 0\n          ? safeArrayAccess(waveform, waveform.length - 1, { time: 0, amplitude: 0 }).amplitude\n          : 0;\n\n      waveform.push({\n        time: (startSample + samplesPerFrame / 2) / audio.sampleRate,\n        amplitude: lastAmplitude\n      });\n      continue;\n    }\n\n    // フレームデータの処理\n    const frameData = channelData.subarray(startSample, endSample); // sliceより効率的\n\n    let amplitude: number;\n    switch (method) {\n      case 'peak':\n        amplitude = calculatePeakAmplitude(frameData);\n        break;\n      case 'average':\n        amplitude = calculateAverageAmplitude(frameData);\n        break;\n      case 'rms':\n      default:\n        amplitude = calculateRMSAmplitude(frameData);\n        break;\n    }\n\n    const time = (startSample + (endSample - startSample) / 2) / audio.sampleRate;\n    waveform.push({ time, amplitude });\n\n    maxAmplitude = Math.max(maxAmplitude, amplitude);\n    totalAmplitude += amplitude;\n  }\n\n  const averageAmplitude = frameCount > 0 ? totalAmplitude / frameCount : 0;\n\n  return {\n    waveform,\n    maxAmplitude,\n    averageAmplitude,\n    frameCount,\n    samplesPerFrame\n  };\n}\n\n/**\n * フレーム内のRMS振幅を計算\n */\nfunction calculateRMSAmplitude(frameData: Float32Array): number {\n  if (frameData.length === 0) return 0;\n\n  let sum = 0;\n  for (let i = 0; i < frameData.length; i++) {\n    const sample = ensureValidSample(frameData[i]);\n    sum += sample * sample;\n  }\n  return Math.sqrt(sum / frameData.length);\n}\n\n/**\n * フレーム内のピーク振幅を計算\n */\nfunction calculatePeakAmplitude(frameData: Float32Array): number {\n  let peak = 0;\n  for (let i = 0; i < frameData.length; i++) {\n    const sample = Math.abs(ensureValidSample(frameData[i]));\n    peak = Math.max(peak, sample);\n  }\n  return peak;\n}\n\n/**\n * フレーム内の平均振幅を計算\n */\nfunction calculateAverageAmplitude(frameData: Float32Array): number {\n  if (frameData.length === 0) return 0;\n\n  let sum = 0;\n  for (let i = 0; i < frameData.length; i++) {\n    sum += Math.abs(ensureValidSample(frameData[i]));\n  }\n  return sum / frameData.length;\n}\n","import { AudioInspectError } from '../types.js';\n\n/**\n * FFTプロバイダーの種類\n */\nexport type FFTProviderType = 'webfft' | 'native' | 'custom';\n\n/**\n * FFT結果\n */\nexport interface FFTResult {\n  /** 複素数結果（インターリーブ形式：実部、虚部、実部、虚部...） */\n  complex: Float32Array;\n  /** 振幅スペクトラム */\n  magnitude: Float32Array;\n  /** 位相スペクトラム */\n  phase: Float32Array;\n  /** 周波数ビン（Hz） */\n  frequencies: Float32Array;\n}\n\n/**\n * FFTプロバイダーのインターフェース\n */\nexport interface IFFTProvider {\n  /** プロバイダー名 */\n  readonly name: string;\n  /** FFTサイズ */\n  readonly size: number;\n  /** サンプルレート */\n  readonly sampleRate: number;\n\n  /**\n   * FFTを実行\n   * @param input - 実数入力データ\n   * @returns FFT結果\n   */\n  fft(input: Float32Array): FFTResult | Promise<FFTResult>;\n\n  /**\n   * リソースを解放\n   */\n  dispose(): void;\n\n  /**\n   * プロファイリングを実行（対応している場合）\n   */\n  profile?(): Promise<void>;\n}\n\n/**\n * FFTプロバイダーの設定\n */\nexport interface FFTProviderConfig {\n  /** プロバイダータイプ */\n  type: FFTProviderType;\n  /** FFTサイズ（2の累乗である必要があります） */\n  fftSize: number;\n  /** サンプルレート */\n  sampleRate: number;\n  /** 自動プロファイリングを有効にするか */\n  enableProfiling?: boolean;\n  /** カスタムプロバイダー（type='custom'の場合） */\n  customProvider?: IFFTProvider;\n}\n\n// WebFFT型定義\ninterface WebFFTInstance {\n  fft(input: Float32Array): Float32Array;\n  profile(): Promise<unknown>;\n  dispose(): void;\n}\n\n/**\n * WebFFTプロバイダーの実装\n */\nclass WebFFTProvider implements IFFTProvider {\n  private fftInstance: WebFFTInstance | null = null;\n  private initializationPromise: Promise<void> | null = null;\n\n  constructor(\n    public readonly size: number,\n    public readonly sampleRate: number,\n    private enableProfiling: boolean = false\n  ) {\n    // コンストラクタで初期化を開始\n    this.initializationPromise = this.initializeWebFFT();\n  }\n\n  get name(): string {\n    return 'WebFFT';\n  }\n\n  /**\n   * 初期化の完了を待つ（外部から呼び出し可能）\n   */\n  async waitForInitialization(): Promise<void> {\n    if (this.initializationPromise) {\n      await this.initializationPromise;\n    }\n  }\n\n  async initializeWebFFT(): Promise<void> {\n    try {\n      // Dynamic import to handle module loading\n      const webfftModule = await import('webfft');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-assignment\n      const WebFFTConstructor = webfftModule.default as any;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.fftInstance = new WebFFTConstructor(this.size) as WebFFTInstance;\n\n      if (this.enableProfiling && this.fftInstance?.profile) {\n        await this.fftInstance.profile();\n      }\n    } catch (error) {\n      throw new AudioInspectError(\n        'UNSUPPORTED_FORMAT',\n        `WebFFTの初期化に失敗しました: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n  }\n\n  async fft(input: Float32Array): Promise<FFTResult> {\n    // 初期化の完了を待つ\n    if (this.initializationPromise) {\n      await this.initializationPromise;\n    }\n\n    if (!this.fftInstance) {\n      throw new AudioInspectError('UNSUPPORTED_FORMAT', 'WebFFT initialization failed');\n    }\n\n    if (input.length !== this.size) {\n      throw new AudioInspectError(\n        'INVALID_INPUT',\n        `入力サイズが不正です。期待値: ${this.size}, 実際: ${input.length}`\n      );\n    }\n\n    // WebFFTは複素数入力（インターリーブ形式）を期待するので、実数を複素数に変換\n    const complexInput = new Float32Array(this.size * 2);\n    for (let i = 0; i < this.size; i++) {\n      complexInput[i * 2] = input[i] || 0; // 実部\n      complexInput[i * 2 + 1] = 0; // 虚部（0で初期化）\n    }\n\n    // FFT実行\n    const complexOutput = this.fftInstance.fft(complexInput);\n\n    // 結果を処理\n    const magnitude = new Float32Array(this.size / 2 + 1); // 正の周波数のみ\n    const phase = new Float32Array(this.size / 2 + 1);\n    const frequencies = new Float32Array(this.size / 2 + 1);\n\n    for (let i = 0; i < magnitude.length; i++) {\n      const real = complexOutput[i * 2] || 0;\n      const imag = complexOutput[i * 2 + 1] || 0;\n\n      magnitude[i] = Math.sqrt(real * real + imag * imag);\n      phase[i] = Math.atan2(imag, real);\n      frequencies[i] = (i * this.sampleRate) / this.size;\n    }\n\n    return {\n      complex: complexOutput,\n      magnitude,\n      phase,\n      frequencies\n    };\n  }\n\n  async profile(): Promise<void> {\n    // 初期化の完了を待つ\n    if (this.initializationPromise) {\n      await this.initializationPromise;\n    }\n\n    if (!this.fftInstance || !this.fftInstance.profile) {\n      throw new AudioInspectError('UNSUPPORTED_FORMAT', 'WebFFTが初期化されていません');\n    }\n\n    await this.fftInstance.profile();\n  }\n\n  dispose(): void {\n    if (this.fftInstance && this.fftInstance.dispose) {\n      this.fftInstance.dispose();\n      this.fftInstance = null;\n    }\n  }\n}\n\n/**\n * 効率的なネイティブFFTプロバイダー（Cooley-Tukey実装）\n */\nclass NativeFFTProvider implements IFFTProvider {\n  private bitReversalTable!: Uint32Array;\n  private twiddleFactorsReal!: Float32Array;\n  private twiddleFactorsImag!: Float32Array;\n\n  constructor(\n    public readonly size: number,\n    public readonly sampleRate: number\n  ) {\n    if (!this.isPowerOfTwo(size)) {\n      throw new AudioInspectError('INVALID_INPUT', 'FFTサイズは2の冪である必要があります');\n    }\n    this.precomputeTables();\n  }\n\n  get name(): string {\n    return 'Native FFT (Cooley-Tukey)';\n  }\n\n  private isPowerOfTwo(n: number): boolean {\n    return n > 0 && (n & (n - 1)) === 0;\n  }\n\n  private precomputeTables(): void {\n    // ビット反転テーブルの事前計算\n    this.bitReversalTable = new Uint32Array(this.size);\n    const bits = Math.log2(this.size);\n    for (let i = 0; i < this.size; i++) {\n      let reversed = 0;\n      for (let j = 0; j < bits; j++) {\n        reversed = (reversed << 1) | ((i >> j) & 1);\n      }\n      this.bitReversalTable[i] = reversed;\n    }\n\n    // Twiddle factorsの事前計算\n    const halfSize = this.size / 2;\n    this.twiddleFactorsReal = new Float32Array(halfSize);\n    this.twiddleFactorsImag = new Float32Array(halfSize);\n    for (let i = 0; i < halfSize; i++) {\n      const angle = (-2 * Math.PI * i) / this.size;\n      this.twiddleFactorsReal[i] = Math.cos(angle);\n      this.twiddleFactorsImag[i] = Math.sin(angle);\n    }\n  }\n\n  fft(input: Float32Array): FFTResult {\n    if (input.length !== this.size) {\n      throw new AudioInspectError(\n        'INVALID_INPUT',\n        `入力サイズが不正です。期待値: ${this.size}, 実際: ${input.length}`\n      );\n    }\n\n    // 複素数配列の初期化（ビット反転順）\n    const real = new Float32Array(this.size);\n    const imag = new Float32Array(this.size);\n\n    for (let i = 0; i < this.size; i++) {\n      const reversedIndex = this.bitReversalTable[i];\n      if (reversedIndex !== undefined) {\n        real[reversedIndex] = input[i] || 0;\n        imag[reversedIndex] = 0;\n      }\n    }\n\n    // Cooley-Tukey FFTアルゴリズム\n    for (let stage = 1; stage < this.size; stage *= 2) {\n      const stageSize = stage * 2;\n      const twiddleStep = this.size / stageSize;\n\n      for (let k = 0; k < this.size; k += stageSize) {\n        for (let j = 0; j < stage; j++) {\n          const twiddleIndex = j * twiddleStep;\n          const wr = this.twiddleFactorsReal[twiddleIndex] || 0;\n          const wi = this.twiddleFactorsImag[twiddleIndex] || 0;\n\n          const evenIndex = k + j;\n          const oddIndex = k + j + stage;\n\n          const evenReal = real[evenIndex] || 0;\n          const evenImag = imag[evenIndex] || 0;\n          const oddReal = real[oddIndex] || 0;\n          const oddImag = imag[oddIndex] || 0;\n\n          const tempReal = oddReal * wr - oddImag * wi;\n          const tempImag = oddReal * wi + oddImag * wr;\n\n          real[evenIndex] = evenReal + tempReal;\n          imag[evenIndex] = evenImag + tempImag;\n          real[oddIndex] = evenReal - tempReal;\n          imag[oddIndex] = evenImag - tempImag;\n        }\n      }\n    }\n\n    // 結果の構築\n    const complex = new Float32Array(this.size * 2);\n    const magnitude = new Float32Array(this.size / 2 + 1);\n    const phase = new Float32Array(this.size / 2 + 1);\n    const frequencies = new Float32Array(this.size / 2 + 1);\n\n    for (let i = 0; i < this.size; i++) {\n      complex[i * 2] = real[i] || 0;\n      complex[i * 2 + 1] = imag[i] || 0;\n\n      if (i <= this.size / 2) {\n        const realPart = real[i] || 0;\n        const imagPart = imag[i] || 0;\n        magnitude[i] = Math.sqrt(realPart * realPart + imagPart * imagPart);\n        phase[i] = Math.atan2(imagPart, realPart);\n        frequencies[i] = (i * this.sampleRate) / this.size;\n      }\n    }\n\n    return { complex, magnitude, phase, frequencies };\n  }\n\n  dispose(): void {\n    // メモリの明示的な解放（必要に応じて）\n  }\n}\n\n/**\n * FFTプロバイダーファクトリー\n */\nexport class FFTProviderFactory {\n  /**\n   * 指定された設定でFFTプロバイダーを作成\n   */\n  static async createProvider(config: FFTProviderConfig): Promise<IFFTProvider> {\n    switch (config.type) {\n      case 'webfft': {\n        const provider = new WebFFTProvider(\n          config.fftSize,\n          config.sampleRate,\n          config.enableProfiling\n        );\n        // 初期化の完了を待つ\n        await provider.waitForInitialization();\n        return provider;\n      }\n\n      case 'native':\n        return new NativeFFTProvider(config.fftSize, config.sampleRate);\n\n      case 'custom':\n        if (!config.customProvider) {\n          throw new AudioInspectError('INVALID_INPUT', 'カスタムプロバイダーが指定されていません');\n        }\n        return config.customProvider;\n\n      default: {\n        const exhaustiveCheck: never = config.type;\n        throw new AudioInspectError(\n          'UNSUPPORTED_FORMAT',\n          `未対応のFFTプロバイダー: ${String(exhaustiveCheck)}`\n        );\n      }\n    }\n  }\n\n  /**\n   * 利用可能なプロバイダーをリスト\n   */\n  static getAvailableProviders(): FFTProviderType[] {\n    return ['webfft', 'native'];\n  }\n}\n","import { AudioData, AudioInspectError } from '../types.js';\nimport { FFTProviderFactory, type FFTProviderType, type FFTResult } from '../core/fft-provider.js';\n\n/**\n * FFT分析のオプション\n */\nexport interface FFTOptions {\n  /** FFTサイズ（デフォルト: 2048、2の累乗である必要があります） */\n  fftSize?: number;\n  /** ウィンドウ関数（デフォルト: 'hann'） */\n  windowFunction?: 'hann' | 'hamming' | 'blackman' | 'none';\n  /** オーバーラップ率（デフォルト: 0.5） */\n  overlap?: number;\n  /** 解析するチャンネル（デフォルト: 0、-1で全チャンネルの平均） */\n  channel?: number;\n  /** FFTプロバイダー（デフォルト: 'webfft'） */\n  provider?: FFTProviderType;\n  /** プロファイリングを有効にする（WebFFTのみ） */\n  enableProfiling?: boolean;\n}\n\n/**\n * スペクトラム解析のオプション\n */\nexport interface SpectrumOptions extends FFTOptions {\n  /** 最小周波数（Hz、デフォルト: 0） */\n  minFrequency?: number;\n  /** 最大周波数（Hz、デフォルト: ナイキスト周波数） */\n  maxFrequency?: number;\n  /** dB表示かどうか（デフォルト: true） */\n  decibels?: boolean;\n  /** 時間フレーム数（スペクトログラム用、デフォルト: 100） */\n  timeFrames?: number;\n}\n\n/**\n * スペクトログラムデータ\n */\nexport interface SpectrogramData {\n  /** 時間軸（秒） */\n  times: Float32Array;\n  /** 周波数軸（Hz） */\n  frequencies: Float32Array;\n  /** 強度データ（時間 x 周波数） */\n  intensities: Float32Array[];\n  /** フレーム数 */\n  timeFrames: number;\n  /** 周波数ビン数 */\n  frequencyBins: number;\n}\n\n/**\n * FFT分析結果\n */\nexport interface FFTAnalysisResult extends FFTResult {\n  /** FFTサイズ */\n  fftSize: number;\n  /** 使用されたウィンドウ関数 */\n  windowFunction: string;\n  /** プロバイダー名 */\n  providerName: string;\n}\n\n/**\n * スペクトラム解析結果\n */\nexport interface SpectrumAnalysisResult {\n  /** 周波数（Hz） */\n  frequencies: Float32Array;\n  /** 強度 */\n  magnitudes: Float32Array;\n  /** dB値（decielsオプションがtrueの場合） */\n  decibels?: Float32Array;\n  /** スペクトログラム（timeFrames > 1の場合） */\n  spectrogram?: SpectrogramData;\n}\n\n/**\n * ウィンドウ関数を適用\n */\nfunction applyWindow(data: Float32Array, windowType: string): Float32Array {\n  const windowed = new Float32Array(data.length);\n  const N = data.length;\n\n  for (let i = 0; i < N; i++) {\n    let windowValue = 1;\n\n    switch (windowType) {\n      case 'hann':\n        windowValue = 0.5 * (1 - Math.cos((2 * Math.PI * i) / (N - 1)));\n        break;\n      case 'hamming':\n        windowValue = 0.54 - 0.46 * Math.cos((2 * Math.PI * i) / (N - 1));\n        break;\n      case 'blackman':\n        windowValue =\n          0.42 -\n          0.5 * Math.cos((2 * Math.PI * i) / (N - 1)) +\n          0.08 * Math.cos((4 * Math.PI * i) / (N - 1));\n        break;\n      case 'none':\n      default:\n        windowValue = 1;\n        break;\n    }\n\n    windowed[i] = (data[i] || 0) * windowValue;\n  }\n\n  return windowed;\n}\n\n/**\n * 指定されたチャンネルのデータを取得\n */\nfunction getChannelData(audio: AudioData, channel: number): Float32Array {\n  if (channel === -1) {\n    // 全チャンネルの平均を計算\n    const averageData = new Float32Array(audio.length);\n    for (let i = 0; i < audio.length; i++) {\n      let sum = 0;\n      for (let ch = 0; ch < audio.numberOfChannels; ch++) {\n        const channelData = audio.channelData[ch];\n        if (channelData && i < channelData.length) {\n          sum += channelData[i] as number;\n        }\n      }\n      averageData[i] = sum / audio.numberOfChannels;\n    }\n    return averageData;\n  }\n\n  if (channel < -1 || channel >= audio.numberOfChannels) {\n    throw new AudioInspectError('INVALID_INPUT', `Invalid channel number: ${channel}`);\n  }\n\n  const channelData = audio.channelData[channel];\n  if (!channelData) {\n    throw new AudioInspectError('INVALID_INPUT', `Channel ${channel} data does not exist`);\n  }\n\n  return channelData;\n}\n\n/**\n * FFT分析を行う\n *\n * @param audio - 音声データ\n * @param options - FFTオプション\n * @returns FFT結果\n */\nexport async function getFFT(\n  audio: AudioData,\n  options: FFTOptions = {}\n): Promise<FFTAnalysisResult> {\n  const {\n    fftSize = 2048,\n    windowFunction = 'hann',\n    channel = 0,\n    provider = 'webfft',\n    enableProfiling = false\n  } = options;\n\n  // チャンネルデータを取得\n  const channelData = getChannelData(audio, channel);\n\n  // FFTサイズが入力より大きい場合、ゼロパディング\n  let inputData: Float32Array;\n  if (channelData.length < fftSize) {\n    inputData = new Float32Array(fftSize);\n    inputData.set(channelData);\n  } else {\n    inputData = channelData.slice(0, fftSize);\n  }\n\n  // ウィンドウ関数を適用\n  const windowedData = applyWindow(inputData, windowFunction);\n\n  // FFTプロバイダーを作成\n  const fftProvider = await FFTProviderFactory.createProvider({\n    type: provider,\n    fftSize,\n    sampleRate: audio.sampleRate,\n    enableProfiling\n  });\n\n  try {\n    // FFTを実行\n    const result = await fftProvider.fft(windowedData);\n\n    return {\n      ...result,\n      fftSize,\n      windowFunction,\n      providerName: fftProvider.name\n    };\n  } finally {\n    // リソースを解放\n    fftProvider.dispose();\n  }\n}\n\n/**\n * スペクトラム解析を行う\n *\n * @param audio - 音声データ\n * @param options - スペクトラムオプション\n * @returns スペクトラム解析結果\n */\nexport async function getSpectrum(\n  audio: AudioData,\n  options: SpectrumOptions = {}\n): Promise<SpectrumAnalysisResult> {\n  const {\n    fftSize = 2048,\n    minFrequency = 0,\n    maxFrequency = audio.sampleRate / 2,\n    decibels = true,\n    timeFrames = 1,\n    overlap = 0.5,\n    ...fftOptions\n  } = options;\n\n  const channelData = getChannelData(audio, options.channel || 0);\n\n  if (timeFrames === 1) {\n    // 単一フレームのスペクトラム解析\n    const fftResult = await getFFT(audio, { ...fftOptions, fftSize });\n\n    // 周波数範囲をフィルタリング\n    const filteredResult = filterFrequencyRange(fftResult, minFrequency, maxFrequency);\n\n    const result: SpectrumAnalysisResult = {\n      frequencies: filteredResult.frequencies,\n      magnitudes: filteredResult.magnitude\n    };\n\n    if (decibels) {\n      result.decibels = magnitudeToDecibels(filteredResult.magnitude);\n    }\n\n    return result;\n  } else {\n    // スペクトログラム解析\n    const spectrogram = await computeSpectrogram(\n      channelData,\n      audio.sampleRate,\n      fftSize,\n      timeFrames,\n      overlap,\n      { ...fftOptions, minFrequency, maxFrequency, decibels }\n    );\n\n    return {\n      frequencies: spectrogram.frequencies,\n      magnitudes: new Float32Array(), // スペクトログラムでは個別のmagnitudesは空\n      spectrogram\n    };\n  }\n}\n\n/**\n * 周波数範囲をフィルタリング\n */\nfunction filterFrequencyRange(fftResult: FFTResult, minFreq: number, maxFreq: number): FFTResult {\n  const { frequencies, magnitude, phase, complex } = fftResult;\n\n  const startIndex = frequencies.findIndex((f) => f >= minFreq);\n  const endIndex = frequencies.findIndex((f) => f > maxFreq);\n  const actualEndIndex = endIndex === -1 ? frequencies.length : endIndex;\n\n  return {\n    frequencies: frequencies.slice(startIndex, actualEndIndex),\n    magnitude: magnitude.slice(startIndex, actualEndIndex),\n    phase: phase.slice(startIndex, actualEndIndex),\n    complex: complex.slice(startIndex * 2, actualEndIndex * 2)\n  };\n}\n\n/**\n * 振幅をdBに変換\n */\nfunction magnitudeToDecibels(magnitude: Float32Array): Float32Array {\n  const decibels = new Float32Array(magnitude.length);\n  for (let i = 0; i < magnitude.length; i++) {\n    const mag = magnitude[i] || 0;\n    decibels[i] = mag > 0 ? 20 * Math.log10(mag) : -Infinity;\n  }\n  return decibels;\n}\n\n/**\n * スペクトログラム計算のオプション\n */\ninterface SpectrogramOptions {\n  provider?: FFTProviderType;\n  enableProfiling?: boolean;\n  windowFunction?: string;\n  minFrequency?: number;\n  maxFrequency?: number;\n  decibels?: boolean;\n}\n\n/**\n * スペクトログラムを計算\n */\nasync function computeSpectrogram(\n  data: Float32Array,\n  sampleRate: number,\n  fftSize: number,\n  timeFrames: number,\n  overlap: number,\n  options: SpectrogramOptions\n): Promise<SpectrogramData> {\n  const hopSize = Math.floor(fftSize * (1 - overlap));\n\n  // 修正2.2: 短音声データ処理時のフレーム数不足対応\n  let numPossibleFrames;\n  if (data.length === 0) {\n    numPossibleFrames = 0;\n  } else if (data.length < fftSize) {\n    // data.length > 0 かつ data.length < fftSize の場合、1フレームとして処理\n    numPossibleFrames = 1;\n  } else {\n    // data.length >= fftSize の場合\n    numPossibleFrames = Math.floor((data.length - fftSize) / hopSize) + 1;\n  }\n  const actualFrames = Math.min(timeFrames, numPossibleFrames);\n\n  const times = new Float32Array(actualFrames);\n  const intensities: Float32Array[] = [];\n  let frequencies: Float32Array = new Float32Array();\n  let filteredFrequencies: Float32Array = new Float32Array();\n  let frequencyStartIndex = 0;\n  let frequencyEndIndex = 0;\n\n  // FFTプロバイダーを作成（一度だけ）\n  const fftProvider = await FFTProviderFactory.createProvider({\n    type: options.provider || 'webfft',\n    fftSize,\n    sampleRate,\n    enableProfiling: options.enableProfiling || false\n  });\n\n  try {\n    for (let frame = 0; frame < actualFrames; frame++) {\n      const startSample = frame * hopSize;\n\n      // フレームデータを抽出\n      const frameData = new Float32Array(fftSize);\n      for (let i = 0; i < fftSize; i++) {\n        frameData[i] = startSample + i < data.length ? data[startSample + i] || 0 : 0;\n      }\n\n      // ウィンドウ関数を適用\n      const windowedData = applyWindow(frameData, options.windowFunction || 'hann');\n\n      // FFTを実行\n      const fftResult = await fftProvider.fft(windowedData);\n\n      // 修正2.1: 最初のフレームで周波数範囲フィルタリングを設定\n      if (frame === 0) {\n        frequencies = fftResult.frequencies;\n\n        // 周波数フィルタリングのインデックス範囲を決定\n        const minFreq = options.minFrequency || 0;\n        const maxFreq = options.maxFrequency || sampleRate / 2;\n\n        frequencyStartIndex = frequencies.findIndex((f) => f >= minFreq);\n        if (frequencyStartIndex === -1) frequencyStartIndex = 0;\n\n        const tempEndIndex = frequencies.findIndex((f) => f > maxFreq);\n        frequencyEndIndex = tempEndIndex === -1 ? frequencies.length : tempEndIndex;\n\n        // フィルタリングされた周波数軸を作成\n        filteredFrequencies = frequencies.slice(frequencyStartIndex, frequencyEndIndex);\n      }\n\n      // 強度データを保存（周波数範囲フィルタリング適用）\n      const magnitude = fftResult.magnitude;\n      const filteredMagnitude = magnitude.slice(frequencyStartIndex, frequencyEndIndex);\n      const frameIntensity = options.decibels\n        ? magnitudeToDecibels(filteredMagnitude)\n        : filteredMagnitude;\n      intensities.push(frameIntensity);\n\n      // 時間位置を計算\n      times[frame] = (startSample + fftSize / 2) / sampleRate;\n    }\n  } finally {\n    fftProvider.dispose();\n  }\n\n  return {\n    times,\n    frequencies: filteredFrequencies, // フィルタリングされた周波数軸を返す\n    intensities,\n    timeFrames: actualFrames,\n    frequencyBins: filteredFrequencies.length\n  };\n}\n","import { AudioData, AudioInspectError } from '../types';\nimport { ensureValidSample } from '../core/utils';\nimport { getFFT } from './frequency';\n\n/**\n * スペクトル特徴量のオプション\n */\nexport interface SpectralFeaturesOptions {\n  /** FFTサイズ */\n  fftSize?: number;\n  /** 窓関数 */\n  windowFunction?: 'hann' | 'hamming' | 'blackman' | 'none';\n  /** 解析するチャンネル */\n  channel?: number;\n  /** 最小周波数 */\n  minFrequency?: number;\n  /** 最大周波数 */\n  maxFrequency?: number;\n  /** スペクトルロールオフの閾値（0-1） */\n  rolloffThreshold?: number;\n}\n\n/**\n * スペクトル特徴量の結果\n */\nexport interface SpectralFeaturesResult {\n  /** スペクトル重心（Hz） */\n  spectralCentroid: number;\n  /** スペクトル帯域幅（Hz） */\n  spectralBandwidth: number;\n  /** スペクトルロールオフ（Hz） */\n  spectralRolloff: number;\n  /** スペクトルフラットネス（0-1） */\n  spectralFlatness: number;\n  /** スペクトルフラックス */\n  spectralFlux?: number;\n  /** ゼロ交差率 */\n  zeroCrossingRate: number;\n  /** 使用された周波数範囲 */\n  frequencyRange: { min: number; max: number };\n}\n\n/**\n * 時系列スペクトル特徴量のオプション\n */\nexport interface TimeVaryingSpectralOptions extends SpectralFeaturesOptions {\n  /** フレームサイズ */\n  frameSize?: number;\n  /** ホップサイズ */\n  hopSize?: number;\n  /** フレーム数（指定しない場合は全体を解析） */\n  numFrames?: number;\n}\n\n/**\n * 時系列スペクトル特徴量の結果\n */\nexport interface TimeVaryingSpectralResult {\n  /** 時間軸（秒） */\n  times: Float32Array;\n  /** スペクトル重心の時系列 */\n  spectralCentroid: Float32Array;\n  /** スペクトル帯域幅の時系列 */\n  spectralBandwidth: Float32Array;\n  /** スペクトルロールオフの時系列 */\n  spectralRolloff: Float32Array;\n  /** スペクトルフラットネスの時系列 */\n  spectralFlatness: Float32Array;\n  /** スペクトルフラックスの時系列 */\n  spectralFlux: Float32Array;\n  /** ゼロ交差率の時系列 */\n  zeroCrossingRate: Float32Array;\n  /** フレーム情報 */\n  frameInfo: {\n    frameSize: number;\n    hopSize: number;\n    numFrames: number;\n  };\n}\n\n/**\n * スペクトル重心を計算\n * @param magnitude スペクトル振幅\n * @param frequencies 周波数配列\n * @param minFreq 最小周波数\n * @param maxFreq 最大周波数\n * @returns スペクトル重心（Hz）\n */\nfunction calculateSpectralCentroid(\n  magnitude: Float32Array,\n  frequencies: Float32Array,\n  minFreq: number,\n  maxFreq: number\n): number {\n  let weightedSum = 0;\n  let magnitudeSum = 0;\n\n  for (let i = 0; i < magnitude.length && i < frequencies.length; i++) {\n    const freq = frequencies[i];\n    const mag = magnitude[i];\n    if (freq !== undefined && mag !== undefined && freq >= minFreq && freq <= maxFreq) {\n      weightedSum += freq * mag;\n      magnitudeSum += mag;\n    }\n  }\n\n  return magnitudeSum > 1e-10 ? weightedSum / magnitudeSum : 0;\n}\n\n/**\n * スペクトル帯域幅を計算\n * @param magnitude スペクトル振幅\n * @param frequencies 周波数配列\n * @param centroid スペクトル重心\n * @param minFreq 最小周波数\n * @param maxFreq 最大周波数\n * @returns スペクトル帯域幅（Hz）\n */\nfunction calculateSpectralBandwidth(\n  magnitude: Float32Array,\n  frequencies: Float32Array,\n  centroid: number,\n  minFreq: number,\n  maxFreq: number\n): number {\n  let weightedVarianceSum = 0;\n  let magnitudeSum = 0;\n\n  for (let i = 0; i < magnitude.length && i < frequencies.length; i++) {\n    const freq = frequencies[i];\n    const mag = magnitude[i];\n    if (freq !== undefined && mag !== undefined && freq >= minFreq && freq <= maxFreq) {\n      const deviation = freq - centroid;\n      weightedVarianceSum += deviation * deviation * mag;\n      magnitudeSum += mag;\n    }\n  }\n\n  return magnitudeSum > 1e-10 ? Math.sqrt(weightedVarianceSum / magnitudeSum) : 0;\n}\n\n/**\n * スペクトルロールオフを計算\n * @param magnitude スペクトル振幅\n * @param frequencies 周波数配列\n * @param threshold 閾値（0-1）\n * @param minFreq 最小周波数\n * @param maxFreq 最大周波数\n * @returns スペクトルロールオフ（Hz）\n */\nfunction calculateSpectralRolloff(\n  magnitude: Float32Array,\n  frequencies: Float32Array,\n  threshold: number,\n  minFreq: number,\n  maxFreq: number\n): number {\n  // 指定範囲内の総エネルギーを計算\n  let totalEnergy = 0;\n  for (let i = 0; i < magnitude.length && i < frequencies.length; i++) {\n    const freq = frequencies[i];\n    const mag = magnitude[i];\n    if (freq !== undefined && mag !== undefined && freq >= minFreq && freq <= maxFreq) {\n      totalEnergy += mag * mag;\n    }\n  }\n\n  const targetEnergy = totalEnergy * threshold;\n  let cumulativeEnergy = 0;\n\n  for (let i = 0; i < magnitude.length && i < frequencies.length; i++) {\n    const freq = frequencies[i];\n    const mag = magnitude[i];\n    if (freq !== undefined && mag !== undefined && freq >= minFreq && freq <= maxFreq) {\n      cumulativeEnergy += mag * mag;\n      if (cumulativeEnergy >= targetEnergy) {\n        return freq;\n      }\n    }\n  }\n\n  return maxFreq;\n}\n\n/**\n * スペクトルフラットネスを計算\n * @param magnitude スペクトル振幅\n * @param minIndex 最小インデックス\n * @param maxIndex 最大インデックス\n * @returns スペクトルフラットネス（0-1）\n */\nfunction calculateSpectralFlatness(\n  magnitude: Float32Array,\n  minIndex: number,\n  maxIndex: number\n): number {\n  let geometricMean = 0;\n  let arithmeticMean = 0;\n  let count = 0;\n\n  for (let i = minIndex; i <= maxIndex && i < magnitude.length; i++) {\n    const mag = magnitude[i];\n    if (mag !== undefined) {\n      const safeMag = Math.max(mag, 1e-10); // ゼロ除算を防ぐ\n      geometricMean += Math.log(safeMag);\n      arithmeticMean += safeMag;\n      count++;\n    }\n  }\n\n  if (count === 0) return 0;\n\n  geometricMean = Math.exp(geometricMean / count);\n  arithmeticMean = arithmeticMean / count;\n\n  return arithmeticMean > 1e-10 ? geometricMean / arithmeticMean : 0;\n}\n\n/**\n * ゼロ交差率を計算\n * @param samples 音声サンプル\n * @returns ゼロ交差率\n */\nfunction calculateZeroCrossingRate(samples: Float32Array): number {\n  if (samples.length < 2) return 0;\n\n  let crossings = 0;\n  for (let i = 1; i < samples.length; i++) {\n    const prev = ensureValidSample(samples[i - 1]);\n    const curr = ensureValidSample(samples[i]);\n\n    if ((prev >= 0 && curr < 0) || (prev < 0 && curr >= 0)) {\n      crossings++;\n    }\n  }\n\n  return crossings / (samples.length - 1);\n}\n\n/**\n * スペクトルフラックスを計算\n * @param currentMagnitude 現在のフレームのスペクトル振幅\n * @param previousMagnitude 前のフレームのスペクトル振幅\n * @returns スペクトルフラックス\n */\nfunction calculateSpectralFlux(\n  currentMagnitude: Float32Array,\n  previousMagnitude?: Float32Array\n): number {\n  if (!previousMagnitude) return 0;\n\n  let flux = 0;\n  const length = Math.min(currentMagnitude.length, previousMagnitude.length);\n\n  for (let i = 0; i < length; i++) {\n    const current = currentMagnitude[i];\n    const previous = previousMagnitude[i];\n    if (current !== undefined && previous !== undefined) {\n      const diff = current - previous;\n      flux += diff * diff;\n    }\n  }\n\n  return Math.sqrt(flux / length);\n}\n\n/**\n * 単一フレームのスペクトル特徴量を計算\n * @param audio 音声データ\n * @param options オプション\n * @returns スペクトル特徴量\n */\nexport async function getSpectralFeatures(\n  audio: AudioData,\n  options: SpectralFeaturesOptions = {}\n): Promise<SpectralFeaturesResult> {\n  const {\n    fftSize = 2048,\n    windowFunction = 'hann',\n    channel = 0,\n    minFrequency = 0,\n    maxFrequency = audio.sampleRate / 2,\n    rolloffThreshold = 0.85\n  } = options;\n\n  if (channel >= audio.numberOfChannels) {\n    throw new AudioInspectError('INVALID_INPUT', `無効なチャンネル番号: ${channel}`);\n  }\n\n  // FFT解析\n  const fftResult = await getFFT(audio, {\n    fftSize,\n    windowFunction,\n    channel\n  });\n\n  // 周波数範囲のインデックスを計算\n  const minIndex = Math.max(0, Math.floor((minFrequency * fftSize) / audio.sampleRate));\n  const maxIndex = Math.min(\n    fftResult.frequencies.length - 1,\n    Math.floor((maxFrequency * fftSize) / audio.sampleRate)\n  );\n\n  // スペクトル重心\n  const spectralCentroid = calculateSpectralCentroid(\n    fftResult.magnitude,\n    fftResult.frequencies,\n    minFrequency,\n    maxFrequency\n  );\n\n  // スペクトル帯域幅\n  const spectralBandwidth = calculateSpectralBandwidth(\n    fftResult.magnitude,\n    fftResult.frequencies,\n    spectralCentroid,\n    minFrequency,\n    maxFrequency\n  );\n\n  // スペクトルロールオフ\n  const spectralRolloff = calculateSpectralRolloff(\n    fftResult.magnitude,\n    fftResult.frequencies,\n    rolloffThreshold,\n    minFrequency,\n    maxFrequency\n  );\n\n  // スペクトルフラットネス\n  const spectralFlatness = calculateSpectralFlatness(fftResult.magnitude, minIndex, maxIndex);\n\n  // ゼロ交差率\n  const samples = audio.channelData[channel];\n  if (!samples) {\n    throw new AudioInspectError('INVALID_INPUT', `チャンネル ${channel} のデータが存在しません`);\n  }\n  const zeroCrossingRate = calculateZeroCrossingRate(samples);\n\n  return {\n    spectralCentroid,\n    spectralBandwidth,\n    spectralRolloff,\n    spectralFlatness,\n    zeroCrossingRate,\n    frequencyRange: {\n      min: minFrequency,\n      max: maxFrequency\n    }\n  };\n}\n\n/**\n * 時系列スペクトル特徴量を計算\n * @param audio 音声データ\n * @param options オプション\n * @returns 時系列スペクトル特徴量\n */\nexport async function getTimeVaryingSpectralFeatures(\n  audio: AudioData,\n  options: TimeVaryingSpectralOptions = {}\n): Promise<TimeVaryingSpectralResult> {\n  const {\n    frameSize = 2048,\n    hopSize = frameSize / 2,\n    fftSize = frameSize,\n    windowFunction = 'hann',\n    channel = 0,\n    minFrequency = 0,\n    maxFrequency = audio.sampleRate / 2,\n    rolloffThreshold = 0.85,\n    numFrames\n  } = options;\n\n  if (channel >= audio.numberOfChannels) {\n    throw new AudioInspectError('INVALID_INPUT', `無効なチャンネル番号: ${channel}`);\n  }\n\n  const samples = audio.channelData[channel];\n  if (!samples) {\n    throw new AudioInspectError('INVALID_INPUT', `チャンネル ${channel} のデータが存在しません`);\n  }\n\n  const totalFrames = numFrames || Math.floor((samples.length - frameSize) / hopSize) + 1;\n\n  if (totalFrames <= 0) {\n    throw new AudioInspectError('INVALID_INPUT', 'フレーム数が不正です');\n  }\n\n  // 結果配列の初期化\n  const times = new Float32Array(totalFrames);\n  const spectralCentroid = new Float32Array(totalFrames);\n  const spectralBandwidth = new Float32Array(totalFrames);\n  const spectralRolloff = new Float32Array(totalFrames);\n  const spectralFlatness = new Float32Array(totalFrames);\n  const spectralFlux = new Float32Array(totalFrames);\n  const zeroCrossingRate = new Float32Array(totalFrames);\n\n  let previousMagnitude: Float32Array | undefined;\n\n  // フレームごとの解析\n  for (let frameIndex = 0; frameIndex < totalFrames; frameIndex++) {\n    const startSample = frameIndex * hopSize;\n    const endSample = Math.min(startSample + frameSize, samples.length);\n\n    // 時間位置\n    times[frameIndex] = startSample / audio.sampleRate;\n\n    // フレームデータの抽出\n    const frameData = samples.subarray(startSample, endSample);\n\n    // 短いフレームの場合はゼロパディング\n    const paddedFrame = new Float32Array(frameSize);\n    paddedFrame.set(frameData);\n\n    // フレーム用の音声データを作成\n    const frameAudio: AudioData = {\n      channelData: [paddedFrame],\n      sampleRate: audio.sampleRate,\n      numberOfChannels: 1,\n      length: frameSize,\n      duration: frameSize / audio.sampleRate\n    };\n\n    // スペクトル特徴量を計算\n    const features = await getSpectralFeatures(frameAudio, {\n      fftSize,\n      windowFunction,\n      channel: 0,\n      minFrequency,\n      maxFrequency,\n      rolloffThreshold\n    });\n\n    spectralCentroid[frameIndex] = features.spectralCentroid;\n    spectralBandwidth[frameIndex] = features.spectralBandwidth;\n    spectralRolloff[frameIndex] = features.spectralRolloff;\n    spectralFlatness[frameIndex] = features.spectralFlatness;\n    zeroCrossingRate[frameIndex] = features.zeroCrossingRate;\n\n    // スペクトルフラックスの計算（前フレームとの比較）\n    const fftResult = await getFFT(frameAudio, { fftSize, windowFunction, channel: 0 });\n    spectralFlux[frameIndex] = calculateSpectralFlux(fftResult.magnitude, previousMagnitude);\n    previousMagnitude = new Float32Array(fftResult.magnitude);\n  }\n\n  return {\n    times,\n    spectralCentroid,\n    spectralBandwidth,\n    spectralRolloff,\n    spectralFlatness,\n    spectralFlux,\n    zeroCrossingRate,\n    frameInfo: {\n      frameSize,\n      hopSize,\n      numFrames: totalFrames\n    }\n  };\n}\n","import { AudioData, AudioInspectError } from '../types.js';\nimport { getChannelData, ensureValidSample } from '../core/utils.js';\n\nexport interface EnergyOptions {\n  frameSize?: number;\n  hopSize?: number;\n  channel?: number;\n  normalized?: boolean;\n  windowFunction?: 'rectangular' | 'hann' | 'hamming'; // エネルギー計算用の窓関数\n}\n\nexport interface EnergyResult {\n  times: Float32Array;\n  energies: Float32Array;\n  totalEnergy: number;\n  statistics: {\n    mean: number;\n    std: number;\n    max: number;\n    min: number;\n  };\n}\n\n// 窓関数の適用（エネルギー計算用）\nfunction applyEnergyWindow(\n  data: Float32Array,\n  windowType: string,\n  startIdx: number,\n  length: number\n): Float32Array {\n  const windowed = new Float32Array(length);\n\n  for (let i = 0; i < length && startIdx + i < data.length; i++) {\n    let windowValue = 1.0;\n\n    switch (windowType) {\n      case 'hann':\n        windowValue = 0.5 * (1 - Math.cos((2 * Math.PI * i) / (length - 1)));\n        break;\n      case 'hamming':\n        windowValue = 0.54 - 0.46 * Math.cos((2 * Math.PI * i) / (length - 1));\n        break;\n      case 'rectangular':\n      default:\n        windowValue = 1.0;\n    }\n\n    const sample = ensureValidSample(data[startIdx + i]);\n    windowed[i] = sample * windowValue;\n  }\n\n  return windowed;\n}\n\nexport function getEnergy(audio: AudioData, options: EnergyOptions = {}): EnergyResult {\n  const {\n    frameSize = Math.floor(audio.sampleRate * 0.025), // 25ms\n    hopSize = Math.floor(audio.sampleRate * 0.01), // 10ms\n    channel = 0,\n    normalized = false,\n    windowFunction = 'rectangular'\n  } = options;\n\n  // パラメータの検証\n  if (frameSize <= 0 || !Number.isInteger(frameSize)) {\n    throw new AudioInspectError('INVALID_INPUT', 'frameSizeは正の整数である必要があります');\n  }\n\n  if (hopSize <= 0 || !Number.isInteger(hopSize)) {\n    throw new AudioInspectError('INVALID_INPUT', 'hopSizeは正の整数である必要があります');\n  }\n\n  if (hopSize > frameSize) {\n    console.warn(\n      '[audio-inspect] hopSizeがframeSizeより大きいため、フレーム間にギャップが生じます'\n    );\n  }\n\n  const channelData = getChannelData(audio, channel);\n  const dataLength = channelData.length;\n\n  if (dataLength === 0) {\n    return {\n      times: new Float32Array(0),\n      energies: new Float32Array(0),\n      totalEnergy: 0,\n      statistics: { mean: 0, std: 0, max: 0, min: 0 }\n    };\n  }\n\n  // フレーム数の計算\n  const frameCount = Math.max(0, Math.floor((dataLength - frameSize) / hopSize) + 1);\n\n  if (frameCount === 0) {\n    // データが1フレーム分に満たない場合\n    const energy = calculateFrameEnergy(channelData, 0, dataLength, windowFunction);\n    return {\n      times: new Float32Array([dataLength / 2 / audio.sampleRate]),\n      energies: new Float32Array([energy]),\n      totalEnergy: energy,\n      statistics: { mean: energy, std: 0, max: energy, min: energy }\n    };\n  }\n\n  const times = new Float32Array(frameCount);\n  const energies = new Float32Array(frameCount);\n  let totalEnergy = 0;\n  let maxEnergy = -Infinity;\n  let minEnergy = Infinity;\n\n  // 各フレームのエネルギー計算\n  for (let i = 0; i < frameCount; i++) {\n    const start = i * hopSize;\n    const windowedFrame = applyEnergyWindow(channelData, windowFunction, start, frameSize);\n\n    let frameEnergy = 0;\n    for (let j = 0; j < windowedFrame.length; j++) {\n      const sample = windowedFrame[j];\n      if (sample !== undefined) {\n        frameEnergy += sample * sample;\n      }\n    }\n\n    times[i] = (start + frameSize / 2) / audio.sampleRate;\n    energies[i] = frameEnergy;\n    totalEnergy += frameEnergy;\n\n    maxEnergy = Math.max(maxEnergy, frameEnergy);\n    minEnergy = Math.min(minEnergy, frameEnergy);\n  }\n\n  // 統計情報の計算\n  const meanEnergy = totalEnergy / frameCount;\n  let varianceSum = 0;\n\n  for (let i = 0; i < frameCount; i++) {\n    const energy = energies[i];\n    if (energy !== undefined) {\n      const diff = energy - meanEnergy;\n      varianceSum += diff * diff;\n    }\n  }\n\n  const stdEnergy = Math.sqrt(varianceSum / frameCount);\n\n  // 正規化（オプション）\n  if (normalized && totalEnergy > 1e-10) {\n    for (let i = 0; i < energies.length; i++) {\n      const currentEnergy = energies[i];\n      if (currentEnergy !== undefined) {\n        energies[i] = currentEnergy / totalEnergy;\n      }\n    }\n\n    return {\n      times,\n      energies,\n      totalEnergy: 1.0,\n      statistics: {\n        mean: meanEnergy / totalEnergy,\n        std: stdEnergy / totalEnergy,\n        max: maxEnergy / totalEnergy,\n        min: minEnergy / totalEnergy\n      }\n    };\n  }\n\n  return {\n    times,\n    energies,\n    totalEnergy,\n    statistics: {\n      mean: meanEnergy,\n      std: stdEnergy,\n      max: maxEnergy,\n      min: minEnergy\n    }\n  };\n}\n\n// ヘルパー関数\nfunction calculateFrameEnergy(\n  data: Float32Array,\n  start: number,\n  length: number,\n  windowFunction: string\n): number {\n  const windowed = applyEnergyWindow(data, windowFunction, start, length);\n  let energy = 0;\n  for (const sample of windowed) {\n    energy += sample * sample;\n  }\n  return energy;\n}\n","import { AudioData, AudioInspectError, AmplitudeOptions } from '../types.js';\nimport { getChannelData, ensureValidSample } from '../core/utils.js';\nimport { getRMS, getPeakAmplitude } from './time.js';\n\nexport interface CrestFactorOptions {\n  channel?: number;\n  windowSize?: number; // 窓サイズ（秒）\n  hopSize?: number; // ホップサイズ（秒）\n  method?: 'simple' | 'weighted'; // 重み付きクレストファクター\n}\n\nexport interface CrestFactorResult {\n  crestFactor: number; // 全体のクレストファクター (dB)\n  crestFactorLinear: number; // 線形スケールのクレストファクター\n  peak: number; // ピーク値（線形）\n  rms: number; // RMS値（線形）\n  timeVarying?:\n    | {\n        times: Float32Array;\n        values: Float32Array; // dB\n        valuesLinear: Float32Array; // 線形\n        peaks: Float32Array;\n        rmsValues: Float32Array;\n      }\n    | undefined;\n}\n\nfunction calculateFrameCrestFactor(\n  frameData: Float32Array,\n  method: 'simple' | 'weighted' = 'simple'\n): { peak: number; rms: number; cfDb: number; cfLinear: number } {\n  if (frameData.length === 0) {\n    return { peak: 0, rms: 0, cfDb: -Infinity, cfLinear: 0 };\n  }\n\n  let processedData = frameData;\n\n  // 重み付き処理（オプション）\n  if (method === 'weighted') {\n    // A-weightingの簡易実装\n    // 実際にはIIRフィルタで実装すべき\n    processedData = frameData; // プレースホルダー\n  }\n\n  let peakVal = 0;\n  let sumOfSquares = 0;\n  let validSamples = 0;\n\n  for (let i = 0; i < processedData.length; i++) {\n    const sample = ensureValidSample(processedData[i]);\n    const absSample = Math.abs(sample);\n\n    peakVal = Math.max(peakVal, absSample);\n    sumOfSquares += sample * sample;\n    validSamples++;\n  }\n\n  if (validSamples === 0) {\n    return { peak: 0, rms: 0, cfDb: -Infinity, cfLinear: 0 };\n  }\n\n  const rmsVal = Math.sqrt(sumOfSquares / validSamples);\n\n  if (rmsVal < 1e-10) {\n    return { peak: peakVal, rms: rmsVal, cfDb: Infinity, cfLinear: Infinity };\n  }\n\n  const cfLinear = peakVal / rmsVal;\n  const cfDb = 20 * Math.log10(cfLinear);\n\n  return { peak: peakVal, rms: rmsVal, cfDb, cfLinear };\n}\n\nexport function getCrestFactor(\n  audio: AudioData,\n  options: CrestFactorOptions = {}\n): CrestFactorResult {\n  const { channel = 0, windowSize, hopSize, method = 'simple' } = options;\n\n  // 全体のクレストファクター計算\n  const amplitudeOpts: AmplitudeOptions = { channel, asDB: false };\n  const overallPeak = getPeakAmplitude(audio, amplitudeOpts);\n  const overallRms = getRMS(audio, amplitudeOpts);\n\n  const overallCfLinear = overallRms > 1e-10 ? overallPeak / overallRms : Infinity;\n  const overallCfDb = overallRms > 1e-10 ? 20 * Math.log10(overallCfLinear) : Infinity;\n\n  let timeVaryingResult: CrestFactorResult['timeVarying'] | undefined;\n\n  // 時変クレストファクター計算\n  if (typeof windowSize === 'number' && typeof hopSize === 'number') {\n    if (windowSize <= 0 || hopSize <= 0) {\n      throw new AudioInspectError(\n        'INVALID_INPUT',\n        'windowSizeとhopSizeは正の値である必要があります'\n      );\n    }\n\n    if (hopSize > windowSize) {\n      console.warn(\n        '[audio-inspect] hopSizeがwindowSizeより大きいため、分析窓間にギャップが生じます'\n      );\n    }\n\n    const windowSizeSamples = Math.floor(windowSize * audio.sampleRate);\n    const hopSizeSamples = Math.floor(hopSize * audio.sampleRate);\n\n    if (windowSizeSamples === 0 || hopSizeSamples === 0) {\n      throw new AudioInspectError('INVALID_INPUT', 'サンプルレートに対して窓サイズが小さすぎます');\n    }\n\n    const channelData = getChannelData(audio, channel);\n    const dataLength = channelData.length;\n\n    if (dataLength < windowSizeSamples) {\n      // データが1窓分に満たない場合\n      const result = calculateFrameCrestFactor(channelData, method);\n      timeVaryingResult = {\n        times: new Float32Array([audio.duration / 2]),\n        values: new Float32Array([result.cfDb]),\n        valuesLinear: new Float32Array([result.cfLinear]),\n        peaks: new Float32Array([result.peak]),\n        rmsValues: new Float32Array([result.rms])\n      };\n    } else {\n      const frameCount = Math.floor((dataLength - windowSizeSamples) / hopSizeSamples) + 1;\n      const times = new Float32Array(frameCount);\n      const values = new Float32Array(frameCount);\n      const valuesLinear = new Float32Array(frameCount);\n      const peaks = new Float32Array(frameCount);\n      const rmsValues = new Float32Array(frameCount);\n\n      for (let i = 0; i < frameCount; i++) {\n        const start = i * hopSizeSamples;\n        const end = Math.min(start + windowSizeSamples, dataLength);\n        const frameData = channelData.subarray(start, end);\n\n        const frameResult = calculateFrameCrestFactor(frameData, method);\n\n        times[i] = (start + windowSizeSamples / 2) / audio.sampleRate;\n        values[i] = frameResult.cfDb;\n        valuesLinear[i] = frameResult.cfLinear;\n        peaks[i] = frameResult.peak;\n        rmsValues[i] = frameResult.rms;\n      }\n\n      timeVaryingResult = { times, values, valuesLinear, peaks, rmsValues };\n    }\n  }\n\n  return {\n    crestFactor: overallCfDb,\n    crestFactorLinear: overallCfLinear,\n    peak: overallPeak,\n    rms: overallRms,\n    timeVarying: timeVaryingResult\n  };\n}\n","import { AudioData, AudioInspectError } from '../types.js';\nimport { getFFT } from './frequency.js';\nimport { ensureValidSample } from '../core/utils.js';\n\nexport interface StereoAnalysisOptions {\n  frameSize?: number; // 分析フレームサイズ（サンプル数）\n  hopSize?: number; // ホップサイズ（サンプル数）\n  calculatePhase?: boolean; // 位相解析を行うか\n  calculateITD?: boolean; // 両耳間時間差を計算するか\n  calculateILD?: boolean; // 両耳間レベル差を計算するか\n}\n\nexport interface StereoAnalysisResult {\n  correlation: number; // 相関係数 (-1 to 1)\n  coherence?: Float32Array; // 周波数別コヒーレンス\n  width: number; // ステレオ幅 (0 to 1)\n  widthFrequency?: Float32Array; // 周波数別ステレオ幅\n  balance: number; // L/R バランス (-1 to 1)\n  phaseDifference?: number; // 平均位相差（度）\n  phaseCorrelation?: number; // 位相相関 (-1 to 1)\n  midSideRatio: number; // Mid/Side エネルギー比 (dB)\n  itd?: number; // 両耳間時間差 (ms)\n  ild?: number; // 両耳間レベル差 (dB)\n  goniometer?: {\n    // ゴニオメーター用データ\n    x: Float32Array; // L-R (Side)\n    y: Float32Array; // L+R (Mid)\n  };\n}\n\n// クロス相関による遅延推定\nfunction estimateDelay(\n  left: Float32Array,\n  right: Float32Array,\n  maxDelaySamples: number = 44\n): number {\n  const len = Math.min(left.length, right.length);\n  let maxCorr = -Infinity;\n  let bestDelay = 0;\n\n  for (let delay = -maxDelaySamples; delay <= maxDelaySamples; delay++) {\n    let correlation = 0;\n    let count = 0;\n\n    for (let i = 0; i < len; i++) {\n      const leftIdx = i;\n      const rightIdx = i + delay;\n\n      if (rightIdx >= 0 && rightIdx < len) {\n        const leftSample = ensureValidSample(left[leftIdx]);\n        const rightSample = ensureValidSample(right[rightIdx]);\n        correlation += leftSample * rightSample;\n        count++;\n      }\n    }\n\n    if (count > 0) {\n      correlation /= count;\n      if (correlation > maxCorr) {\n        maxCorr = correlation;\n        bestDelay = delay;\n      }\n    }\n  }\n\n  return bestDelay;\n}\n\n// コヒーレンス計算\nasync function calculateCoherence(\n  left: Float32Array,\n  right: Float32Array,\n  fftSize: number,\n  sampleRate: number\n): Promise<Float32Array> {\n  const leftFFT = await getFFT(\n    {\n      channelData: [left],\n      sampleRate,\n      numberOfChannels: 1,\n      length: left.length,\n      duration: left.length / sampleRate\n    },\n    { fftSize }\n  );\n\n  const rightFFT = await getFFT(\n    {\n      channelData: [right],\n      sampleRate,\n      numberOfChannels: 1,\n      length: right.length,\n      duration: right.length / sampleRate\n    },\n    { fftSize }\n  );\n\n  const coherence = new Float32Array(leftFFT.magnitude.length);\n\n  for (let i = 0; i < coherence.length; i++) {\n    const leftMag = leftFFT.magnitude[i] || 0;\n    const rightMag = rightFFT.magnitude[i] || 0;\n    const leftPhase = leftFFT.phase[i] || 0;\n    const rightPhase = rightFFT.phase[i] || 0;\n\n    // クロススペクトル\n    const crossReal = leftMag * rightMag * Math.cos(leftPhase - rightPhase);\n    const crossImag = leftMag * rightMag * Math.sin(leftPhase - rightPhase);\n    const crossMag = Math.sqrt(crossReal * crossReal + crossImag * crossImag);\n\n    // コヒーレンス = |Pxy|^2 / (Pxx * Pyy)\n    const denominator = leftMag * leftMag * rightMag * rightMag;\n    coherence[i] = denominator > 1e-10 ? (crossMag * crossMag) / denominator : 0;\n  }\n\n  return coherence;\n}\n\n// 周波数別ステレオ幅\nfunction calculateFrequencyWidth(\n  leftMag: Float32Array,\n  rightMag: Float32Array,\n  leftPhase: Float32Array,\n  rightPhase: Float32Array\n): Float32Array {\n  const width = new Float32Array(leftMag.length);\n\n  for (let i = 0; i < width.length; i++) {\n    const lMag = leftMag[i] || 0;\n    const rMag = rightMag[i] || 0;\n    const lPhase = leftPhase[i] || 0;\n    const rPhase = rightPhase[i] || 0;\n    const phaseDiff = lPhase - rPhase;\n\n    // M/S変換\n    const midMag = Math.abs(lMag + rMag) / 2;\n    const sideMag = Math.abs(lMag - rMag) / 2;\n\n    // 位相差も考慮したステレオ幅\n    const phaseWidth = Math.abs(Math.sin(phaseDiff / 2));\n    const magWidth = sideMag / (midMag + sideMag + 1e-10);\n\n    width[i] = Math.max(magWidth, phaseWidth);\n  }\n\n  return width;\n}\n\nexport async function getStereoAnalysis(\n  audio: AudioData,\n  options: StereoAnalysisOptions = {}\n): Promise<StereoAnalysisResult> {\n  if (audio.numberOfChannels < 2) {\n    throw new AudioInspectError('INVALID_INPUT', 'ステレオ解析には2チャンネル以上の音声が必要です');\n  }\n\n  const {\n    frameSize = audio.length,\n    calculatePhase = true,\n    calculateITD = true,\n    calculateILD = true\n  } = options;\n\n  const left = audio.channelData[0];\n  const right = audio.channelData[1];\n\n  if (!left || !right) {\n    throw new AudioInspectError('INVALID_INPUT', 'L/Rチャンネルのデータが存在しません');\n  }\n\n  const len = Math.min(left.length, right.length);\n\n  if (len === 0) {\n    return {\n      correlation: 0,\n      width: 0,\n      balance: 0,\n      midSideRatio: 0\n    };\n  }\n\n  // 基本的な統計量の計算\n  let sumL = 0,\n    sumR = 0,\n    sumLR = 0,\n    sumL2 = 0,\n    sumR2 = 0;\n  let energyL = 0,\n    energyR = 0;\n\n  for (let i = 0; i < len; i++) {\n    const l = ensureValidSample(left[i]);\n    const r = ensureValidSample(right[i]);\n\n    sumL += l;\n    sumR += r;\n    sumLR += l * r;\n    sumL2 += l * l;\n    sumR2 += r * r;\n\n    energyL += l * l;\n    energyR += r * r;\n  }\n\n  // 相関係数\n  const meanL = sumL / len;\n  const meanR = sumR / len;\n  const covariance = sumLR / len - meanL * meanR;\n  const stdL = Math.sqrt(sumL2 / len - meanL * meanL);\n  const stdR = Math.sqrt(sumR2 / len - meanR * meanR);\n  const correlation = stdL > 1e-10 && stdR > 1e-10 ? covariance / (stdL * stdR) : 0;\n\n  // Mid/Side処理\n  const mid = new Float32Array(len);\n  const side = new Float32Array(len);\n  let energyMid = 0,\n    energySide = 0;\n\n  for (let i = 0; i < len; i++) {\n    const l = ensureValidSample(left[i]);\n    const r = ensureValidSample(right[i]);\n\n    mid[i] = (l + r) * 0.5;\n    side[i] = (l - r) * 0.5;\n\n    energyMid += (mid[i] ?? 0) * (mid[i] ?? 0);\n    energySide += (side[i] ?? 0) * (side[i] ?? 0);\n  }\n\n  // メトリクスの計算\n  const width = energyMid + energySide > 1e-10 ? energySide / (energyMid + energySide) : 0;\n\n  const balance = energyL + energyR > 1e-10 ? (energyR - energyL) / (energyL + energyR) : 0;\n\n  const midSideRatio = energySide > 1e-10 ? 10 * Math.log10(energyMid / energySide) : Infinity;\n\n  const result: StereoAnalysisResult = {\n    correlation,\n    width,\n    balance,\n    midSideRatio\n  };\n\n  // 位相解析（オプション）\n  if (calculatePhase && frameSize < audio.length) {\n    const fftSize = Math.pow(2, Math.ceil(Math.log2(frameSize)));\n\n    // コヒーレンス計算\n    result.coherence = await calculateCoherence(\n      left.subarray(0, frameSize),\n      right.subarray(0, frameSize),\n      fftSize,\n      audio.sampleRate\n    );\n\n    // 周波数別解析\n    const leftFFT = await getFFT(\n      {\n        channelData: [left.subarray(0, frameSize)],\n        sampleRate: audio.sampleRate,\n        numberOfChannels: 1,\n        length: frameSize,\n        duration: frameSize / audio.sampleRate\n      },\n      { fftSize }\n    );\n\n    const rightFFT = await getFFT(\n      {\n        channelData: [right.subarray(0, frameSize)],\n        sampleRate: audio.sampleRate,\n        numberOfChannels: 1,\n        length: frameSize,\n        duration: frameSize / audio.sampleRate\n      },\n      { fftSize }\n    );\n\n    // 周波数別ステレオ幅\n    result.widthFrequency = calculateFrequencyWidth(\n      leftFFT.magnitude,\n      rightFFT.magnitude,\n      leftFFT.phase,\n      rightFFT.phase\n    );\n\n    // 平均位相差\n    let phaseDiffSum = 0;\n    let weightSum = 0;\n\n    for (let i = 1; i < leftFFT.phase.length; i++) {\n      // DC成分を除外\n      const leftMag = leftFFT.magnitude[i] || 0;\n      const rightMag = rightFFT.magnitude[i] || 0;\n      const leftPhase = leftFFT.phase[i] || 0;\n      const rightPhase = rightFFT.phase[i] || 0;\n\n      const weight = leftMag * rightMag;\n      let phaseDiff = leftPhase - rightPhase;\n\n      // 位相差を -π から π の範囲に正規化\n      while (phaseDiff > Math.PI) phaseDiff -= 2 * Math.PI;\n      while (phaseDiff < -Math.PI) phaseDiff += 2 * Math.PI;\n\n      phaseDiffSum += phaseDiff * weight;\n      weightSum += weight;\n    }\n\n    result.phaseDifference = weightSum > 1e-10 ? ((phaseDiffSum / weightSum) * 180) / Math.PI : 0;\n  }\n\n  // ITD（両耳間時間差）計算（オプション）\n  if (calculateITD) {\n    const delaySamples = estimateDelay(left, right);\n    result.itd = (delaySamples / audio.sampleRate) * 1000; // ms\n  }\n\n  // ILD（両耳間レベル差）計算（オプション）\n  if (calculateILD) {\n    const rmsL = Math.sqrt(energyL / len);\n    const rmsR = Math.sqrt(energyR / len);\n\n    result.ild = rmsL > 1e-10 && rmsR > 1e-10 ? 20 * Math.log10(rmsR / rmsL) : 0;\n  }\n\n  // ゴニオメーター用データ（Lissajous表示）\n  result.goniometer = {\n    x: side, // L-R\n    y: mid // L+R\n  };\n\n  return result;\n}\n\n// 時系列ステレオ解析（将来の拡張用）\nexport function getTimeVaryingStereoAnalysis(\n  _audio: AudioData,\n  _options: StereoAnalysisOptions & { windowSize?: number } = {}\n): Promise<{\n  times: Float32Array;\n  correlation: Float32Array;\n  width: Float32Array;\n  balance: Float32Array;\n}> {\n  return Promise.reject(\n    new AudioInspectError(\n      'UNSUPPORTED_FORMAT',\n      '時系列ステレオ解析は将来のバージョンで実装予定です'\n    )\n  );\n}\n","import { AudioData } from '../types.js';\nimport { getChannelData, ensureValidSample } from '../core/utils.js';\n\nexport interface VADOptions {\n  channel?: number;\n  frameSizeMs?: number;\n  hopSizeMs?: number;\n  method?: 'energy' | 'zcr' | 'combined' | 'adaptive';\n\n  // 閾値パラメータ\n  energyThreshold?: number; // 固定エネルギー閾値\n  zcrThresholdLow?: number; // ZCR下限（有声音）\n  zcrThresholdHigh?: number; // ZCR上限（無声音）\n\n  // 適応的閾値用パラメータ\n  adaptiveAlpha?: number; // 適応率 (0-1)\n  noiseFactor?: number; // ノイズレベルに対する倍率\n\n  // 時間制約\n  minSilenceDurationMs?: number;\n  minSpeechDurationMs?: number;\n\n  // 追加オプション\n  preEmphasis?: boolean; // プリエンファシスフィルタ\n  smoothing?: boolean; // 判定結果の平滑化\n}\n\nexport interface VADSegment {\n  start: number;\n  end: number;\n  type: 'speech' | 'silence';\n  confidence?: number; // 判定の信頼度 (0-1)\n}\n\nexport interface VADResult {\n  segments: VADSegment[];\n  speechRatio: number;\n  features?: {\n    energies: Float32Array;\n    zcrs: Float32Array;\n    decisions: Float32Array; // 0-1の連続値\n    times: Float32Array;\n  };\n}\n\n/**\n * プリエンファシスフィルタ\n */\nfunction applyPreEmphasis(data: Float32Array, alpha: number = 0.97): Float32Array {\n  const filtered = new Float32Array(data.length);\n  filtered[0] = data[0] || 0;\n\n  for (let i = 1; i < data.length; i++) {\n    const current = ensureValidSample(data[i]);\n    const previous = ensureValidSample(data[i - 1]);\n    filtered[i] = current - alpha * previous;\n  }\n\n  return filtered;\n}\n\n/**\n * フレームエネルギー計算\n */\nfunction calculateFrameEnergies(\n  channelData: Float32Array,\n  frameSizeSamples: number,\n  hopSizeSamples: number,\n  sampleRate: number,\n  useLogEnergy: boolean = false\n): { energies: Float32Array; times: Float32Array } {\n  const dataLength = channelData.length;\n\n  if (dataLength < frameSizeSamples) {\n    return { energies: new Float32Array(0), times: new Float32Array(0) };\n  }\n\n  const frameCount = Math.floor((dataLength - frameSizeSamples) / hopSizeSamples) + 1;\n  const energies = new Float32Array(frameCount);\n  const times = new Float32Array(frameCount);\n\n  for (let i = 0; i < frameCount; i++) {\n    const start = i * hopSizeSamples;\n    const end = Math.min(start + frameSizeSamples, dataLength);\n\n    let energy = 0;\n    let validSamples = 0;\n\n    for (let j = start; j < end; j++) {\n      const sample = ensureValidSample(channelData[j]);\n      energy += sample * sample;\n      validSamples++;\n    }\n\n    energy = validSamples > 0 ? energy / validSamples : 0; // 正規化\n\n    if (useLogEnergy) {\n      energies[i] = energy > 1e-10 ? 10 * Math.log10(energy) : -100;\n    } else {\n      energies[i] = energy;\n    }\n\n    times[i] = (start + frameSizeSamples / 2) / sampleRate;\n  }\n\n  return { energies, times };\n}\n\n/**\n * フレームZCR計算\n */\nfunction calculateFrameZCRs(\n  channelData: Float32Array,\n  frameSizeSamples: number,\n  hopSizeSamples: number,\n  normalize: boolean = true\n): Float32Array {\n  const dataLength = channelData.length;\n\n  if (dataLength < frameSizeSamples) {\n    return new Float32Array(0);\n  }\n\n  const frameCount = Math.floor((dataLength - frameSizeSamples) / hopSizeSamples) + 1;\n  const zcrs = new Float32Array(frameCount);\n\n  for (let i = 0; i < frameCount; i++) {\n    const start = i * hopSizeSamples;\n    const end = Math.min(start + frameSizeSamples, dataLength);\n\n    let crossings = 0;\n    let prevSign = Math.sign(ensureValidSample(channelData[start]));\n\n    for (let j = start + 1; j < end; j++) {\n      const sample = ensureValidSample(channelData[j]);\n      const currentSign = Math.sign(sample);\n      if (prevSign !== currentSign && prevSign !== 0 && currentSign !== 0) {\n        crossings++;\n      }\n      prevSign = currentSign;\n    }\n\n    zcrs[i] = normalize ? crossings / Math.max(1, end - start - 1) : crossings;\n  }\n\n  return zcrs;\n}\n\n/**\n * 適応的閾値の計算\n */\nfunction calculateAdaptiveThreshold(\n  values: Float32Array,\n  alpha: number,\n  noiseFactor: number,\n  initialFrames: number = 10\n): Float32Array {\n  const thresholds = new Float32Array(values.length);\n\n  // 初期ノイズレベルの推定（最初のフレームから）\n  let noiseLevel = 0;\n  const noiseFrames = Math.min(initialFrames, values.length);\n\n  for (let i = 0; i < noiseFrames; i++) {\n    const value = values[i];\n    if (value !== undefined) {\n      noiseLevel += value;\n    }\n  }\n  noiseLevel = noiseFrames > 0 ? noiseLevel / noiseFrames : 0;\n\n  // 適応的閾値の計算\n  for (let i = 0; i < values.length; i++) {\n    const value = values[i];\n    if (value === undefined) {\n      thresholds[i] =\n        i > 0 ? (thresholds[i - 1] ?? noiseLevel * noiseFactor) : noiseLevel * noiseFactor;\n      continue;\n    }\n\n    if (i === 0) {\n      thresholds[i] = noiseLevel * noiseFactor;\n    } else {\n      const prevThreshold = thresholds[i - 1];\n      // 指数移動平均によるノイズレベルの更新\n      if (prevThreshold !== undefined && value < prevThreshold) {\n        noiseLevel = alpha * noiseLevel + (1 - alpha) * value;\n      }\n      thresholds[i] = noiseLevel * noiseFactor;\n    }\n  }\n\n  return thresholds;\n}\n\n/**\n * 判定結果の平滑化（メディアンフィルタ）\n */\nfunction smoothDecisions(decisions: Float32Array, windowSize: number = 5): Float32Array {\n  const smoothed = new Float32Array(decisions.length);\n  const halfWindow = Math.floor(windowSize / 2);\n\n  for (let i = 0; i < decisions.length; i++) {\n    const start = Math.max(0, i - halfWindow);\n    const end = Math.min(decisions.length, i + halfWindow + 1);\n\n    // 窓内の値を収集してソート\n    const windowValues: number[] = [];\n    for (let j = start; j < end; j++) {\n      const value = decisions[j];\n      if (value !== undefined) {\n        windowValues.push(value);\n      }\n    }\n    windowValues.sort((a, b) => a - b);\n\n    // メディアン値を取得\n    if (windowValues.length > 0) {\n      const medianIdx = Math.floor(windowValues.length / 2);\n      const medianValue = windowValues[medianIdx];\n      smoothed[i] = medianValue ?? 0;\n    } else {\n      smoothed[i] = 0;\n    }\n  }\n\n  return smoothed;\n}\n\n/**\n * セグメント化（連続値から）\n */\nfunction createSegmentsFromContinuous(\n  decisions: Float32Array,\n  times: Float32Array,\n  threshold: number = 0.5,\n  minSpeechSec: number = 0.1,\n  minSilenceSec: number = 0.3\n): VADSegment[] {\n  const segments: VADSegment[] = [];\n  let currentSegment: VADSegment | null = null;\n\n  for (let i = 0; i < decisions.length; i++) {\n    const decision = decisions[i];\n    const time = times[i];\n    if (decision === undefined || time === undefined) continue;\n\n    const isSpeech = decision >= threshold;\n\n    if (!currentSegment) {\n      currentSegment = {\n        start: time,\n        end: time,\n        type: isSpeech ? 'speech' : 'silence',\n        confidence: Math.abs(decision - 0.5) * 2\n      };\n    } else if (\n      (isSpeech && currentSegment.type === 'speech') ||\n      (!isSpeech && currentSegment.type === 'silence')\n    ) {\n      // 同じタイプのセグメントを延長\n      currentSegment.end = time;\n      const conf = Math.abs(decision - 0.5) * 2;\n      currentSegment.confidence = Math.max(currentSegment.confidence || 0, conf);\n    } else {\n      // タイプが変わった場合\n      segments.push(currentSegment);\n      currentSegment = {\n        start: time,\n        end: time,\n        type: isSpeech ? 'speech' : 'silence',\n        confidence: Math.abs(decision - 0.5) * 2\n      };\n    }\n  }\n\n  if (currentSegment) {\n    segments.push(currentSegment);\n  }\n\n  // 短いセグメントのフィルタリング\n  return filterShortSegments(segments, minSpeechSec, minSilenceSec);\n}\n\n/**\n * 短いセグメントのフィルタリング\n */\nfunction filterShortSegments(\n  segments: VADSegment[],\n  minSpeechSec: number,\n  minSilenceSec: number\n): VADSegment[] {\n  if (segments.length === 0) return [];\n\n  const filtered: VADSegment[] = [];\n  let i = 0;\n\n  while (i < segments.length) {\n    const current = segments[i];\n    if (!current) {\n      i++;\n      continue;\n    }\n\n    const duration = current.end - current.start;\n\n    if (\n      (current.type === 'speech' && duration >= minSpeechSec) ||\n      (current.type === 'silence' && duration >= minSilenceSec)\n    ) {\n      // セグメントを保持\n      filtered.push(current);\n      i++;\n    } else {\n      // 短いセグメントの処理\n      if (filtered.length > 0 && i + 1 < segments.length) {\n        const prev = filtered[filtered.length - 1];\n        const next = segments[i + 1];\n\n        if (prev && next && prev.type === next.type) {\n          // 前後が同じタイプなら統合\n          prev.end = next.end;\n          i += 2; // 現在と次のセグメントをスキップ\n          continue;\n        }\n      }\n\n      // 統合できない場合はタイプを変更\n      if (filtered.length > 0) {\n        const lastFiltered = filtered[filtered.length - 1];\n        if (lastFiltered) {\n          lastFiltered.end = current.end;\n        }\n      }\n      i++;\n    }\n  }\n\n  return filtered;\n}\n\n/**\n * VAD（音声区間検出）を実行\n */\nexport function getVAD(audio: AudioData, options: VADOptions = {}): VADResult {\n  const {\n    channel = 0,\n    frameSizeMs = 30, // 30msフレーム\n    hopSizeMs = 10, // 10msホップ\n    method = 'combined',\n    energyThreshold = 0.02,\n    zcrThresholdLow = 0.05,\n    zcrThresholdHigh = 0.15,\n    adaptiveAlpha = 0.99,\n    noiseFactor = 3.0,\n    minSilenceDurationMs = 300,\n    minSpeechDurationMs = 100,\n    preEmphasis = true,\n    smoothing = true\n  } = options;\n\n  let channelData = getChannelData(audio, channel);\n\n  // プリエンファシス（オプション）\n  if (preEmphasis) {\n    channelData = applyPreEmphasis(channelData);\n  }\n\n  const sr = audio.sampleRate;\n  const frameSizeSamples = Math.floor((frameSizeMs / 1000) * sr);\n  const hopSizeSamples = Math.floor((hopSizeMs / 1000) * sr);\n\n  if (frameSizeSamples === 0 || hopSizeSamples === 0) {\n    return { segments: [], speechRatio: 0 };\n  }\n\n  // 特徴量の計算\n  const { energies, times } = calculateFrameEnergies(\n    channelData,\n    frameSizeSamples,\n    hopSizeSamples,\n    sr,\n    false\n  );\n\n  const zcrs = calculateFrameZCRs(channelData, frameSizeSamples, hopSizeSamples, true);\n\n  if (energies.length === 0) {\n    return { segments: [], speechRatio: 0 };\n  }\n\n  // VAD判定\n  const decisions = new Float32Array(energies.length);\n\n  switch (method) {\n    case 'energy': {\n      for (let i = 0; i < energies.length; i++) {\n        const energy = energies[i];\n        decisions[i] = energy !== undefined && energy > energyThreshold ? 1 : 0;\n      }\n      break;\n    }\n\n    case 'zcr': {\n      for (let i = 0; i < zcrs.length; i++) {\n        const zcr = zcrs[i];\n        decisions[i] = zcr !== undefined && zcr > zcrThresholdLow && zcr < zcrThresholdHigh ? 1 : 0;\n      }\n      break;\n    }\n\n    case 'combined': {\n      for (let i = 0; i < energies.length; i++) {\n        const energy = energies[i];\n        const zcr = zcrs[i];\n\n        const energyScore = energy !== undefined && energy > energyThreshold ? 1 : 0;\n        const zcrScore =\n          zcr !== undefined && zcr > zcrThresholdLow && zcr < zcrThresholdHigh ? 1 : 0;\n        decisions[i] = (energyScore + zcrScore) / 2;\n      }\n      break;\n    }\n\n    case 'adaptive': {\n      // 適応的閾値の計算\n      const adaptiveThreshold = calculateAdaptiveThreshold(energies, adaptiveAlpha, noiseFactor);\n\n      for (let i = 0; i < energies.length; i++) {\n        const energy = energies[i];\n        const zcr = zcrs[i];\n        const threshold = adaptiveThreshold[i];\n\n        const energyScore =\n          energy !== undefined && threshold !== undefined && energy > threshold ? 1 : 0;\n        const zcrScore =\n          zcr !== undefined && zcr > zcrThresholdLow && zcr < zcrThresholdHigh ? 0.5 : 0;\n        decisions[i] = Math.min(1, energyScore + zcrScore);\n      }\n      break;\n    }\n  }\n\n  // 平滑化（オプション）\n  const finalDecisions = smoothing ? smoothDecisions(decisions, 5) : decisions;\n\n  // セグメント化\n  const minSpeechSec = minSpeechDurationMs / 1000;\n  const minSilenceSec = minSilenceDurationMs / 1000;\n\n  const segments = createSegmentsFromContinuous(\n    finalDecisions,\n    times,\n    0.5,\n    minSpeechSec,\n    minSilenceSec\n  );\n\n  // 音声区間の割合計算\n  let totalSpeechDuration = 0;\n  for (const seg of segments) {\n    if (seg.type === 'speech') {\n      totalSpeechDuration += seg.end - seg.start;\n    }\n  }\n\n  const speechRatio = audio.duration > 0 ? Math.min(1, totalSpeechDuration / audio.duration) : 0;\n\n  return {\n    segments,\n    speechRatio,\n    features: {\n      energies,\n      zcrs,\n      decisions: finalDecisions,\n      times\n    }\n  };\n}\n","import { AudioData, AudioInspectError } from '../types.js';\nimport { ensureValidSample } from '../core/utils.js';\n\n// ITU-R BS.1770-4準拠の定数\nconst ABSOLUTE_GATE_LUFS = -70.0;\nconst RELATIVE_GATE_LU = 10.0;\nconst BLOCK_SIZE_MS = 400;\nconst BLOCK_OVERLAP = 0.75; // 75%オーバーラップ\nconst SHORT_TERM_WINDOW_MS = 3000;\nconst MOMENTARY_WINDOW_MS = 400;\n\n// K-weighting filter coefficients (ITU-R BS.1770-4)\nconst K_WEIGHTING_STAGE1 = {\n  // High-pass filter (Butterworth)\n  b: [1.53512485958697, -2.69169618940638, 1.19839281085285],\n  a: [1.0, -1.69065929318241, 0.73248077421585]\n};\n\nconst K_WEIGHTING_STAGE2 = {\n  // High-frequency shelf\n  b: [1.53660026327012, -2.68908427791073, 1.16158667615261],\n  a: [1.0, -1.68859431835989, 0.72909998803284]\n};\n\n// Biquadフィルタの状態\ninterface BiquadState {\n  x1: number;\n  x2: number;\n  y1: number;\n  y2: number;\n}\n\n// Biquadフィルタの適用\nfunction applyBiquad(\n  input: Float32Array,\n  b: number[],\n  a: number[],\n  state: BiquadState = { x1: 0, x2: 0, y1: 0, y2: 0 }\n): Float32Array {\n  const output = new Float32Array(input.length);\n  let { x1, x2, y1, y2 } = state;\n\n  for (let i = 0; i < input.length; i++) {\n    const x0 = ensureValidSample(input[i]);\n    const b0 = b[0] ?? 0;\n    const b1 = b[1] ?? 0;\n    const b2 = b[2] ?? 0;\n    const a1 = a[1] ?? 0;\n    const a2 = a[2] ?? 0;\n\n    const y0 = b0 * x0 + b1 * x1 + b2 * x2 - a1 * y1 - a2 * y2;\n\n    output[i] = y0;\n\n    x2 = x1;\n    x1 = x0;\n    y2 = y1;\n    y1 = y0;\n  }\n\n  // 状態を更新\n  state.x1 = x1;\n  state.x2 = x2;\n  state.y1 = y1;\n  state.y2 = y2;\n\n  return output;\n}\n\n// K-weightingフィルタの適用\nfunction applyKWeighting(channelData: Float32Array): Float32Array {\n  // ステージ1: ハイパスフィルタ\n  let filtered = applyBiquad(channelData, K_WEIGHTING_STAGE1.b, K_WEIGHTING_STAGE1.a);\n\n  // ステージ2: 高周波シェルフ\n  filtered = applyBiquad(filtered, K_WEIGHTING_STAGE2.b, K_WEIGHTING_STAGE2.a);\n\n  return filtered;\n}\n\n// ブロックのラウドネス計算\nfunction calculateBlockLoudness(channels: Float32Array[]): number {\n  let sumOfSquares = 0;\n  const numChannels = channels.length;\n\n  if (numChannels === 0) return -Infinity;\n\n  for (let ch = 0; ch < numChannels; ch++) {\n    const channelData = channels[ch];\n    if (!channelData || channelData.length === 0) continue;\n\n    let channelSum = 0;\n    let validSamples = 0;\n\n    for (let i = 0; i < channelData.length; i++) {\n      const sample = ensureValidSample(channelData[i]);\n      channelSum += sample * sample;\n      validSamples++;\n    }\n\n    if (validSamples === 0) continue;\n\n    // チャンネル重み付け（ステレオの場合）\n    const channelWeight = 1.0; // L, R, Cは1.0、Ls, Rsは1.41（サラウンドの場合）\n    sumOfSquares += channelWeight * (channelSum / validSamples);\n  }\n\n  // LUFSに変換\n  return -0.691 + 10 * Math.log10(Math.max(1e-15, sumOfSquares));\n}\n\nexport interface LUFSOptions {\n  channelMode?: 'mono' | 'stereo';\n  gated?: boolean;\n  calculateShortTerm?: boolean;\n  calculateMomentary?: boolean;\n  calculateLoudnessRange?: boolean;\n  calculateTruePeak?: boolean;\n}\n\nexport interface LUFSResult {\n  integrated: number; // Integrated loudness (LUFS)\n  shortTerm?: Float32Array; // Short-term loudness values\n  momentary?: Float32Array; // Momentary loudness values\n  loudnessRange?: number; // Loudness range (LU)\n  truePeak?: number[]; // True peak per channel (dBTP)\n  statistics?: {\n    percentile10: number; // 10th percentile\n    percentile95: number; // 95th percentile\n  };\n}\n\nexport function getLUFS(audio: AudioData, options: LUFSOptions = {}): LUFSResult {\n  const {\n    channelMode = audio.numberOfChannels >= 2 ? 'stereo' : 'mono',\n    gated = true,\n    calculateShortTerm = false,\n    calculateMomentary = false,\n    calculateLoudnessRange = false,\n    calculateTruePeak = false\n  } = options;\n\n  if (audio.numberOfChannels === 0) {\n    throw new AudioInspectError('INVALID_INPUT', '処理可能なチャンネルがありません');\n  }\n\n  // チャンネルデータの準備\n  const channelsToProcess: Float32Array[] = [];\n\n  if (channelMode === 'mono') {\n    const channel0 = audio.channelData[0];\n    if (channel0) {\n      channelsToProcess.push(channel0);\n    }\n  } else {\n    // ステレオ処理\n    const channel0 = audio.channelData[0];\n    const channel1 = audio.channelData[1];\n    if (channel0) channelsToProcess.push(channel0);\n    if (channel1) channelsToProcess.push(channel1);\n  }\n\n  if (channelsToProcess.length === 0) {\n    throw new AudioInspectError('INVALID_INPUT', '処理可能なチャンネルがありません');\n  }\n\n  // K-weightingの適用\n  const kWeightedChannels = channelsToProcess.map((ch) => applyKWeighting(ch));\n\n  // ブロック処理のパラメータ\n  const sampleRate = audio.sampleRate;\n  const blockSizeSamples = Math.floor((BLOCK_SIZE_MS / 1000) * sampleRate);\n  const hopSizeSamples = Math.floor(blockSizeSamples * (1 - BLOCK_OVERLAP));\n  const dataLength = kWeightedChannels[0]?.length ?? 0;\n\n  if (dataLength === 0) {\n    return { integrated: -Infinity };\n  }\n\n  // Integrated Loudness の計算\n  const blockLoudnessValues: number[] = [];\n\n  for (let pos = 0; pos + blockSizeSamples <= dataLength; pos += hopSizeSamples) {\n    const blockChannels = kWeightedChannels.map((ch) => ch.subarray(pos, pos + blockSizeSamples));\n\n    const loudness = calculateBlockLoudness(blockChannels);\n    if (isFinite(loudness)) {\n      blockLoudnessValues.push(loudness);\n    }\n  }\n\n  let integratedLoudness = -Infinity;\n\n  if (blockLoudnessValues.length > 0) {\n    let finalLoudnessValues = [...blockLoudnessValues];\n\n    if (gated) {\n      // 絶対ゲート（-70 LUFS）\n      finalLoudnessValues = finalLoudnessValues.filter((l) => l >= ABSOLUTE_GATE_LUFS);\n\n      if (finalLoudnessValues.length > 0) {\n        // 相対ゲートのための平均計算\n        const sumPower = finalLoudnessValues.reduce((sum, lufs) => {\n          return sum + Math.pow(10, (lufs + 0.691) / 10);\n        }, 0);\n\n        const meanLoudness = -0.691 + 10 * Math.log10(sumPower / finalLoudnessValues.length);\n        const relativeThreshold = meanLoudness - RELATIVE_GATE_LU;\n\n        // 相対ゲート適用\n        finalLoudnessValues = finalLoudnessValues.filter((l) => l >= relativeThreshold);\n      }\n    }\n\n    if (finalLoudnessValues.length > 0) {\n      // 最終的なIntegrated Loudness\n      const sumPower = finalLoudnessValues.reduce((sum, lufs) => {\n        return sum + Math.pow(10, (lufs + 0.691) / 10);\n      }, 0);\n\n      integratedLoudness = -0.691 + 10 * Math.log10(sumPower / finalLoudnessValues.length);\n    }\n  }\n\n  const result: LUFSResult = {\n    integrated: integratedLoudness\n  };\n\n  // Short-term Loudness（オプション）\n  if (calculateShortTerm) {\n    const shortTermSamples = Math.floor((SHORT_TERM_WINDOW_MS / 1000) * sampleRate);\n    const shortTermHop = hopSizeSamples;\n    const shortTermValues: number[] = [];\n\n    for (let pos = 0; pos + shortTermSamples <= dataLength; pos += shortTermHop) {\n      const windowChannels = kWeightedChannels.map((ch) =>\n        ch.subarray(pos, pos + shortTermSamples)\n      );\n\n      const loudness = calculateBlockLoudness(windowChannels);\n      if (isFinite(loudness)) {\n        shortTermValues.push(loudness);\n      }\n    }\n\n    result.shortTerm = new Float32Array(shortTermValues);\n  }\n\n  // Momentary Loudness（オプション）\n  if (calculateMomentary) {\n    const momentarySamples = Math.floor((MOMENTARY_WINDOW_MS / 1000) * sampleRate);\n    const momentaryHop = hopSizeSamples;\n    const momentaryValues: number[] = [];\n\n    for (let pos = 0; pos + momentarySamples <= dataLength; pos += momentaryHop) {\n      const windowChannels = kWeightedChannels.map((ch) =>\n        ch.subarray(pos, pos + momentarySamples)\n      );\n\n      const loudness = calculateBlockLoudness(windowChannels);\n      if (isFinite(loudness)) {\n        momentaryValues.push(loudness);\n      }\n    }\n\n    result.momentary = new Float32Array(momentaryValues);\n  }\n\n  // Loudness Range（オプション）\n  if (calculateLoudnessRange && result.shortTerm) {\n    const validValues = Array.from(result.shortTerm)\n      .filter((v) => v > ABSOLUTE_GATE_LUFS && isFinite(v))\n      .sort((a, b) => a - b);\n\n    if (validValues.length > 0) {\n      const percentile10Index = Math.floor(validValues.length * 0.1);\n      const percentile95Index = Math.floor(validValues.length * 0.95);\n\n      const percentile10 = validValues[percentile10Index] ?? -Infinity;\n      const percentile95 = validValues[percentile95Index] ?? -Infinity;\n\n      result.loudnessRange = percentile95 - percentile10;\n      result.statistics = { percentile10, percentile95 };\n    }\n  }\n\n  // True Peak（オプション - 簡易実装）\n  if (calculateTruePeak) {\n    result.truePeak = channelsToProcess.map((ch) => {\n      let peak = 0;\n      for (const sample of ch) {\n        const sampleValue = ensureValidSample(sample);\n        peak = Math.max(peak, Math.abs(sampleValue));\n      }\n      return peak > 0 ? 20 * Math.log10(peak) : -Infinity;\n    });\n  }\n\n  return result;\n}\n","// AudioWorkletGlobalScope interface for type safety\ninterface AudioWorkletGlobalScopeInterface {\n  registerProcessor: (name: string, processorClass: unknown) => void;\n  sampleRate: number;\n  currentTime: number;\n}\n\ndeclare const AudioWorkletGlobalScope: AudioWorkletGlobalScopeInterface | undefined;\nconst isAudioWorkletGlobalScope = typeof AudioWorkletGlobalScope !== 'undefined';\n\nimport {\n  AudioInspectProcessorOptions,\n  AudioData,\n  AnalysisResultMessage,\n  ErrorMessage,\n  UpdateOptionsMessage\n} from '../types.js';\n\n// 特徴量関数のマップを型安全に作成\nimport * as features from '../features/index.js';\nimport {\n  getRMS,\n  getPeaks,\n  getZeroCrossing,\n  getWaveform,\n  getPeak,\n  getPeakAmplitude\n} from '../features/time.js';\nimport { getFFT, getSpectrum } from '../features/frequency.js';\nimport { getSpectralFeatures, getTimeVaryingSpectralFeatures } from '../features/spectral.js';\nimport { getEnergy } from '../features/energy.js';\nimport { getCrestFactor } from '../features/dynamics.js';\nimport { getStereoAnalysis, getTimeVaryingStereoAnalysis } from '../features/stereo.js';\nimport { getVAD } from '../features/vad.js';\nimport { getLUFS } from '../features/loudness.js';\n\n// AudioWorkletProcessorの型定義（ブラウザ環境で利用可能）\ndeclare class AudioWorkletProcessor {\n  readonly port: MessagePort;\n  process(\n    inputs: Float32Array[][],\n    _outputs: Float32Array[][],\n    _parameters: Record<string, Float32Array>\n  ): boolean;\n}\n\ndeclare const registerProcessor: (name: string, processorClass: unknown) => void;\ndeclare const sampleRate: number;\ndeclare const currentTime: number;\n\n// 型安全な特徴量関数マップ\ntype FeatureFunction = (audio: AudioData, options?: unknown) => unknown | Promise<unknown>;\n\n// featureMap定義の前に、必要な関数をインライン化または条件付きインポート\nlet featureMap: Record<string, FeatureFunction> = {};\n\n// 通常環境では導入した関数を使用\ntry {\n  featureMap = {\n    // 時間領域の特徴量\n    getRMS: getRMS as FeatureFunction,\n    getPeaks: getPeaks as FeatureFunction,\n    getZeroCrossing: getZeroCrossing as FeatureFunction,\n    getWaveform: getWaveform as FeatureFunction,\n    getPeak: getPeak as FeatureFunction,\n    getPeakAmplitude: getPeakAmplitude as FeatureFunction,\n\n    // 周波数領域の特徴量\n    getFFT: getFFT as FeatureFunction,\n    getSpectrum: getSpectrum as FeatureFunction,\n\n    // スペクトル特徴量\n    getSpectralFeatures: getSpectralFeatures as FeatureFunction,\n    getTimeVaryingSpectralFeatures: getTimeVaryingSpectralFeatures as FeatureFunction,\n\n    // エネルギー解析\n    getEnergy: getEnergy as FeatureFunction,\n\n    // ダイナミクス解析\n    getCrestFactor: getCrestFactor as FeatureFunction,\n\n    // ステレオ解析\n    getStereoAnalysis: getStereoAnalysis as FeatureFunction,\n    getTimeVaryingStereoAnalysis: getTimeVaryingStereoAnalysis as FeatureFunction,\n\n    // VAD（音声区間検出）\n    getVAD: getVAD as FeatureFunction,\n\n    // LUFS（ラウドネス測定）\n    getLUFS: getLUFS as FeatureFunction,\n\n    // フォールバック（他の関数も含む）\n    ...(features as Record<string, FeatureFunction>)\n  };\n} catch (error) {\n  console.warn('[AudioInspectProcessor] 一部の機能のインポートに失敗、基本機能のみ使用:', error);\n  // フォールバック：基本的な機能のみを提供\n  featureMap = {\n    getRMS: (audio: AudioData) => {\n      // getRMSの簡易実装\n      const channelData = audio.channelData[0];\n      if (!channelData) return 0;\n\n      let sumOfSquares = 0;\n      for (let i = 0; i < channelData.length; i++) {\n        const sample = channelData[i] || 0;\n        sumOfSquares += sample * sample;\n      }\n      return Math.sqrt(sumOfSquares / channelData.length);\n    },\n    // 他の基本的な機能も同様に実装\n    getPeak: (audio: AudioData) => {\n      const channelData = audio.channelData[0];\n      if (!channelData) return 0;\n\n      let max = 0;\n      for (let i = 0; i < channelData.length; i++) {\n        const abs = Math.abs(channelData[i] || 0);\n        if (abs > max) max = abs;\n      }\n      return max;\n    }\n  };\n}\n\n/**\n * AudioWorkletプロセッサー：AudioWorkletスレッドで実行される\n * リアルタイム性を保つため、非同期処理をノンブロッキングで実行\n */\nclass AudioInspectProcessor extends AudioWorkletProcessor {\n  private options: AudioInspectProcessorOptions = {\n    featureName: 'getRMS',\n    bufferSize: 1024,\n    hopSize: 512,\n    inputChannelCount: 1\n  };\n  private buffers: Float32Array[] = [];\n  private bufferWritePosition = 0;\n  private lastAnalysisPosition = 0;\n  private isAnalyzing = false; // 解析実行中フラグ（排他制御）\n\n  constructor(options?: AudioWorkletNodeOptions) {\n    super();\n\n    try {\n      console.log('[AudioInspectProcessor] 初期化開始', {\n        isAudioWorklet: isAudioWorkletGlobalScope,\n        options\n      });\n\n      this.options = {\n        featureName: 'getRMS',\n        bufferSize: 1024,\n        hopSize: 512,\n        inputChannelCount: 1,\n        ...((options?.processorOptions as Partial<AudioInspectProcessorOptions>) || {})\n      };\n\n      console.log('[AudioInspectProcessor] 設定初期化完了', this.options);\n\n      // buffers配列を初期化時に適切な型で作成\n      this.buffers = new Array(this.options.inputChannelCount)\n        .fill(null)\n        .map(() => new Float32Array(this.options.bufferSize * 2 + 256));\n\n      console.log('[AudioInspectProcessor] バッファ初期化完了', {\n        inputChannelCount: this.options.inputChannelCount,\n        bufferSize: this.options.bufferSize,\n        totalBufferSize: this.options.bufferSize * 2 + 256\n      });\n\n      // メッセージハンドラーを設定\n      this.port.onmessage = this.handleMessage.bind(this);\n\n      console.log('[AudioInspectProcessor] 初期化完了');\n    } catch (error) {\n      console.error('[AudioInspectProcessor] 初期化エラー:', error);\n      // エラーをメインスレッドに通知\n      this.port.postMessage({\n        type: 'error',\n        message: 'プロセッサー初期化失敗',\n        detail: error\n      });\n    }\n  }\n\n  override process(\n    inputs: Float32Array[][],\n    _outputs: Float32Array[][],\n    _parameters: Record<string, Float32Array>\n  ): boolean {\n    console.log('AudioInspectProcessor: process関数呼び出し', {\n      inputsLength: inputs.length,\n      firstInputLength: inputs[0]?.length || 0,\n      firstChannelLength: inputs[0]?.[0]?.length || 0\n    });\n\n    const input = inputs[0];\n    if (!input || input.length === 0) {\n      console.log('AudioInspectProcessor: 入力データなし、スキップ');\n      return true;\n    }\n\n    try {\n      // Add input data to buffer\n      this.addToBuffer(input);\n\n      // Check and perform analysis (non-blocking)\n      this.checkAndPerformAnalysis();\n    } catch (error) {\n      console.error('AudioInspectProcessor: process関数でエラー:', error);\n      this.sendError('Error occurred during processing', error);\n    }\n\n    return true;\n  }\n\n  private addToBuffer(input: Float32Array[]): void {\n    const frameSize = input[0]?.length || 0;\n    if (frameSize === 0) return;\n\n    // 各チャンネルのデータをバッファに追加\n    for (\n      let channel = 0;\n      channel < Math.min(input.length, this.options.inputChannelCount);\n      channel++\n    ) {\n      const channelData = input[channel];\n      const buffer = this.buffers[channel];\n\n      if (channelData && buffer) {\n        for (let i = 0; i < frameSize; i++) {\n          buffer[this.bufferWritePosition + i] = channelData[i] || 0;\n        }\n      }\n    }\n\n    this.bufferWritePosition += frameSize;\n\n    // バッファがオーバーフローしそうな場合は、データを前方にシフト\n    // フレームサイズ + マージンを考慮した条件\n    const firstBuffer = this.buffers[0];\n    if (firstBuffer && this.bufferWritePosition + frameSize > firstBuffer.length) {\n      this.shiftBuffers();\n    }\n  }\n\n  /**\n   * Shift buffer data forward to secure space\n   * Works as a sliding window\n   */\n  private shiftBuffers(): void {\n    const keepSize = this.options.bufferSize;\n    const shiftAmount = this.bufferWritePosition - keepSize;\n\n    if (shiftAmount <= 0) return;\n\n    // バッファオーバーフロー警告を送信\n    this.port.postMessage({\n      type: 'bufferOverflow',\n      details: {\n        bufferWritePosition: this.bufferWritePosition,\n        bufferSize: this.options.bufferSize,\n        timestamp: currentTime\n      }\n    });\n\n    // 各チャンネルのバッファをシフト\n    for (const buffer of this.buffers) {\n      buffer.copyWithin(0, shiftAmount, this.bufferWritePosition);\n    }\n\n    // 位置を更新\n    this.bufferWritePosition = keepSize;\n    this.lastAnalysisPosition = Math.max(0, this.lastAnalysisPosition - shiftAmount);\n  }\n\n  /**\n   * 解析実行の判定（ホップサイズベース）\n   */\n  private checkAndPerformAnalysis(): void {\n    // 既に解析実行中の場合はスキップ（排他制御）\n    if (this.isAnalyzing) {\n      return;\n    }\n\n    // ホップサイズ分の新しいデータが蓄積され、かつバッファサイズ分のデータが利用可能な場合\n    const newDataSize = this.bufferWritePosition - this.lastAnalysisPosition;\n\n    // Debug log for buffer status\n    console.log('AudioInspectProcessor: バッファ状況チェック', {\n      newDataSize,\n      hopSize: this.options.hopSize,\n      bufferWritePosition: this.bufferWritePosition,\n      bufferSize: this.options.bufferSize,\n      lastAnalysisPosition: this.lastAnalysisPosition,\n      shouldAnalyze:\n        newDataSize >= this.options.hopSize && this.bufferWritePosition >= this.options.bufferSize\n    });\n\n    if (\n      newDataSize >= this.options.hopSize &&\n      this.bufferWritePosition >= this.options.bufferSize\n    ) {\n      console.log('AudioInspectProcessor: 解析実行条件を満たしました、解析開始');\n\n      // 次の解析開始位置を計算（オーバーラップを考慮）\n      const nextAnalysisPosition = this.lastAnalysisPosition + this.options.hopSize;\n      this.lastAnalysisPosition = nextAnalysisPosition;\n\n      // Execute analysis asynchronously (does not block audio thread)\n      this.performAnalysisAsync();\n    }\n  }\n\n  /**\n   * Execute analysis asynchronously (does not block audio thread)\n   */\n  private performAnalysisAsync(): void {\n    // Set exclusive control flag\n    this.isAnalyzing = true;\n\n    try {\n      // Extract analysis data\n      const analysisData = this.extractAnalysisData();\n\n      // 一時的なAudioDataオブジェクトを作成\n      const audioData: AudioData = {\n        sampleRate: sampleRate,\n        channelData: analysisData,\n        duration: this.options.bufferSize / sampleRate,\n        numberOfChannels: analysisData.length,\n        length: this.options.bufferSize\n      };\n\n      // Execute corresponding analysis function asynchronously\n      this.executeFeatureFunctionAsync(audioData);\n    } catch (error) {\n      this.isAnalyzing = false;\n      this.sendError('Error occurred during analysis processing', error);\n    }\n  }\n\n  /**\n   * 解析データを現在のバッファから抽出\n   */\n  private extractAnalysisData(): Float32Array[] {\n    const startPos = this.bufferWritePosition - this.options.bufferSize;\n    const channelData: Float32Array[] = [];\n\n    for (let channel = 0; channel < this.options.inputChannelCount; channel++) {\n      const data = new Float32Array(this.options.bufferSize);\n      const sourceBuffer = this.buffers[channel];\n\n      if (sourceBuffer) {\n        for (let i = 0; i < this.options.bufferSize; i++) {\n          data[i] = sourceBuffer[startPos + i] || 0;\n        }\n      }\n\n      channelData.push(data);\n    }\n\n    return channelData;\n  }\n\n  /**\n   * Execute analysis function asynchronously and handle results or errors\n   */\n  private executeFeatureFunctionAsync(audioData: AudioData): void {\n    console.log('AudioInspectProcessor: 解析関数実行開始', {\n      featureName: this.options.featureName,\n      audioDataLength: audioData.length,\n      numberOfChannels: audioData.numberOfChannels\n    });\n\n    const featureFunction = featureMap[this.options.featureName];\n\n    if (!featureFunction || typeof featureFunction !== 'function') {\n      console.error('AudioInspectProcessor: 解析関数が見つかりません:', this.options.featureName);\n      this.isAnalyzing = false;\n      this.sendError(`Unknown analysis function: ${this.options.featureName}`);\n      return;\n    }\n\n    try {\n      // Execute function (supports both sync and async)\n      const resultOrPromise = featureFunction(audioData, this.options.featureOptions);\n\n      // プロミスかどうかの型安全なチェック\n      const isPromiseLike = (value: unknown): value is Promise<unknown> => {\n        return (\n          value !== null &&\n          typeof value === 'object' &&\n          'then' in value &&\n          typeof value.then === 'function'\n        );\n      };\n\n      if (isPromiseLike(resultOrPromise)) {\n        // Async result\n        console.log('AudioInspectProcessor: 非同期解析関数実行中...');\n        resultOrPromise\n          .then((result) => {\n            console.log('AudioInspectProcessor: 非同期解析完了、結果:', result);\n            this.sendResult(result);\n            this.isAnalyzing = false;\n          })\n          .catch((error) => {\n            console.error('AudioInspectProcessor: 非同期解析エラー:', error);\n            this.sendError('Error occurred during analysis execution', error);\n            this.isAnalyzing = false;\n          });\n      } else {\n        // Sync result\n        console.log('AudioInspectProcessor: 同期解析完了、結果:', resultOrPromise);\n        this.sendResult(resultOrPromise);\n        this.isAnalyzing = false;\n      }\n    } catch (error) {\n      console.error('AudioInspectProcessor: 解析関数実行エラー:', error);\n      this.isAnalyzing = false;\n      this.sendError('Error occurred during analysis execution', error);\n    }\n  }\n\n  /**\n   * Send analysis result to main thread\n   */\n  private sendResult(data: unknown): void {\n    // Debug log for message sending\n    console.log('AudioInspectProcessor: 解析結果を送信:', {\n      type: 'analysisResult',\n      data,\n      timestamp: Date.now()\n    });\n\n    const message: AnalysisResultMessage = {\n      type: 'analysisResult',\n      data,\n      timestamp: Date.now()\n    };\n\n    this.port.postMessage(message);\n  }\n\n  /**\n   * Send error to main thread\n   */\n  private sendError(message: string, detail?: unknown): void {\n    // Debug log for error sending\n    console.log('AudioInspectProcessor: エラーを送信:', {\n      type: 'error',\n      message,\n      detail\n    });\n\n    const errorMessage: ErrorMessage = {\n      type: 'error',\n      message,\n      detail\n    };\n\n    this.port.postMessage(errorMessage);\n  }\n\n  private handleMessage(event: MessageEvent): void {\n    const message = event.data as { type: string };\n\n    switch (message.type) {\n      case 'updateOptions':\n        this.handleUpdateOptions(message as UpdateOptionsMessage);\n        break;\n      case 'reset':\n        this.handleReset();\n        break;\n      default:\n        // exhaustive switchチェック（型安全な未知メッセージ処理）\n        console.warn('Unknown message type:', message.type);\n        void message; // 未使用変数警告を回避\n    }\n  }\n\n  /**\n   * オプション更新（部分更新をサポート）\n   */\n  private handleUpdateOptions(message: UpdateOptionsMessage): void {\n    const newOptions = { ...this.options, ...message.payload };\n\n    // バッファサイズが変更された場合はバッファを再初期化\n    if (\n      newOptions.bufferSize !== this.options.bufferSize ||\n      newOptions.inputChannelCount !== this.options.inputChannelCount\n    ) {\n      this.options = newOptions;\n      this.reinitializeBuffers();\n    } else {\n      this.options = newOptions;\n    }\n  }\n\n  private handleReset(): void {\n    this.bufferWritePosition = 0;\n    this.lastAnalysisPosition = 0;\n    this.isAnalyzing = false; // 解析中フラグもリセット\n\n    // バッファをクリア\n    for (const buffer of this.buffers) {\n      buffer.fill(0);\n    }\n  }\n\n  private reinitializeBuffers(): void {\n    this.buffers = new Array(this.options.inputChannelCount)\n      .fill(null)\n      .map(() => new Float32Array(this.options.bufferSize * 2 + 256));\n\n    this.bufferWritePosition = 0;\n    this.lastAnalysisPosition = 0;\n    this.isAnalyzing = false;\n  }\n}\n\n// AudioWorkletプロセッサーを登録\nregisterProcessor('audio-inspect-processor', AudioInspectProcessor);\n"]}